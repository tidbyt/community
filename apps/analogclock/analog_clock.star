"""
Applet: Analog Clock
Summary: Shows a simple analog clock
Description: Shows a simple analog clock with month and day.
Author: Chris Jones (@IPv6Freely)
"""

load("encoding/base64.star", "base64")
load("encoding/json.star", "json")
load("render.star", "render")
load("schema.star", "schema")
load("time.star", "time")

MINUTE_HANDS = {
    0: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAhtJREFUWEet
V1mywzAIw/c/tDt4Fbsz0370vSQGYyGJtNEfP42I+pd8jagRf3Un8Es2b20Vv57zn/zjJNpBHZJ0
Pkl0/qTApIDqCAxfsGUZeheEBZQ5Fm56nbh2L2bPd9tHAXMdfld9mc9bo86BoxX8yRi4i1EVxy0I
IJCHap362f4cZZVHXN+tCwnjtaA1oj4DzN5+7M7NkQfBi13AXoWSg0DVfcCy9dGCqGEpP4BDtQzD
/g4qyQIM8SD4PItUsE3JIcpAzoLDt2MePXAZVPC4WvZQFpCqwW+tqp6dmdvqHReZuHk+aDtzRNRR
LdH5QxLuIbGE4cKzdCNyhBQeDyxEpgBQ4+Hp8hvhNGuj24JUPHbigZb24WBRKmGUIfdLqeD0opLz
aeMD+YIlyJg4S15IIKFLOFa6ZwOnm4nblFvzUHo/P6QbbzLTuWugpXo0F08BuYrk5qxTXD+Jiy7G
k5LpcV0qGpRWBc5UvZupMvXlnWc+MgjGktuHFjw0y2h479hozq3LfPwf7ByAEhhrWKyhpG4oap+J
rQ+4JJA3K8KlNYdSzpANd/QeLFTWy15VLNqfoV0W7BOyVLzrJXuGRYPmdsoOCCdG+6IuFeeBfKao
6UgNrLA+q+NOSdCTDM/ZkLrFj8Axzs+7BZxRoQkFoEsohJ0TCCFqdAdiQdBxzGIa+qhBkewe3o9a
Ywioe+kBKQkd74BbT0x4sE6iH9TS9yMYEPeeAAAAAElFTkSuQmCC
""",
    5: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAgVJREFUWEeV
V1kWxCAI0/sf2j4VlCUg9Wc6U2VJAjK90eqttTGfz4N7wz+UP3vrbbSxTTq728z8OVzyjI+rtzZW
yHcFTnxS+ggMILL1TJ9TMrE5cMlBiADDV8rw0Lgh/7OmHyL/jWTJcPfUJKBgDeyYBEYzqYQT6xNt
lYhKwe/gQuP3xVWy3szfpNJ762Ns3T9XvgkGplw6B0RAYNcY7KIM1avU8a1fKLfex6r68zKvpxJM
KE0v9uVoSkc4fzJQb0RsCueznU9Ex1TkjG4YaTnmrtTTMDMAzTuqFdhBnNJPPKdGhbXYaVgBsymT
KSs00LJV95b7c4ETpi487hJvwsG1URQhOZUo3cS28OZyZYGwPJgvWlwA50hePczpr+xxOI6CRAE5
nYCCN78bgRf3oF3/qI70IuGqza+EsIjOPbwforFHJGADp26s1SNlUpa2OaQcJXAdEcI94cHV84Dq
k5nCF9JB3QCsd65v1t8/AZi2I2YmeRvqmWB7fCR5DCd1g5qDggk0ItDLEyruFLg3MWK10dA2Ijrt
R8uAQFsEttUCyevAQCf0MnpImCevjK+kzwAK7sTjSvthSBZzlYqLgR0gyg0g24i7/6lfPxNm9RU5
krDcKxH8PYBVoyiIEX5kUolt3Zs0sBux6kb00lyI+D1YbcN8RVzVkYpKRMhNjCOrMIvAtNYPh5bm
KVMwBCMAAAAASUVORK5CYII=
""",
    10: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAgBJREFUWEe9
V0m2xCAIhPsf2v9QUEBAOoufVbplKIYCg/APDwLASPzQWf54zcoSlIe3D/a8ASAijKFx1gbXKQLg
cOEVesERWQCEsVKECGBALOA3uI91mwAWaMFtSjB/MIYsDouxk6UArAChHO5UUg44owIijfPHctdt
to3Ji4G0dTs+falaOjUF6DQjEGu+OEY19zbUXwUNFU+oMVlJtazC3ok1DlX67jkoJuWUVPvXotjx
oxqQe94Q8cB0gtt/M1giE1kek3fRHFLInNePJFc9QSwf4jgumji50MUc8BAtY5QxcUvhtZ5rEIne
M9OieRzRW5LuD8voBwAaM2Noh6EQPz3yXlBcQMAxcOTp1jaFxm7dhCV4YdkdwNrB/jpoH3N9bsNT
ofv9LrXVuGZ1sFGrgHYGXlGXi2kt7b3KD5PiUb4wWqlyzrX4lAi9RreljUmDdI3bJVsmzpkpWVQ/
PYF4xVzYp+lOTRIwWVetQu3717p/RFP6vuc5er9q0gGvJ/fVycGiLW3OMPx9st4BwqWTgcyD0KoZ
VShW9AIfObWms29bVIw7GrrmDFuD76170f2MkyulN2U8iD5ZTiakCeU2vAA8HWqyxIs+NeE/nsx4
oUatKNACJ0Lx2O0w1srIx5r7TlTjo7T5TOZOOX3y8W01tujn2R2hMP1Ins5u3sjgDxH02CYOJEj0
AAAAAElFTkSuQmCC
""",
    15: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAexJREFUWEeV
V1kWxCAIg/sf2nlWGNmiOF+tVdYkOEzzx0Q8iMb3Ij+mvWCf13a/155zz5URf3q63uaAU+iw+JCX
dKW2sgJI6VdlgGm2P1QhzLXwY2IaNExl9sHqSXo4m6L1dL2su2pTbGdgXBVhKy4kyBNQQtfLAJiJ
BsjkKeLLZteCNthQdH16OLIB7mnBiZiHVIPX8/z0Uh0Q2Fz2NCzK1U8q0O3/Kg8ScLRXsGCGBQCg
uw/Z7zAWl1RnmFmquNiiFdwBWPDe0m4Eok6AtgUMlGIVwjRZNxnWIkspRB5ht3IUswO4PithKGvT
LRg9+XTsmi16HW87AgMeoSfqu4q8dXiloZ+9CRcfMqbhtc/TY739z6R2zwUXQMVRxLh2gQzelZhv
FajEKcmEjvQirMiwsKVgwZZgy4bX4eT94HqBAHza3/FDcr7Nqn73gSEYSPeRdEHyVbx1/4Sk2A8H
wpvh7mX0bieAcL0ilWpNXacyDSCG615Ls4HkpdCRCCEnG4SwcvmDZ8RLyUULzUU8s+DF3imt+C/n
u/pvzxaOCQS5jLeoXjTUd+1fgRsIsxZUo2WP5pnwUgIgfeaK9gZCpEovVhREMokwwNtGgfCCzsQW
H9zceh/nWviLXQUQFDqzwNjMwolFq10sg8Fp/wcajNImxfRZhAAAAABJRU5ErkJggg==
""",
    20: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAfRJREFUWEe1
V0uWxCAI1PsfuucJogjFJ4vJpjsJQlEUaOb412uOMX5phGVBF5lCezHJHbGTOcavYSfx9q+GwEA+
sWJWRA6C54eBE1MbUkbrjYI0x5i/OX7yLKbuTYPW+eQ8gFsQVRtDCQqqgN0cInZeC1URz70vKy+O
S7XfBBnbCAEDTREIihvT6ecBClA/AHoCNAyAcjg/j66cpADtqiUxqPfpg6GXxSlh3gVRJQIqy/YF
c8IAmEM1WFMIa4jlqyTIAagSqNvwjEmF5zjAbdaswmn4d4oadJDWLxGKhr0MADVHk0hTvv6vuXCB
ssupxp5LoipBnmA//Y7lZiA29Q23RMcZ097HdNgBjmY3FHUgwqABnJzJThg+vmw6994nSota+Rd8
zkkngcOGpACPCJUGNCgUN8lIdqkVF54rEDvtemVcPU5WC7A6+HraYENQP5WC2hNRG1JJOHCqMyWc
L0O4bjA1VrhhgiUyNegw2XR7En3sz01cfUrRvMb0JOe3csf7WDAAwI+eKChmAEhKG8p/J0JN7J7j
MRTAY5sa71XVvneS7HNkO1x9uBwGbK+mat3nYdnpxIn9IMrUbOJBEfJ65cXUjVobfWXshFH8uDeK
fQyLGqiq7uF8N3RZp1OhjnYPLYBJBYVLEHzVujB13A/7Cpv+AV5b3CL7fq5TAAAAAElFTkSuQmCC
""",
    25: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAgFJREFUWEeV
V0eSxCAMRP9/tKYAAwqtMD5sbdmKrVYYGulDYwzeEuLfq4LeTVEagz81qHft0ZI9LmK7n5AyrAIP
IgmSW3bmN955fU/DiBQx4g1tE87WUAHQ4A+Njjkgk6p9DmV5dmVBKvPdLWLOEvT1ZHVooHwgd84I
zKSRcQc4wegpHnDA5xDiUBK07jMocZNpZ+XNrDSW/mOXlRIIoE9iBkxb7FtWaqlYDzIjcr5dmzlw
tWJPaXX+hytBwAzApu2e2JPybRiN3WRghU4b0TgEGjrharBLo0NkHcDRQEM/iOwjec7OpBPpDMI4
83wAlYghAfGuJCFap0J/bhOafX5X25u/OG8jCgLIc7JfiQbzDuOdDn+skhSBEt5NRx60Rp14LpnU
taHsfZ73SbJSADyaTXqmXxINDWJ2QZiAgjFac+A0XTWHd/zwwsrWkQkg6zVwOR1tXkycF8TjQq9+
bx035avdOk8qlVR8R56xlU0S8y0Kcr+/fzcSyeiW31T7XLWklzG/xQLZ2/eSO4dMRYpPf1D5yub0
zjyn0+WIsXKhXCIG2JIMT8ANJdTKyZ1zcEtXhTyDFtfdzxit7pIu8Fryr67YQQlKcUNIknpAsi4o
qw2mb6QjspAJNdZx1fp6hGu0PHa2RI1RLBeCoI0bzY1CKZFXGIhjw5yDJtRBv9c/4R978dMn3iah
0gAAAABJRU5ErkJggg==
""",
    30: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAh5JREFUWEet
VlmyBCEIk/sf2ldqkEUQe+rNz1R3YwwQFmo//qi11tVZ/7w+RW/tu/HkftoghjXgzuQ8QYqHpiwo
dw7wggged+bcAVwyQCyodY6ZOjJwTSijjIiNunwbnhGjpi4zgMtWfw9SgNAMj8+I1YoxHgGeeqO+
HPUKSAnYm7I4ZSIbpy17G0X5lhCoExNa+AzVMDMi8Y/Fm6XhAXygm9DzGS3Cu+i4VE4F+/vTiKQ6
YkEyg8SjodiRzxAn8OjQDocgrJolyriet2LLW1RfOr2oMvVYBVlbrasybsdyjgsVDSJvSpKxS3Oo
3FV8dVzTKmiz7Ur7yAL84d5w8uAlGuQjWq2MNyAlwlu2MrApcTdPYDv/kqlA1KivyrqLcLuJweAb
CLXex2xJSuyQ7rS0Q4ZfTQiWF83Zy7UfZx72tROhwqRFugi85U0cpsESm8LHs1t5QWmoC9KZDOYz
Ajtybg8wpZuotm5E27EoFVNKBiOKg0CIlvSQOpaEY5YnywnDea2/JmPY1REIRKSCAg2ocTCF/r5O
CYFX2pbQ2EwxMOv9Da0Bolkj/qcqYKDWVyOybeCLJ4t7Vqnltox955JGK31DDQ/H4Rf+UWHIOYeg
1rLI05z9CxNGvNomDJDHTeBav476/3BbxUtSMh4W3NxOJwKU6fmFkB9QJgX8MAtK3RSJJ1au1L+V
Xy71RxEqaooN9xtNUE9S8x4cfLf4A6p39CcoaJ/aAAAAAElFTkSuQmCC
""",
    35: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAe1JREFUWEet
V1mywzAIs+9/aHcwXlgEJvNePto0Y4MQEk57K169tTZKa2sr9yr6XpfYqGL01vtoo5Y9gShT3mAC
AO+9udddhOusppvReuttWI56a3145mR9tKRMbtaBShTEgWPglYTrLVxB9XYnAEBkUhLdpyxppXru
WG9WTJ8YQAFCLhLtGA2AEHOFXYY5mOIDStOs7Dp9jMQF0hOAZKco2XS+d7gAKwyg3MRkbWrXWLSX
AWl7C8gMpukDU/B85DWGM4uOYBGGkb5ShUyrqfIAXI5YQFF5NLqJEZIchGzaVZgq32TiA8bMPedA
KgdxjGUTMmscHXVnuKKDA9JzBUuH5LOIzGjp5lRyfPg95khsgj2SRP1Zn93UocULQNLfwJZzh7C9
hnlEn9Svqtfr4HuBGhq6UE734NoYarvLA4fHRT47SgLiTKs21Puq2RdAufwCAEH8o+mTBDSuVvjs
Om7d+WAqhvrB1AvxIMbj7WJoiI1hNUD3o3MX7oh9gDkiMcQcnS/5YWhCm51Pdvr402V7r9QsvZll
mehfxy6SwnmmaXsIKpjwLgGq7eHvlTkGkNv30Yr6ZgYQFfAfadbLDbLiTn3TvIAbj4E/Y+FgRS9Z
FO62ILEKImKfYuyMgh/VPyXNR2RXHffFjqjmi11/8YfWJH13p0IAAAAASUVORK5CYII=
""",
    40: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAfxJREFUWEel
V9uWAyEI0///aPeIjgImwO7OS1tluCVE29u/nr7fHq21+X1+Zo+y6+st93BHvfU2ZpD54tDh3nfM
yv6BPEsCstH79phV4d2QhJPlb9t14Cmt3h8Q8C7pTWuoEgj69KXB0Anhx5ukAyvSwXoHZgiv9Zx8
gi5B1kKwWXmMD8nD/ma0bzaBDILU3TXgyGrM5vdVPurknYJtMM1k1MwTjSaY/mOewIN1QOdaZF1O
A9LXyTb44HG05AR6oNUJJaXJoIauCUtm2yMNOoT8JmWKl1LfP/GUdICOl8L2YwqdcukGG2BF5Bp8
qFQHk+tQicRCQpjBK0VoNliQsCi3+aHPqOhoYTvR25iaRYicCcoFmlsCoktGtx18ivaxLc4DWaEd
oATvfbQh7KqflEEztqMbjnFJzpOnaypNnvEOf9ugrx4ST4eHZFuLJaxtKe6qBgi4nHLarovSOFLl
bCO+1wf8PXZWWqdq46rmV8nlKpCp9G0rgdPz5zfxYWvN5cBLMSo1YKVIrb0eh8f4ce+KzRRj798R
yO7NJYc7CcXsAAM/YkhcVFQME1/9m6D4kSr+L7rKfa9pgaQFlPNbhA7Qw8uBjEwlVN9x1uwBCevj
whDt9+Gsmlb+pH75kPsATgGNkbWsqoQV7OMj5ukevps6Pman7E3tdqRkqf0AVHDgKjqnCecAAAAA
SUVORK5CYII=
""",
    45: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAdxJREFUWEet
V9lyAzEIw///0e7gE4w4NtNMHxp7sYUQYtPoHz6NiPqP53Dsh4+9Sq9UoOwrJ+QEQOXAdUqBAnXa
+hIAAJdDPHKxUaMelAMzKErwIWMmr9u03xMq3y+A4v2zcgHnusyhxnQJPIpbf+4TBdw4PEyo8A/n
FmHGxNnX9R8oo9hmyxZ3QVWHKoUZZELFgpSqAgBDg4z2Fn4ElAmowTAwFlqjPhQeFHboAqktpg10
RSNqnf+mrlMxoV7PROM3wkwBaEmGjG0AfSCOVF7ABUSIomr1lIYSOeKb74xDsjX9/1JZSNFQuReu
5JEP9FHpQTG31M6H+5ixXhdcnY+LrPre75UP4xgzYI+uMwM0oC+xGrsr+j+OuzO+MJ3l+0BoJQWG
6hm/kkgZsALF5iNUYucka4FXDy2Wu9gpWGlTf+4UDprXOTvqAjBcMi87VroIgh0MULIPu2n9VNnp
7NTN6I3a8OwVr0SmhUbwSS5O0nHCd7kITtRqRGDajx5VF+iAyoWVZ7T1vl01AcBzxCJ4lXK8F+jp
qt1jI7C+2IMmroSFtW3eIs56weckia8VSP2mwxNMxqcNBazMzLPyj3bcc1P/DpRv8rkVZxe5DGY/
026XlYvg1bF8AHjwD0+kxCOwKhV+AAAAAElFTkSuQmCC
""",
    50: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAg5JREFUWEeV
V1kWwyAIlPsf2j5UwuIANl8tAWSZQUIjPjTGmCKUP054XnoZ0Rjzs7u8LkHiJYiRFvbXnEKDxtRc
oDbrZKGlh+YR3m9Usg/ajy3UCoEmC/9M/VndBxG7y8fvmKSJwLEV9WgwqbZBSgtAH/arpodSV1dT
RuMudHc+v+e8Heh3O8CTeStOUQ55OMaKutO6qF8IIfhfvhqSXSyokNweHsu5sBVgH6aIZYevBNGc
c8XvH8HsRaebYjWTtyMYgAl6nnIGvc3diBd1WYxEBcbqz3EcqBhQsafs0U4QKjDDFQd0OQBZb5BR
zIYGrVFPY3LiiZUXu2MLLKhVSYHdDK79qgaCRknVujY58eE1xwBgDAGQQuTlmSkGrgmE+ubv3PMv
ZZJ0Kh1u44CwrLxtN1RsrcuxetPrDGILwtgF+x/UqZ1XFvWehjm2S6fFRQqvOTtAcP9MVb+f395Q
J6im0QCPKRDA3VORxCUL74EvU0WTqBEsekn2T/ADSlaUgjDOR+encdpuIqaLsvjcO4GBdzngrOVT
SUxqXNlHG3AlY8trlQtqiqe9eelWWH5UIFoku0aZEQb4vXN8E1epw33tvnzqYRE3I+MbbT35/N7a
L62rp6QE0MHbUBGveIijx6l55QN248pnhOcVuvwf6vCdY7wCUN6tC4ZIof/w7O8kSaG8LkMHEq9o
tlW0Uv0fhYPzKHrRKX4AAAAASUVORK5CYII=
""",
    55: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAh1JREFUWEeV
V1cWxCAIhPsfmjwsSNdkfzYWyjCMBsE8CAC0RvR/APNmp6wJ/4YIQOQMHBc8DWTNlwYzvzy2nx16
mpPfPN4R+DeSrgNp0h3eZ4YzEATaCD6ihBshtoC0CpBurizGcZvMnj/r5B/7LCnA+Uh0hxk1Z3oq
VLMqBkWUVR/vVobZGhf8EeYutEHCbW+VMRhHQCJmzC967sV9lAuBlL+2OohElAWhyfPmVBs+WUWu
+HIzwWX9bp8Rkmnzl7rw7ompg/WyeXZZUYoXx1Hjmrq6gp/e4WZ93ifALkG08E8cf9EZEUh0xxfz
TiWBYEtWrgOhNZSnwTnVFRr5wIf7GaIC0LHEVGyFB3SzNXcT/KCAA+51p5dSJARi9U6f3GocNTqQ
birim3hFgTLLk72+uq4EUV+9DXU8/Ejdo3d4H9rJ19qpTH/iXKuZlkAx1atqZfDmSOzcFgYl7BP8
KRmVktkz5o3CFyjGdFJno7xL/5OwHtL255K6evnd+4Dni2j7zICEhDP+wHl9yxPVlqubFUi5Tz+X
Kp6G9mS4UyimWO7RZVJiENpQTFYNX4hLD3jSfvtz4bXTHM8Ck30AHXp6Tr4LUjBXsf+VYq2OdErv
/LMEGu5/3q5InAW62gevMXr8K+8PgTws8f0bPjDWt6GN83rlzy7C3b1qRyoRH1FyCFy1o/pE6jPN
oFqwNyQ8msD/sjbLxdWpk96cBPIBYtvsKSXnhL8AAAAASUVORK5CYII=
""",
}

HOUR_HANDS = {
    1: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAhNJREFUWEfF
V0kWwyAIxTvHU5g722cUZVRc1U3aqAyfz5AEf1oJACoAtKe/8NQ8Qa+163qpKwcHXQNuBe2tWdJS
Aqi1e74QcD3tYtl2yDIbqe8tujwA3IQgpEk4fg4Ru5AoB271faYPPL04NwU1QYVKUCSKmAGOLzwI
OpbSI4XxDQkpCDNeJFY2709JlKBjILg02OVwgHg62IpkbE/XEKT4RW25rAMqJ6Yfzceccy2l7GWK
mnI83LEg7E7VhCDnp5byNgx8hGRS70jIS4UffeRKftD7swkrQo0fZEniqT18MXX0H/l5annfI5pf
AFOC2krhWP2SS56haePUjXKdBwIBntO9yHiooE0Ye10PFFwUeUAqmbBFo/jF/S3dDSPRlZyJNE9z
M2t3RqiICU4g1FzGvrYoI0IohA7ZVYm2Zd5uN42FJjjTzbgqraL/9R7nAJYRkvY2cI6VAUQs84S0
1TwYbT33LaVfGzZ5aegKU3AHpRSyhx2L+2xwck67aGYuSFEZRh3YkQhtNnoDucb9X9MA/urG9VNm
ITpZ71VHVuApkVtRbZtiuGnI6/Y5WiTpF04ij9cUDHTnG33lhv8dQQCxxiYCWCDNOLjnIS4wQJwC
QiOqsuw0ndxwYJAGJ/EAylZFsRJ24B7P82Ak1leHFQlSvr1u6mJvzy8rrSz6zV0yU7Z3nbeTvTaF
0ONwXyDeeTREWT+C6ect0FKesgAAAABJRU5ErkJggg==
""",
    2: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAgxJREFUWEed
VlGWxCAI0zvXU9g7u08LihiE2X7NtAohJGhO/3lySqn1jd+P+XfEQu++JNY6+rJ/XrjEe7VE77Ai
yBrXmgV04yDnlNqoDm87CfPS9u/9+YIq8lJWvAQKpxA5pdw4LG/r4RqloncOPob3e2EmR0wtQwEI
ZFcB5hkagfcIP8V276bdgos7ThARWKv/UxW9jREXQrXHcpL/WNm7IJktgUF7GDlX+3kJcJMkb/1d
hB/KQ823Vi5j7A640Sv2GE6U0D2+8feIiEMaoEbOYYILW+lKKa2+tZPoPn3wiTkF59ARZKQC5ZWn
jIOh1rer7u4/cWYoEa6x6cIXC0bVMLGMQiIX4/7egou4mIBSntYlW2tdsaAkaHar+kjy8AQiN5xk
ck3P87T37XSL1k3LWzF3f7oivOrfEgPhmWNeMan9BVodN7YGGLGeVkVca7DildJn63TZaMFPY2YY
ly4C+PYyxwa6L7DppRJic8bjSQIz1qJ28bYpm+OaI3Z5TM28xm0JHVa2CyyFGyjm69EWMMwu+4Df
z9XfG0CibrRJ0/7h1EAPfqoGSBRYNNQb7BazBRJh4FDDstMTB5xPE8BWhKpod9u9XCkdLz+PAPcM
DjGMTg4LgaDXdkFgQIUvCtKf3SLLMnwrRiOCGgbLD3JymZTABU7JwZz2wGSydyXCFtxG/JlAIAuA
1Ev+AKPR5ia9VKs6AAAAAElFTkSuQmCC
""",
    3: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAf5JREFUWEed
V1u2xCAI00V3FV1076WKAoZHZz56WkWEEIPTW2+tP6099LKezfkNG/rRG/3G1xxYH8HY3Ecue72N
IBxHXjzHOIelQnPjk4lso5nkzvVTehuNM4aRHWUq5kbI77O39kgMQQg8pKcWDpUiGuPWTUkgqLa0
qCJOTNuUkTV5yqIBAsRu8ayGSdnID1FqwGJguU5Jb8/m/pEhlXJb2DLqtTS7OLBOAZNCD2jUU7yD
Ipm1qgRf/Sac1GIQEFcZloPwDMV4xZchoYSushwrFLMg8iDRS04i0AOz77bQb6w3kpa5DvyeuC/Y
UupB8DHDAWuxMJ2RHyMgucUBVzBgK/gIEyFAnRNEPgMQsmSMum0RAq/runZnecYuNEByQ8/7vmk5
kq118sJe8C7+lGzCeyNuZH0cQ09c2BD2y4QnYVh2cgXA0HvCgrwGO60p9QIQmHSBR2qf5+FlP9m8
0rjlDuQRYatV3D/fqV1OoIMDkZqgRqy3yDY8rT8EAAVhX2Iq9QfZiQCy6Hk1Swdfo42QgitXxAwg
FNVAMmrAFnQ0PlUC90hONdvznlowKwcMlVQUAnIBXFzxKIB5MfCudtMXlOJjn3cg3t1DLy+UvSEI
4CwifMHwnJ5ql20PlTBflAagyhB1w/WnzLnrg3+yJbH9wJX0r1kNj/qOyvL/4w/wMtIoMgN9MAAA
AABJRU5ErkJggg==
""",
    4: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAf1JREFUWEel
V2uaxCAIs2fe9hTdO7ufFSqPAM5Of80oxRAC2KPtPkdrrVfGiRHaOloby8Ezdnty6Bai5TswnwAy
X8+eNajAZUxRzBRcwoB0wgDYvMxFgkAHswlg+tslfZJG1grrXJN+SAZstXuEhlPykmTMMPAJAMSy
hIJ9ATVFjgYrrNFOOvyn+MSpGIBNSlZ9VSv4cD8QYVK0RlRH66A/mYge4SHLseqeb3WwQ8GCE5ah
g6EW6A/EahaRbIwmkgpHksma0A57SSPyW3TYaCodH+yz7eORNNu+pFKQ4Z97nt41J0A7YnMOALw+
ZciBkn7STi/sr+vq932/QQAIZf9eDKTpi0U3QAzcEgiuA8EhCBrO7UpSch+xsVIWewrLcKea14wc
v3o7r7Mf/Wj3L6cFaUZ7JgB1rLjj0VQUN6eht/Pn6gtEdClaKVHDHkIBi7ZkY4AMwCSeZp1PgS3s
yS49FVNx4qI3Aw1Yc6lgakogIHg8ksG7JoYRr2UpEDD0Fe3ZSNgptpazTYY1EHoJvYuJVEQlKaDk
V5VkqXNzwyOTJhNARmHACl52aPLPqTGqQ9Zpjr9FIITjP5c4DnM7CgS1SpZEmAnvoQd9opV6iXPH
hA+35rsgG14GiPQC+kSJT3SWsHu40gS1unuQrlvdnmlPN1MuD/46+PYiFkX5B2335SrLOrI7AAAA
AElFTkSuQmCC
""",
    5: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAiBJREFUWEel
V1GWxCAI0zvrKdo7u8+qEBCUeduP3Y4CQggZJyd4ckqpfX/G4niFBTSmd20Fn03XnFJueIZhRUtW
BPtAMzejBB2xp8MlU9VGuGnGKOWUU7sj1B36M1EFaNfrDWK7Np246ojntK2v/OaGjcaqNRrVgFlw
C5MfCXhkEbidurz2fkATWppyTqlhj26l4rhIUivPPSGi8DcJHVvrmQcMknWEMkyOlekPlS/AGQF2
ZiSiAcG3z4Sc71ADbQRuLUDKmozbA2Cbl0v/L3QgzHbUBK2kB+X0ZO0jYcdr9Hu8fxlrATlIsasL
RzSRhE5V/phy5FAXHFr9gwM8f1ptPagRYVSOGOVEVHv4WR50SqbQTnC3dG2srNVaanveR6BIQvOF
B82AAJgeOWs1jKYhkghIKh0+bQcNrzKMRtKh1tqeR6IQ6ymLgLj7hCZPnVBKba9ohcL7UOCSgBgQ
dPA+s7WW9jxvEFHQGznNsn7RUoP42IxSa3ujrYD8BycMHjBT1aZBtGVRamlvR8GJuXFjfhFoYIXd
UVR+YhvfhIcbDmyEM47NWr4Pky1Oc1W662DmZ5rjUc91kh20hIpFEb1XOyCmG5UODIS+JLAftTjo
ktRg9ClhSCBWF90i51ebWaUvnN4g2B2kOMfcnM1LPUheZ2xlD7FXPV0/Po9XhJj9wr0u3zieABUf
5WsC1+MRz0uYCztZ4G/2DS/l6EJjb/wB5Bn9KBQ8e0gAAAAASUVORK5CYII=
""",
    6: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAhVJREFUWEeV
V1kWwyAIlDNXT5HcmT4XIqtLv5qIgDAzGEgnP0gpITc0L9qi/7bvE2v1of6wv/+WAVJCEcjZTHms
onmHYvZ8K0Rp3/pfnb/5ChxSMWTOh9E9s8OtX7xaddne02bKOjpOAnCpcsgKfIsDIcNHDDluN6yO
kTjx5aTavUhfFS44q6UDfc93TfAxIFKCBICNHeT6OMQCeEQ2xQJ9Ztna48C6pouNMQsEDCAlQAs0
5Xg+6n9hv1KoA1qCPOdG4oI8Q7Gt9hRIAEzt4PALE5nM9ojNPFpoxxw2vYubGa147/WBTIXkKWuZ
GP0UQ0T2G7B9Y4aQN4eR7dIN4mmIAUBCHPrhH73nu05gH5osSs74vO+BlgSzeoJwMz8DGJdc8Hmf
swSCENebeX1yLviyBLa1c6TUTcCxE+O+r0Mq+ddawFp6CaYuQ/7MC1Vu7sil4Ps8bKQPXSPV3JZE
X8k2EqLVkWNAVGEVuBnWu1/Xev9C4oLWNibnjC+xYCwfHNooiRFeLY2RU10BorgQHOeSO2owJGGb
srqIBJAJB04tt56kLOZo3a5pwTHOvwRWAzHO3eWUOs2SgoJh9CAPM2m4o923vqiWBqIw9fdJITJJ
rG4JfuWaC5bIIJsgOA+jlPD2SnOgYRuQLyvQVII+FvnRNrCZvFFwNzydk3n9aXuD08g2+PLtFQjK
ZF9vRWP4cux04wcZ/kxr5iXLxi8KAAAAAElFTkSuQmCC
""",
    7: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAfNJREFUWEet
V2uaxCAIwzvXUzh3dj5BLSCIzm7/7E59JCSANkF/EgBUAMC/CSDV9nu8bQMJoLYZ/EmQoOI67/Fm
TBzEwMcCcHAFB2ddD2jDbaAaMSE9Iy4myCT96sb10puSrIZWCZVt0xe86cMiu7XRrQWoeYMQvCyS
aFEf2Jk9GdDcuZUduJgd2XQ+HoBZG00Fxj8zyJGcZtS8Zrh/9wxmDYRh3u+937KnmMyBZUmMOh2n
xuH2Cy9xDxSQJJxiOqz6N0JhouU/bwUir2NRsGiGIJG1GwV4Ez1BjaDscYNAB/Mwf+HirGmvicC2
G/2CaETrlLVrwT/BmrrzvQWBW9D85Fo+n3GaXCTBi2QqMNXSsjGGOedaSsEZ7USr1ump7VWht0qh
DeTxIQ4SLCdDGoqeCKzVTW/mso20iwInNvDoQ5N1jqsFnQDTYGEgfcj5qaV8ghY+UKTXdK5JANpI
YOw1GAQ82S8ykehoOKdccXJ+Hsp6d9JK3tJAZ80VaU+f8f4kh/5EQHt4xd64tioLLP5xTPsZexNY
GaougaEd3UJVK7C/E7x+sfSBVdJAAfPsj1XjhXpn48HsneiqC1jHcYCwXJ/WphNxtMyO1hx8JMZb
WHkgWrH4AmY0zx29JUHXxzfbzXOgV4IY00769aKXvZdViv0LcVHJKUJyEg4AAAAASUVORK5CYII=
""",
    8: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAgFJREFUWEet
V1uSxCAI1DOvnsLsmd0yYsKrlVTtfEweIkLTNDM5pZTy+Lq/e+r37byfD/yTU8r0clzIjC7P83o/
rsO8vzfT2bNhnb3OYAva0iwxL3ZNB46eMyXPQ7Zpg93g2JxT7oRkII6JvkZA+I7m99qhHR7AMgCn
5GFAvGx3sTP+BIBSzIGc8V1t44gCbBj/to/tlrBT3QWGDLYLZUmePsMounySfBF96ZLSuF8Ogqmy
OPUOQMKgY0ANmJHjVgVwPhiq3idi8hKcz6SEToYOH4akd6PnQo2nFgqb8epVMnzsXImIDrbkUjyn
Bn0C7H4tadsJIagRXzd+tZfTT+v+GrxBNZRzo/zU/nu1NaCxaGzqNLCeNfcalHGDL5dSes45tdZE
F9lzzmiRg7PhSq/W2q/mZG360w5ZNK/28JPjUmsfWLffNgD7KL1MmniuN/58qIxHp29LLf1qF1DN
aDD/1gVI8iyJFlQTMK5+b8erLlD4KKzX6t4KDgh3RJxhdfi5o6yf55Yy8Q6QblbsmpFfIs7PP4D9
z4CdkHh/HzZV0FicS4Ca91EuGd1XPKkTF4zxIfTEdZ/oH3sOhqbh2dDCoMnmdgZ7ieKcCIhRjAt4
ChTjMHzCHyZ7t4jrMaVnonUnaZXk9m9CiDW6qYsPM3BGr90ucLcE2nuaqJIqHuhi/AHLI9cov9BL
KgAAAABJRU5ErkJggg==
""",
    9: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAehJREFUWEed
V1kWhDAIa+88t/DQndedLYD6MW9skSWEVGv5etVSShMPkzVre1vTvf6fXbWW0o7jIAp9EkZcG2Bf
JeAn9BYuKzjPJE7AQNpOwwe9lnY6Ni3vL/Hnw6XQSSfXn7QIUsdq+lI1ioVxq2rYISRjZ9h0Ah7A
p77IyCjVT8BwqClkV+bDer28SiBfIOKS5kEf+8NIM2soBfl0TrNbJ92dhlccuE5Wmon4rgkBiY+I
GMp+q7p8PGOhkcFH7bUpZ5ADiQIBz6InNY3xieJSmTrS9QbMOrKU1gGVC4u/bkavMALWCNsJ1FJ2
u36/3xC3Uid/pXg+z/O9CKaEjujASUwdxyTKZrOQg/RZ4KALRHZG9Jqy4LNN7mrEbKsGAOmYa+45
RECOPVbM2qkyXqnwCaGo6FSntvaC2BA9NVp9cx4Ev4JsMhiEySO1LUFtc/n+Zk9OZkdfXq35nsYB
tzoax+v+1/FbOiD4wmCcTdZYeXRF48xyiF8viEq58mhPhnw5xSpG05Wp7+HVh5uB0lTRCiZjdYHz
lpIEjdyaNsFu4+jGM3tYErKb0cltsqg0gdQ0+SJ0ZIws3vBPPDkTK+DE/95QicxWDXOn4tRP0vXB
CehkdyHj3OvfeN6KSCBjU5DpRGwTW9Ck/9BuyiaInaJ+AAAAAElFTkSuQmCC
""",
    10: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAfdJREFUWEet
V1t2xSAIlDU3rsLs2R5FIyAPkzZfuUFkYGD0QrIeSAlqSrXZ6TtZD2nYxzdIkGrzmAa6gLxTc3vH
CBiKPQAp1bps+Jsu0f32jdr2DzwGFwEYSLVQhyHNwvIMMbT6PIH6ii11h4hlilybnQF4Ssw4/JCz
5yJsjRh8JrdywZP8MOyNEJY7wnPUA7Swo9cZDe0b5nFWMVJkw2FmaozgjC57WyuHBWn1wMYL32Yf
UJr85MjOnFvEL9ZvLptxaYliqLpiVQe/zx6LXGUTdj8tNH6LepaPoRE856uWcpuawTLQ1GtLnQMe
Zr2A82u+cm+Fct+wT4HHnU+dyIrzoLleOde7lKAavjTQfVGI3DYXMgEpXT9XH3ekhSjZwV4PNJIr
F28PjAjQaCk3r4amCyqu0Z0In3Wyl4Y30aEir157LhrsMOLMhLy8lbxRWZler8Ab6qJ+p+faCcZj
ABpIoUGnHLB1o4tJ522RAt4VFJuiOEjJPItA5BI0LX1moYp74VcOcVdTUP6rLyJe/qRo0eZxE2JN
523+y369/utsIKooJW+bNZeCFwS4S+PkfAoibSJ6HhwnZnWJFH9k4I9uowIad9bOL+g5mNBNiCSU
pQHK6fAOi5oRtEsb1P6f1j0U4ljW/d33PBKi6GK53QmVmHxY1+D+Ake11SfZo/mqAAAAAElFTkSu
QmCC
""",
    11: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAhNJREFUWEed
V1u2xCAIkz3XVTh3zd6D9YFAfLR/M9UIIQRL4eKhEEK+WD8v9XdTCN9h0U7z/+IIfoVjaBslgAPm
LbNEUaCQJwZ5XwngOwfimI8gLwP9qSg3HB7FoAHH7xoA08MCGxIjCiFvFCdh9H6k1RfXBLCS9gdu
yymMue8ZXjovE3/AxinxCrZYXtxP+WVxG7I6w0+/qUPQdcJTx95G8cq/FV/L0D0rxph/KXGipnt3
56HAehfMAJ1PE0h8Yk5/iVv6/gEe4mTf+bcBxCen9Ju0s8reJNYiFx2vnKAlh1PkUqSU3ihxizuv
LLYyohZLQ0W5UYjPk9OPmbD2elOdIsK3fVxPhC1VtPCrLEA1KGdV7sZvuxOWEIh6LzsGbRh/alec
qZECUWVLZAtKsIacJQrKhXWsNOf+xFU8wd15gmw74AMnM3rM9zv3GxkLDYCKH6einFHtI+4VMFqP
NWDvM1on4lQTOM7kLIAdIKqBc6loFirnCZD8iyrPXlcEzw9TYEnWFtSZOlPjSa+ZwGwC2mebky+a
XtcVW/PJ7Wc42cAZTkh5acnOyCyXiez5uB5SgrKyXOVlGNB5npjP3N1s6+3W5rFmGBAxyJo683ap
mfLyzjxGCdAVZ1KcybM7EKqEJzApT+MDNzKbWtR8R6yYWJVACqgaSXNBp8uWY3PIwPvKGTxUEN1y
S386vQLgj46K8A9G3+4mCN3icgAAAABJRU5ErkJggg==
""",
    12: """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAf9JREFUWEet
V1t2xSAIxD3HVSRdsz34BATBnuarTXgMMIPeBNdPAoBy53VwwU//9IxQBJxIPP8l72MAbooetgkg
FdErJQ4HIJ2kQ7fGwPjMWm8AVs+VSHSAwMfwgcDUZDNnPaeQl+U+AjVpAAljkiikV52gCPqmWqPx
nJMev7JRKuQkGRcAt8hmkBJAESp0XUdCl4QXgsRYz/OU9/tiSjL7bLHoyK5G5IwA3gbAM2/5Ofmw
kVfoGakLwJOf8nUAMoHbzB7MB0AMx+gHkCfn8r1vozLjBVfBpKHHgfo9RO9mlHMuLwIQrHZPCpJj
m98krGQ7lVYPUDnw/aDlhNC1slrCVLhXt49AoDtVo3VA3UfqSm2pBQCBkI+SOSAwHQBSQm48moqX
5JPwT3vS1cDsCQcQELPGUf5uiMKhYkqQShkj2HttiuGoknPl05UQU9GwWGuKxG4waGeHlO0BdiyV
HMGQJXtv3JBMEsZSd+yadGfCcyQuxsqb7jACsOBNYDKkunyO97Xl8WcZ8sNN33C2Dpa9LcPgAWue
Axv79FH4HTCEv92Mvd2zJssOTgJAo6l+MY7uiI0bbG7ra88izE0BK6IjiyW4imZOdwQ0nfwbk8mD
eANgtH4e+5aDN1J6AWB8kNtH/SFrqYDCMjSkzzW4TBXyuCPQLxhWQnEXOC/BGuQX3u7kJzrWpOoA
AAAASUVORK5CYII=
""",
}

DEFAULT_LOCATION = {
    "lat": 34.0522,
    "lng": -118.2437,
    "locality": "Los Angeles",
    "timezone": "US/Pacific",
}

def get_hour_hand(hour):
    return render.Box(
        width = 30,
        height = 30,
        child = render.Image(src = base64.decode(HOUR_HANDS[hour])),
    )

def get_minute_hand(rounded_minute):
    return render.Box(
        width = 30,
        height = 30,
        child = render.Image(src = base64.decode(MINUTE_HANDS[rounded_minute])),
    )

def main(config):
    location = config.get("location")
    loc = json.decode(location) if location else json.decode(str(DEFAULT_LOCATION))
    timezone = loc["timezone"]
    now = time.now().in_location(timezone)

    hour = int(now.format("3"))
    rounded_minute = (now.minute + 2) % 60 // 5 * 5
    day = now.day
    month = now.format("Jan").upper()

    return render.Root(
        max_age = 120,
        child = render.Row(
            main_align = "center",
            cross_align = "center",
            children = [
                render.Box(
                    width = 32,
                    height = 32,
                    color = "#000",
                    child = render.Stack(
                        children = [
                            render.Circle(diameter = 30, color = "#fff"),
                            get_minute_hand(rounded_minute),
                            get_hour_hand(hour),
                        ],
                    ),
                ),
                render.Box(
                    width = 32,
                    height = 30,
                    color = "#000",
                    child = render.Column(
                        children = [
                            render.Box(
                                width = 28,
                                height = 8,
                                color = "#990000",
                                child = render.Text(str(month)),
                            ),
                            render.Box(
                                width = 28,
                                height = 18,
                                color = "#FFF",
                                child = render.Text(str(day), color = "#000", font = "6x13"),
                            ),
                        ],
                    ),
                ),
            ],
        ),
    )

def get_schema():
    return schema.Schema(
        version = "1",
        fields = [
            schema.Location(
                id = "location",
                name = "Location",
                icon = "locationDot",
                desc = "Location for which to display time",
            ),
        ],
    )
