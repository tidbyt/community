"""
Applet: ColoradoSki
Summary: Colorado ski reports
Description: Checks all the colorado ski resorts for their current conditions.
Author: mharlach
"""

load("encoding/base64.star", "base64")
load("html.star", "html")
load("http.star", "http")
load("render.star", "render")
load("schema.star", "schema")

TITLE = "title"
WEATHER = "weather"
CONDITIONS = "conditions"
TRAILS = "trails"

VAIL_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAA0lBMVEUAAAAAcM8AbNEAbNAAa9IAYN8AbNEAbNEAbNEAa9EAbNEAbNAAZswAbNEAbdEAbNEAbNEAbNEAbNEAbc8AbdsAa9EAbNEAbNEAbNIAbNAAZswAbNAAgL8AccYAbdAAbNEAbNIAatUAbNEAbNEAcdUAgNUAbNEAbs8AbNEAcMwAbdEAVaoAbNEAbNEAZswAbdEAbdEAdtgAbNAAbNAAbdEAbNEAbNEAbdAAbdEAbNIAbNEAbNEAbNEAbNEAa9EAbNEAbdEAa9AAbNEAa9EAatMAbNFj5tILAAAARXRSTlMAIK3bmAhC7KZw/HgFoNFjp/79SweyrHvxRwq6BAlzu4IMts4SBsElIRm8A9LGFHqPDVeOt07wYqJJasKa+mnpPZ/gqx2QyAZ5AAAAAW9yTlQBz6J3mgAAAKNJREFUGNN1j2sTgVAQhl+VUEJJqFwrIeR+v3P+/19yzhkz9YH9tM8zu7P7Ar8rI4hSNsVyjhCST7igEFbqF4taqVzRqTCqnM2aZQJ1NtJoUrYdyZVbgMaM3gY63V6feD6CARViOEQ48mg3juBPyHQWO4DKL8yBxdJcrekyNltmdoC7FwJ+52BQoRzl0zn6fhLzrcs1edWifLunstiP5+v9J/cHd7cXyRaEPDoAAAAASUVORK5CYII=""")
BRECKENRIDGE_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAA6lBMVEUAAADdESLWGiD/AAAAVYAATIFEQzlFQzlFQzlERDrXGSHXGSHXGCAAToIATIAATYBERDxEQjlFQznXGiLXGSH/AAAASoAATIAATIAAgIAAAABFQzpFQzjYGSDWGSEATIAATICAgABFQzlFRDnTGiMATIAATIBFQzpFQzlJSUnJHChGQzpFQzlFQzlFQzozMzNGRDhFQzlCQjpFQzlFQjlFQzlFQzlERDdFQzlFQzlVVVVFQzpFQzlVVStFQzpERDhEQjhEQzlNTTNFRDpGQTdFRDlFQjlDQzdFQjpFQzhEQjlFQznXGSEATIBM+BirAAAAS3RSTlMAD3YCDEOZ4ONPocQgMeSFHmzPWsoBPvTjAgHr0Eg+q7wC9pNu8bhzyweAVPnUXAVx/h+BwPu2POn1A4X4BsNEf9gKzDOi0y5dkXDG6dGLAAAAAW9yTlQBz6J3mgAAAJdJREFUGNNVztUOwlAQRdGDF3fX4l68SIHiMrf//zuUJg3DPE1WcpINh9MF89wer0/yfz8EgiEgHInG4pSwIClS6Uw2l0ehWLKgLESlatQAud6wodky2kCn27Ohb5gwGI7GCoPJlIik2Q/mi6UpKzaBuibabBlgR6TtOahEBz7BkUj/A51OZw7KRbvyMPl2f/DS5+ttlX8AkOskmhkxkkEAAAAASUVORK5CYII=""")
KEYSTONE_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAABYlBMVEUAAAD/AADmJgXmJgTkJQTmJgDmJQPkJQTlJgTmIwTmJQTlJQTlJQTmJQTkJgTmJgblJQTlJAPlJATlJQTlJQPlJQTlJQTlJgTlJgTlJQTlJATnJgPmJQTlJQTnJADpIQDkJQXlJQTlJAPlJQTkJAPlJQTmJQPmJQTlJATMMwDmJgXlJgXlJQTmJQTkJQTmJQXmJQTlJQTkJQXkJATmJAXmJQblJQTlJQTlJQXnKAjbJADlJQPlJQTlJQTkJADlJQTmJQPlJgPlJgPlJAXoIwb/AADlJgXlJQTlJgTlJQTjJgPoJgPkJgPlJQTmJgTnJATnJAbkJQXlJgTlJQPlJgTlJQTlJQTjJgDkJQXoIwDlJAPlJQXlIwXlJQTmJATmJQPiJwDlJQPlJQTlJAXlJQXmIgTlJAPjIgflJgPkJQTlJQXmJAP/AADkJQPlJQTjHADmJQPkJQTqIADiJAfmIwXlJQRqQG3KAAAAdXRSTlMAA2Z6wBRTkLdIhLLyyHMoik1//Z/++4eI5MRK8MEVF2D3k5FU15b6vQVkqYmQrJe/72iFMinpxqQgB57t1Bz2WpWbaiwF4Ot/+ZRXX/E8Pyowxd7u9cIbZxab4m1Fhdwa29Wp4TxOJVjTpV0BmbgJmI8YIzOCraSDAAAAAW9yTlQBz6J3mgAAAMdJREFUGNNjYIAARiYGVMDMgmCzAuXZ2JEEODgZuLjZeXh5+fgFBEECQsIiomLiEpJS0jKyciABeQVFJWUxFVU1dQ1NsBYtbR1dPX0DQyNjRROwgGmpmbmFpZW1kJmNLStIwM7ewZiXgcFR2MnZxRWowa3U3cPTS1xLyduntNTXj4HBPyAwKFiwlD2kNDQsnC0CqCUyyjM6JkQiNi5eB+a0hMSkZNHSlNQ0mEC6cEZmFqdidg5MIDcvP5yBoaAQ7psiMFlcAiIBwtkg21yfDUAAAAAASUVORK5CYII=""")
CRESTED_BUTTE_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAaVBMVEUAAAClGi6mGS6mGS6mGS6mGC6qAFWlGS2oFiymGS6mGS6mGS+nGC2ZADOAAACmGC6mGS6lGS6zGjOqHDmmGi6lGS2qKyujHCumGS6mGS6nGDCmGS6mGi6lGi2nGiymGi6lGi2nGS+mGS6MxGZYAAAAInRSTlMAgOjJ6rEDWyP7+LprBQJq/qIKCcjKBiT57iDC8EQd0mxodrO4dwAAAAFvck5UAc+id5oAAABSSURBVBjTY2AgHTCiAQYlNIAQYGJmQRFgZWPn4IQLcHHz8DLw8QvABASFwOYLi0AFRMWgNopLgAUkpeBukAYJyMgiHCUnr8SgIIXsTGFFMvwGAGaQCzK47kmFAAAAAElFTkSuQmCC""")
BEAVER_CREEK_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAABC1BMVEUAAABeb4Bcb31ccHxccHxabnxdcHtcb3xbcHxcb31dcXxdb3xccXtcb3xecH1bcHxccHtccHxccHxdcHxccHxccHxccHtccHxccHxdcXxccHxbbXlccHtdb31ccHxccXtccHxdcXxdcX1bcXtccHxdb3tbcHxbcHtcb3tbcHxccHxcb3xdcHtdb3tccHtccXxccHxccHxdcH1ccXxccXxccH1ccXxccHxccHxcb3xZb3pbcHtccHxccXxccHxcb3xZc3lccHxbcHxccHxdbntccHxbcHtccHxccHxccXxbcXtccHxccnxcb3xccHxccHxbcHxdcX1bcX1cb3xYcnteb3qAgIBVcXFccHxK9NDoAAAAWHRSTlMAHl6CpiWdtYaFjIy8njm7dNH14un82/PKccQquofAk6nMWFFpfmu4U6Kxzna+m4iYoGCj3o3Fwpa3F99QishnKPnG/mblcICvb3jWd3XYv4SBgccdLgIJfyUEwgAAAAFvck5UAc+id5oAAAC8SURBVBjTY2AgCjAyMbOwMDMxQrmsbOwcnFzcnJw8vKwgPh+/gKCQsIiomLiEpBQfA4O0jKycvIKikrIAi4qcqpw0g7xahKx6hIamlkaEtk6EijyDrl6EPruBiqGRcUSESYSpGYO5RYS+pbkVr7VNBBDY2jHI20cIWEZoWAo5ODo6ObvIM0jLqbq6uXtIa3hqeXn7OEkDrTXzNXP2ExESFNb1VeQDO4zXPyCQgyMoIJiXNSQUzelh4YQ9CgCNkRqnTJVi7gAAAABJRU5ErkJggg==""")
CABLE_CAR = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAA7xJREFUWEflVkkspGEQfW2Pfd+XiH0NLjSxXDhJOJIQF5wlEtyQOHCQcOYiJBxJnMTBEsEFsa+h7YJYInZ68mrSPW38pDF6JplKOv33/339vVf1Vb0qFQAtvmClpaVoamqSE6qrq9He3v6h01TGEvDx8UFeXp4c3tfXh4ODA7i7u2NgYACJiYnyfnp6Gjk5OTg5OTGahFEErK2t0dbWhuLiYjm4s7MT9NzBwQGDg4NISEiQ9zMzM8jOzv7zBHx9fTE0NISwsDABWltbQ1ZWFvb391FQUICamhp539jYiJ6eHkXvLSws4OzsjICAAERFRcHPzw9jY2P4dATKyspwd3cHlUoFV1dXaLVanJ2dybeZmRmcnJwEJDw8HHFxcfLhs7+/PxwdHWFubo7t7W3jCNAl5kB+fr4A9Pb24vDwUDwlATs7O1knQGxsLOLj4xEZGSneuri4gN4r2YcI6A5gPhAsNDQUMTExAhYdHY2goCC4ubnByspKEez5+RlXV1eSvLzC2dlZ9Pf3vx8BGxsbeHh4IDg4WEB0YPzt6ekJrisZo3R9fY2joyNsbGxgfn5eAJeWliTsp6enuL+//xlBXRmSOe+SnjBJCMZwhoSEwMvLC7a2thJuJWMuEGxzcxOLi4sCtrCwgK2tLRwfH+P29vbNslSp1Wptbm6uADLLGV57e3tJJCUjc9Y575VRoFF8GhoaBOzm5kbyxFhTaTQabWBgoOL+x8dHyeydnR0sLy9jbm5OPnwuLy9HVVWV/K+urg719fXGYr7Ypyfw9PSEy8tL7O7uYnV1VQ/G5729PVnjHp0RtLa29usEUlNTtWlpaQJCz5gk9NoQTMm1P0bg915gaWkp5cRye8tIrrKyEhUVFbKlpaUFzc3NIi5vGXPHMPt1+14oYXJyshyalJT0LgH+mbJKtaOdn5/j4uLi3RxgpUxNTaG1tRUTExP6vXoCKSkp6OrqkrL7TqMuFBUV6UkIAYa9o6MDhYWF34mtP7u7uxslJSV4eHj4KUTe3t7S7SIiImQTw8mwGpphyL+6vrKyIt2U/UQIUAdGRkZEBVlu7HTj4+N6MaKOq9Vq/bTDWeAz65wp2Ak1Gg0yMjJ+dUMCDw8PCwEuZmZmyrehcW10dFRepaenf2qdTtJZQwyJgKkIKDn5fxEw6gpMlYS6PHt1BaYow3eT0BRK9O8RMBQiU0XghRD9LsXfTeKVFP/1ZkSPOQuwHXPe/05bX1+Xdjw5OSkwLwYS1ibnPDaet2b+z5LjaM4GxuGVkqyzH+8Ypb5i1G8xAAAAAElFTkSuQmCC""")
SIGN_POST = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAhxJREFUWEftVzmKKlEUPeUAFkaiYCDqDgQ3oJlLECNBcAfOgZGB4xIEwUhcgpluQHAHKgaKYiQKDtWc96lqbdqh6ndr0/RNXgX3nnveHV9JABQYkGQyiWq1KixzuRyazaYBFEBSCUiSBKfTCbvdfhNIURQ4HA60220EAgGhOxqNEI/HsV6vQZxrcjgcsFgssN/vNRWNQCwWQz6fF+B0ckssFgvcbjd4Ugg8n8/FeUuOxyNarRYajQZ2u51QFQRcLhd6vR6CwaChMOoxomOmrlKpCBKCgM/nw2AwgN/v14NlWJeOSaBWq/0jQMf9fv9pBMh8u92iWCz+EAKvSEG5XEa9Xv8hRcic6GlDo9V3tQ1FPz44iFTnp9PpgofJZLrLiwQ4Lz4dRHetzxTMZrMYRDwpKjBPvaJNQj2GHo8H3W4XXq9XmE2nU0SjUcxmMz0w75NQtbJarRc3+wyNoadjEiARCh2TAIncS8Vms8FqtdLGvRYBm82GdDqNRCKhhfbadYzuAtYZFxanYKfTeY8AnXMRca3y+7tlOBwiEolguVxCkmVZyWazgsAznPNy4/EYoVAIk8kEUiqVUkqlEmRZ/u6La/gkEA6HBZHXE2AKMpkMCoXCa1LAdczcswCfVQcXRai+CfW0odFiudqGegbR/+wC2l4dRHpu9Xt3waNR+PiGPO/rRzFUPUPb8I/AXwQ+/sqdT7anFCGdfNXv+Rsoznj4X4UMDgAAAABJRU5ErkJggg==""")
ELDORA_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAABtlBMVEVHcEznUwDnVADnUwDmUwDnUwDnUwDVVQDjVQDnUwDnUwDoUQDkUgDnVADnUwDjVQDnUwDnUgDnUwDnUwDnVADnUwDnUwDnUgDnUwDmUQD/VQDnUwDoUwDnUwDnUwDnUgDnUwDoVAD/gAD/QADnUwDpVADoUgDpUQDoUwDnUwDmVADoXQDoUQDnUwD/AADnUgDmUwDmUwDmUwDnVADkUQDnVQDmUgDnUwDqVQDnUwDnUwDnUwDnVADnUwDmUwDnUwDnUwDnVADoUwDnUwDoUwDnUwD/ZgDnUwDnVADnUwDnUgDoVQDoUgDnUwDoVADoUwDnUwDnUwDnUgDmUwDqUwDnUwDoUwDnUwDfUADnVADnUwDmVADmUwDnUwDmUwDoUwDnUwDnUwDnUwDmUwDmUwDmUQDnUwDpUwDoUwDnUwDoUwDmUwDnUwDoUgDoVADmUgDmVQDmTQDlVQDoUwDnUgDkUQDnUwDmWQDmVADoVADnUwDtWwDnUwDnUwDnUwDoUwDnUwDnVADmUwDnVADnUgDpVQDnUwDuVQDmUgDnUwDnUwDnUwDhWgDlTwDmUwDoUgDrTgDnUwDtZFa+AAAAkXRSTlMA47HIUN/gBgni/RYcQPQSacDNVnTb/snnKQP1N62TS51kAgSiOmMvYuxbCyyNAZVcpZHlExVd1hhr9vuJ+bvU3uiv05qpBbhqx2AhWupPbtWXVMUlys+WELRsUnGfZW/6vMume0jXIo6y77C/V66FPAono54m6RS6Q6AO8vfmhPCS0EmhOfMPPqr80hEd2m0ayJ2+fgAAAaNJREFUOMttk/VDQjEQx09Q5IGICIoYWJQgoGB3d3d3d3d36/5j9+QtEO6n731u28U2AGoD3WnymtiUKKPMkAshFh2XgDgTDMrgeIcC/TO/gwtnuVEYa8gm8eQ6Cou1hVHUqYqWFlSwXX0ARcwzB+KRjCSOAMRwWcb/6o9gwCuCfK6ZJuxnUvdo+y+pciWHojbsk/437KwtzZwEewBMZLGVn8sioe3QQqQNIHtHjYtMTeby2qCRyEuL7AIVACyjtbRVWoQFjPzwzsTj13miAzY49OTdFRecH6QwVg2xRMofPfRu0pcITYIyIl/4Luh0I4DOMQ/zXFxkyR4WDkLjYYjIm9uHK4TbPERCxr6K0GaQ8TW/isef8GQYJpjzlv8sLjjeUjGmBzuRd/f0GbqcArl/NXjIazwN10U/1mOS3sQ65gOgsAQLpwTTxevvDOica18x0oib393mGdKkaHlc0ZqgF1iZGkiYwVARwDfzSqWKlDqKvn4+/dTxsX83GebflMfxbU0l/Y/LrcGf07UgcFFVa1fo/wbT9Pxsfa1icLRXr2X0F1R8WZU8Pm0VAAAAAElFTkSuQmCC""")
A_BASIN_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAkNJREFUOE+Vk11Ik2EUx39vTJORMSWl6APCC+0ip4IlUTAzApFCicRW5IUzamvWRYWzLiaJUIZgqaUtPyIjIawgi6GCERlWIm1iaCg1y8zlR5ut5cfe2CtsDl3Qc/ecc57fec7/nCMQ7CjzRURx0WsxCcHCgjqI14gRa+XIZDLsneX/AYjXSGnDQkMwag/y4t0Azzst0F+3ImSZMXLPGdEx85uT2SpK9Vnorzyg7XU/TpcbZ9eNZfF+w/Y8MXbrBo5lpGD5+IVKg5royHDsk04Gbd85VdKEdXAErHcCIL6LN7PJmEvSti3ML3iI2RQl6eZyz3K2rJn6x68IDZEhCAKzc/PM9dyS3i4ClPliiS4TgyadVYI/gccjUtZgpuh6CwdUCZzL3c+ofRpDRQvDI3awmhajw5K1Ymulnr074gK69bCthxPFd5mankGrTpPKKms0U3G/g7EfP/H01gYHvOn7hLrwNhujFQzaxslMTaC6SM1X+zTVzZ1crTez0FuzMmBkbBJ1oYm31mGOZKTQ+tLKoX1J3Lx4lI7uDxy/VMdo+zW/BktLcP5yoytt4lFHL+ujFJKgn79NoM1WoctRkXOhFsuAvxs+DZ5VFZCaHEtxzVPKG81cPp1FVloi4xMODp+vITFuM+sUa7jX2o2ru8qndADAPuVEY2zEO4q7lDHSNLpn5+h6P4S3I+Hy1Thdf5YD5Dt1oiEvnYYnXQzZxsErjccDEkqAvsDhWdoq31cidheIUw7XPzdvpY0Mvo1B9zzQ8ReLQPIRRnGFwQAAAABJRU5ErkJggg==""")
WINTER_PARK_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAD5UExURQAAAAAAAAYBARACBBgEBhwEBxcEBQ8CAwUBAQQBATwKDm8SGpAXIqQaJ7AcKrQcKq8cKqMaJ40WImwRGjcJDQIAAQkBApgYJNAhMc0hMcwgMMseLs0oN80mNosWIW0RGs0gMckeLsoiMtdXY+65vu2yuNZQXcogMMoeLl4PFjoJDsQeLtJBT+mgp/zv8P////rr7eeYoNI9S78dLC8HCxIDBLdsc/3k5u/x8Pn5+fzf4qtjaQsBAnN0dKaoqFBQUNbW1snJyfLy8v39/dra2szOzmZmZgsLCwgICA8PD0VFRTAwMMTExH9/fx8fHwkJCQoKCiEhIQICAgRRmdwAAAABdFJOUwBA5thmAAAAAWJLR0QvI9QgEQAAAAd0SU1FB+cLDRIhL3rDN/IAAACTSURBVBjTY2DABIxIAMplYmZhZWVj5wALMXJycfPw8vHzCwgKCYuIAgXExCUkpaRlZKWlJCXkOIECjPIKikrKKqpq6hpSmiBTGLW0dXT19PUNDI2MTcCmmpqZW1jqA4GVtQ3EGls7ewdHJ2cXVzewvQyM7h6eXt4+vn6e/owIhwUEBkEdhuJUBhwCDOh8mAgDVgAA1iAPbTv569UAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMTEtMTNUMTg6MzM6NDYrMDA6MDB7TNvEAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTExLTEzVDE4OjMzOjQ2KzAwOjAwChFjeAAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0xMS0xM1QxODozMzo0NyswMDowMPtzSRMAAAAASUVORK5CYII=""")
COPPER_MOUNTAIN_LOGO = base64.decode("""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""")
ASPEN_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB4AAAAgCAYAAAAFQMh/AAAAAXNSR0IArs4c6QAAAkxJREFUWEe1VkmqMjEQTjssdKM4oYhLd+IdBM/gMfQI4hH0GJ5B8AyKO8GNgmOLbhSc8qg80q/SL91J1/v/Bm0llfpq/KocRnz2+z13HIeVSiWHooJ0CYBc1+XwzufzJB2kS6fTicdiMeEo55wETgIGbyHMCBh+RtIVSViGWILi3OZyuUi6IgnjEPsL6vP5sEKhYK3PSnA6nfJms8mwp9frVWBnMhnFhtlsxlqtllGvUWC32/FkMqmA4oI6Ho88Ho8r4I/Hg5XL5VDdoYegFKoXF9J2u2WNRkO5t1gseKVSUeQg9MViMVB/4IE/nzY59N8Ja7VfwLp8vt/vUOtxnA+HA08kEsa8K8C6fIKGqK0iWQ2n6Pl8Knn3gHWeDodDNhgMjAWo4+p+v897vZ53BGGfz+dexXtK/wUN6gzQsJzAFF9Bh5SpYwKXqfsF/Hq9yKMuyFAYocAFeKgowNRJYxMZHFUoVgczj02v2oDoZPw9rgBH6deoBvgddMbjMW+3238a6jZG4FCvVqvvqj6fz2KNgWcymbBOp0Pq3SADoKe73a7H5SLHfuD/kWfsmNQvPeOu6yqjD/7X6/U/ea6bWqPRSLChp1hH7tBe8ICVl8vFaMhyueTZbJbJRVAw1A8Ew8WreLTZbHg6nQ6sFWyInLVgsFwEdLuYVHa/31m1WvXwtKG0UQZGwAd7hy3WGYnPjTlcr9c8lUqJkJmApMztdmO1Wo2++tgQvpSJOrONHpvoj9p+JGA8bag0SwLGNGu7R/sjRwKWy4NphQ3j8C/NjG8fupgvLAAAAABJRU5ErkJggg==""")
STEAMBOAT_LOGO = base64.decode("""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""")
ECHO_MOUNTAIN_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAApVBMVEVHcEwCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gCk0gZ+eFkAAAANnRSTlMA9iedQ/dXDfIVSAjzaAYvydMPM/zIZgSPVvsYx8yTtxbfoKUFuNzVWe6wTj6qCk0JRvCypwfOygkFAAAAgklEQVQY01XN1xaCMBBF0dCriiKKgg2wIFgAnf//NBgSRzhvd6/JCmO8V8FGve/NcwSV69rD/f0APJwBlDlArf53lkBXOiWYXRBOPoERIuwXBFaAsIsIVluE5YQOYujzjgJkxcRtKvLvRNcQtA19cuZPDoaAm8RB0vvp2FcQzdU1awH+vBIp9G/MBgAAAABJRU5ErkJggg==""")
HOWELSEN_HILL_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAA0lBMVEUAAAAAcM8AbNEAbNAAa9IAYN8AbNEAbNEAbNEAa9EAbNEAbNAAZswAbNEAbdEAbNEAbNEAbNEAbNEAbc8AbdsAa9EAbNEAbNEAbNIAbNAAZswAbNAAgL8AccYAbdAAbNEAbNIAatUAbNEAbNEAcdUAgNUAbNEAbs8AbNEAcMwAbdEAVaoAbNEAbNEAZswAbdEAbdEAdtgAbNAAbNAAbdEAbNEAbNEAbdAAbdEAbNIAbNEAbNEAbNEAbNEAa9EAbNEAbdEAa9AAbNEAa9EAatMAbNFj5tILAAAARXRSTlMAIK3bmAhC7KZw/HgFoNFjp/79SweyrHvxRwq6BAlzu4IMts4SBsElIRm8A9LGFHqPDVeOt07wYqJJasKa+mnpPZ/gqx2QyAZ5AAAAAW9yTlQBz6J3mgAAAKNJREFUGNN1j2sTgVAQhl+VUEJJqFwrIeR+v3P+/19yzhkz9YH9tM8zu7P7Ar8rI4hSNsVyjhCST7igEFbqF4taqVzRqTCqnM2aZQJ1NtJoUrYdyZVbgMaM3gY63V6feD6CARViOEQ48mg3juBPyHQWO4DKL8yBxdJcrekyNltmdoC7FwJ+52BQoRzl0zn6fhLzrcs1edWifLunstiP5+v9J/cHd7cXyRaEPDoAAAAASUVORK5CYII=""")
LOVELAND_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAA2BJREFUSEutlU1oXFUUx//nvjfNfPi1CKYFpzPv5QVCxi9MEHUhKAhm4UdUFCRaqBAXNotSila7sAtRKq0UcWFFUFTwA91EkBZFoUI3cWFwKs3MvHnTGTXTYKmk85V57/7ljQaCTWYGnLu955zfPfee//8KuqzFxcXI1NRU23XdlFb4hJRvnXT6iIiwW97mPekWmPe8GQK7FHC3ho5FjchcMpm81G/xMK4rwHXdO7WSzwHsBnhcabxp23Z1YICC5z0O8CAhCwAeBBiH4EMa/ldjN41V+gFt28FysXi7Ak6K8Mxo2j6QK7mzAnkC5I8E7hKoszTbn/UCbQlwXXdEK3WYoKEE55ux+vtDjfjHJC4J5DeAGRAORP6CcMGkfJROp//YqqOrAOHk3DA8fAxAC0AUopdADAFqhMCKAkd9wzxmtFptiURuIfQ8iHorXp/L3Ji58l/IVYCc5z0n4GEAKyROQXizUAIEwTxM9azSOG3b9lJYaNl17xVDZkRDarHYK7ft3FnrCshezF4zVE8cB/kdhElA/USlr4WPZrC+ftaMDb1tUg7V4rW1aCP+AimzBE0F+QXAN3Yq9YGI6G11QFLOrZ5LhK0WLhSmSHW/k7KOhgnlcjnWDNrvAdISQQKUVQDXC/m9Bn4VwYuEnHFSqRMiEmxAtp2if7t5Hcp/19nthCdErljcD2BEgB98w1gydfAOifNKOAyo6wBWFPGyZVnNnoAwIO950wBmAsM4Emm3fW3Insurf741OTkZLFcqu4zAXwBRpsirUcMoVavVtdBa+raK8MoKnvckFO4DQFCulFPFQ8kLqb1C9UA4VfD9o47jlLcTXVer2EjqmJ2Bh0GZpjLmRfsnhPLlDtP8NJlMNropui9AWKDgeY9B+DwppwXatlPWvn5ctS9A5y3IRwUoQvCUJl4as6xT/8uLNifnisVHlMgshDlNjEQNc1+vq+lrijaCstnsjmgi/gYhD4kE+0dTo1/3c/qe/8HmInnPuwfgvN9szY2Pj68NHNBRdqCeadXrBzOZzPrAAf+ITmeUxhe2bZcGBuhYRiP2NAmtoH4n9B3w9UnHcS72A+k5pj+vrCQSjcZrEFYIXBbItEEcsCzLGwig40n5fLLValUnJiaCfKl063q8ltvqc9kK+DfYAX0oPAP/9AAAAABJRU5ErkJggg==""")
MONARCH_MOUNTAIN_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAMAAADXqc3KAAABR1BMVEUAAAAXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFEXKFHYLZtNAAAAbHRSTlMAAAkmOUMTV5bF4/IHRLPuNMQCDAhGsfmyTYEEGosextAgCnfveG361y99GDAOkvw65NYb2jUrb/7rU3WsMQVkjUfz2TxIKcujDZAGA+LTLReHYYr9kxEV+/Ad9kIstvf4Iezmc5cLVahlDxQdu0FRAAAAAW9yTlQBz6J3mgAAAZhJREFUKM9NUldbwkAQvFWRaBREQrB3kYgQFUtsQcVCEbADYgMrOv//2b0QP5iHu72Z7NxkEyEYxOjq7vF4erq7ZC1ccNnrVfr6VbW/T/H2thUaGPT54cLvGxyg/+eHAuhAYMjpIRoOaiE9/E+HR0JacJgVotGxcZqYVFu8OjlB42OjUpianpklmptfkPzC4hzR7Mz0FAuRpajBptoy96jLGpdGdClCIqYjuiId4wnTTMSlx0oUekysrmHdkAIldT0p85CxjrVV4TWxsemEoK0th6fNDZhesW1hZ9cN7q67O7C2xZ4F7B/YbcE+2AesPZFiwTwMtgcXPDRZSImjYyB90jnRkzRwfCrOzoFMtnV76+5sBjg/E1qOhbjk8hcXebnHWchpgjwFFEt8vry6vr665KJURMHDrfbNrXV3T2WlUq1WlDLd31m3N7b0fPChpjwmnMGHE49KDb6H1hs9PcMqvODVNF/xUrDw/OSEZNe60gDe3j8+3t+AhlJ3vzpvn1/fxab982M3i99fnx1/A9Gv4UTNG78u/QfJwlmTcNBrzQAAAABJRU5ErkJggg==""")
POWDERHORN_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAEIAAABBCAMAAABSHoJ0AAADAFBMVEUnYEAoXz8kYUAkYEL9/v8lYED//f///////v/+///b397///0lYT/9//4nYD8oX0D8///+//0nX0L//P/5//8hYj///v74/////f4iXDwnY0UlXUD5//4pYkIhXUD8//0lXT0qY0MpZ0clYkP///v9/fv6//73//z9/f4hWTr4//woX0IjYET9//shXj4lWz0oYEMoWkElVjv4//srXT8kZET6//snY0Lz//ooYUAwW0UsWEAsYkcoYD0hYUItW0Py//slXz8iWzopZUT8/PwfXT76+vomXUMqYUf2//ksYEPz/voyX0knYD3/+/8eYD0fYj8dWDj29fYoXkT7//wtZ0cmWT30//0bVTYxXkQvZkkiZEElZUj9+/0rZUb6+vgsWUQrTz86Y00vYkQhWT3q//b0+fYyVkL8/PguZUckUjv1//spVD0xYkknX0QpXkL4+PckXUL2/////PtXemkeWjvz//YvYEceXDxFaFQfTzf6//hBZFQgVTktXkbv//YkYT0fXkAqXEWcuqvy//7v//rK5NgtVEHq+/FykYIoXDtNc1/G29CoxLU2XUn8+fo0Zks1YUtlh3Y0ZEhSeGXm/fCRq538/v0rZEr79vfw//0jWj8aXTr/+v0vakrw+/Tv8PL/+fsuZk09XEsiSTJmg3B7nIwoUDo0bVBxin0lTzcnXD+50sI+YVGAoI21zb89Z1GoyLoxaEvc9uuasqhmjnn98/T//f0nYkI7ZFIzZ09afWzX7+JQd2Gvx7rq//syUj87alE1WkhcinP39fHF18nk8+qGopHC49Pp/vJ4loa81sjP5trU6t7b5N8pXz0WWDckZ0WUtKcnbEjW8+Tt9/Pf9+rZ8eanv6+it69XdmWNr55Aalfv/Pfn6OnU5Nno7evt+/I4V0Z7p5Cbwa5Ph2hOblq32ciDqZfM4dXO7d1FbFlcg25gdW5gf21ojXuuyrykuahSbl+93M3d3uCGtJrg8OPH8dt0lH9zo4unzrvX3d1ymoLW29eqy7goYULBXy8DAAAIoklEQVRYw53Xd1gT2RYA8JuMk5kheelGk5BMCCAkkFBCCSHSIiWI1AUBBRQEhIAERHpTQeyoYAMb9t4V+9rWus3t3XW7+3rv79s7E1B3/XhRzl8w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""")
PURGATORY_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAACHFBMVEUAAADQM1LOLEzOK0vOK0zRNVTPLk7MIUPLH0HLH0LLH0HLH0HMIUTQMlLMIUPLHUDLHUDMIUTOKErLH0LMH0LOKkvMIkTLHkHLHkHMIkXPLU3MH0LMIELQMVHMI0XLHkHLHkHMI0XSOVjMIELMIEPXU27NJEbLHkHLHkHNJUbMIEPLHUDMIUPNJUfLHkHLH0HNJkjMIUPLHUDLHUDMIUTNJ0nLH0HLH0HOKErMIkTLHUDLHUDMIkTOK0vMH0LMH0LPLU7MI0XLHkHMI0XQM1PMIELROFfNJEbLHkHgeI3MIEPMIEPNJUfLHkHLHkHNJUfMIUPLHUDLHUDMIUPNJ0jLH0HLH0HNJ0jMIkTMIkTOKUrLH0LLH0LNJEbNJEbTP1zTQF3LHUDLH0LMIELKGj7XT2vaX3jLHD/LGz/mkaLsrbrMIUTKGz7MI0XQM1PNJ0jLHkHRNlXtsr711NrUQl/MIEPQMlLURWLOKUronKvxwcrjg5fpnaz22N732+HsrLnnmKj10tnljJ7MIkTLGz7TQF7vuMP88fPqorDkjJ7he5Dwv8n88vTqpLLPMFDig5bwvcfki53tsLzYVG/XUm3vucTrp7TutcHporDyxc7ZWnTROVj99fbtsb3kiZvjhJfus7/88/XxxM3URGHnlab32uDnlaXfc4nNJkjQMVHNJEbNKEnsrrrzzNTQM1LOKkvpna3LH0HVR2TWTmkxoZBHAAAAYXRSTlMAAxITEwMOodTS0tWXCWT691gQu7EMTvTvRQiongY86+Y0A5SKASzg2iV+/nUe0ssZafv5YRPBug9V9vNNC6+nCELuOwWbAzHkAYZ/I9fTH3D9/GsXx8MUXFcNuLQ+PAEBRnYXeQAAAAFvck5UAc+id5oAAAFrSURBVDjLY2AYFICRiZkFK2BmYgUrYGPn4IQDLi4Em5uHF2IEH38iHCQlI9gCglA7hIThYimpaSlwjogozBVi4mCB9PTEjMys7PT0HDBXQhLuTClpkEBuXn5BYVFxSWlZeS6ILyOL8IicPFB/RWVVdU1tXX1DY1MzUF5BEcmnSspAkZbWtvaOzq7unt6+DCBXRRU5LNTUwS7s7a+aMHHSZJA7NTRRQ0sLpGDK1GnTi2bMnAVUoK2DFpy6eokZs6fOmTtv/oKFixa3JOoboAe4oVH2vKldSxqXLluelbnC2AQjRkzNkleuSl+9Zu26ltL1yeYWmHFmaZUO9MnEDRuBPra2wRKptnZAd+Zs2gzygr0Dtmh3dIJFgrwz1nTh4gpToOyGPeW4e0Dk1dVwJC1PL4gCb5yJz8cXJO/nj1MBQ0BgYmJQMG55hpDQxMSwcDwKGCKMBSLxyTNERceI4lXAEBuHX54hPoGB2gAAX9WAu1s77k4AAAAASUVORK5CYII=""")
SILVERTON_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAA0lBMVEUAAAAAcM8AbNEAbNAAa9IAYN8AbNEAbNEAbNEAa9EAbNEAbNAAZswAbNEAbdEAbNEAbNEAbNEAbNEAbc8AbdsAa9EAbNEAbNEAbNIAbNAAZswAbNAAgL8AccYAbdAAbNEAbNIAatUAbNEAbNEAcdUAgNUAbNEAbs8AbNEAcMwAbdEAVaoAbNEAbNEAZswAbdEAbdEAdtgAbNAAbNAAbdEAbNEAbNEAbdAAbdEAbNIAbNEAbNEAbNEAbNEAa9EAbNEAbdEAa9AAbNEAa9EAatMAbNFj5tILAAAARXRSTlMAIK3bmAhC7KZw/HgFoNFjp/79SweyrHvxRwq6BAlzu4IMts4SBsElIRm8A9LGFHqPDVeOt07wYqJJasKa+mnpPZ/gqx2QyAZ5AAAAAW9yTlQBz6J3mgAAAKNJREFUGNN1j2sTgVAQhl+VUEJJqFwrIeR+v3P+/19yzhkz9YH9tM8zu7P7Ar8rI4hSNsVyjhCST7igEFbqF4taqVzRqTCqnM2aZQJ1NtJoUrYdyZVbgMaM3gY63V6feD6CARViOEQ48mg3juBPyHQWO4DKL8yBxdJcrekyNltmdoC7FwJ+52BQoRzl0zn6fhLzrcs1edWifLunstiP5+v9J/cHd7cXyRaEPDoAAAAASUVORK5CYII=""")
GRANDBY_RANCH_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAQAAABKfvVzAAAAAW9yTlQBz6J3mgAAAmxJREFUOMttlM1LVGEUxn93vDrjKCIMgY0LU1vYx0xMOFKCoWaLCAlBDL+CpI0mtGqRBLVoES2CaOMfILUJhKBGxwEh2iRNhpiapDM0WSCNIjh+FT4t5t7GsTmHu7jn/p6Xc1+ecwwAYUURQVoI4MUNpFghSoQo2+nPRvqxcAe19HCcr0wTYw3wUE2ASuYZ4VMaM0DpLFSfwnoon5ziQLoU0GONq8uu2/gdhdSq/CzYTqfaFdagCmyBQ30Kqf4wyMG3ZoXVKSMtqFNYrTnPPijq0Jj8wqSIHqYYs37cy2k8LLBAyr4Z61JecY5uFlGjXssnhPJ1RWHFFNes+tMdZ2WdQqozucgSiwD4uEcej0hwiiX+cDg+k6DJ5Cwv2QXyaaGcu4xSyjy7lFCMAWyxzj4AKWZoNPESAyCfCnaIcYYhyljkI1cxEUmGGbMkccoduFkDYIdpnAT5xXNWqaGCGqYZ5Si3KbOaSuI2/3W4T4RLDFDFT0rZZI8twryligZK+GGbySSFx5LEecANGihkmRGOUcItrlHLO1YtwkPKZIVqJq3CPPc5goska/Qj8rhAjKdW01DFd5MoAVzsWKVtvmG7d5NhmjlPLU6m+U0xft47iFDJCf6PFKusMsI6Q1ynGPDjZdIkyjydzLFrj4g1IRN8YYENBqhkmQ3cdBJlFqGAxtWesRu5bGioV290Mu1WQ10Kqzm3Xy38siJqywyQU4MKq0OunLhbvZrQTZkZASpQp8b1REEVZcHFqtczhdSWxnVgCRj46MZPghniJDHwUIUfLx94wZwNGVlrxoWfJoKUW2smwRSTzLKXWTN/AQoSd2w34QHaAAAAAElFTkSuQmCC""")
SUNLIGHT_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAW9yTlQBz6J3mgAABYZJREFUSMd1ltlvI8cRxn/dc3EOksNL1GFdK++l3U0QxAiQA0ZeHOQh+VcD5CEGAscBFkngIwacw1pFKymRd6kVJYrHkJx7OJ0HCpHXVvqlu9GN+qq+qu6vhFJKcccoS0WQ5PQmMYf9kNeTmDgv8G0dlKBiaDzqeuy2HDpVC0OTiDvsiG8DlApGYcY/3sw4uZpzHYSoeIqpYjxrQdODaQRXoYmq1PE8j62Wyw82a6zXK1i6fAtA/+ZmUSoG85SvehP+eNDjrD9EpgF7cshmNeWdpsIvC/qzBcEbkxPRZSJqHNXqxPEm7+222Wk7mJqGEN8CWJSKIM7588mQTw+/xpmc8Wt3wP7KmHp6ha3nmKbE0Bdsy5Bnjk68useryOVg5PL87ylBuuCXT1fZ8G0sXXsbYDDP+MO/BlyOetx3zrhXHHPfmLBRiTH8CegCZWgIM8FrFbRsE9xr2oshvm3iVeF6Kvj4UPL+gw7bTYeKoS0BpknBUX/K84MejyqnfLDxb9acV5hZitIUZSNBGBpK6SAyMAWqJlDJjJqV8awN91Ykv+tLvjgSuIbA0Lrsth10UJwMQr44vcKLLtgJT1gRx1hbM4SlQwlCTgCFkNYyXJUiJCi3BXaBzAq8qcXjmWQUl3xyaOI4Du80KuhpUXJ6FXF8MeaHtTkPianoBRgumBFCFWA9gMo2mCtLVosxpD1E8gqlCoRmIqeKHS9lJOd8PpryahgymNXQg7jgYhIRTMbsb43ZcTMwLZACyhTMGvg/h9qPwNoEoUE+gvAARh8ikjOUUGALWnrOjhbhj2bMZnNOByF6P0iIkxg3HeFfHuJsTFF+gVADhLkF/vtQ/ylYGyBuasJog/c9EAKGHyLSv6K5OeI6whll3C99omiVF/0aMkgKXC1ju55Q9VJkpUDoCiFysFbB+z6Y3VvjAEKC0QT36TIqqYMBmAW2k/FuM6ZqpIzjDD1MCzwjx2uUWFULnBxEDsIEowPm2tvGb1FA80FvgHShtMASGHWdVi4ZaDAH5DwtWOQlRqkQ+QJKcfM8BCCXnN85FKgcVAZqsSzhhcYiU4SZzkLpVDSJNDTJPJdcBoJsWkCWgcxApVBcQ9YHVd5hv1yeZVdQhggSyDKyWUlvLAkzDc/UkS3PJFYmZzOTKKugcgF5sfQovYD5l8u5zIHyxvMCskuY/w3S16AUKi+gkESZzWlQIVIVVqoW+nbD5rOKy7XeYuLvkpQ6xniM1vEgm8Do4yVd1feWCUVCdgGzL2H8EeQjFGuUY52irDGprfP1uMMTp87DVRe95Zl0fRer6vMiblBPr9lzx0tuxQLyAMbPIT5dJh0BxRCSc8gGyztKQqpzHtoc5T7YPu26x1rdRrcNjXttl7Nug8NenbZVZatmItMJKBMwIf8PInp5W00qRykD6C7XeUyu1zhOqhxGDba7TfY6LtWKgS6E4NGqS5Su8ptxxJmXcd1UtIc5RlmAoyNrbZShAIG4yYMqNMqZgQgFOR7Dzhan8S5Dsc2vHq3zZM1DipvvumHr7K/Xudrf5Pxa8duLkgdBwX03ZMNM0a9SsBU45jLRUY5INArN501scTz3eJnvELn3+PHmFk83fJqucasHQgi6VYsP9jv8/kDxl77iMtEYmQEPwzH1UYTrLbBaNlCSDhPCuUHQXOdl3uBFVudqtsVPNrf4xeMOTddEu5G0tzR5USoupylfnU/40+E5Z5cjyihgUw150M7YbAlQitdDOBpa9GQTadfZ7Tb52eMNnmz4rNYsNHkr/98RfaVgFGX8882c0xvRL5M5NSOjbitQiiCRTHMLabu06y57HZdn61Wajvk/Lf6/AN/sLuZpTj9IORnMGUc5eVmCAkOTNF2Tdzsu3ZqFZ+lIcVfTAv8Fwkih0yioJ2YAAAAASUVORK5CYII=""")
TELLURIDE_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAMAAADXqc3KAAACc1BMVEXjOEDjMjjiGyHeAADjJSzjMTf////28vMAAADiFB3iGSDjJy7jKC/jLzXqAADjIinkMTjkKC/jJCziGCDhCxPmTVLkO0HjLjXkLzXmTFDtnZ/44OHjTlLjHibjLTTrlJZVAADnXWHlPkTjKzHkLTPjLjPjJi3kPUPjMDbjTFDlLzXqkJK8AAD69vXmTlPoMjXyw8TkPELfAADhP0PfFh/hQkbhJCviU1jjHCPqlpnoHyjtqavpIizwt7noBA355ufhAAXkP0XgLDLiMzjiNz3jMjnkMzrjISfjGyHiKzDiKC7iTFDiRkvogYTjKzLjKC/jJCrjJSzjJSzjJS3jGyLjGSDjGSDjHSTjJy7jJCzjJi3jJy7jLTPjMTjjOUHjMjjjKzHjKTDjJi3jIyrjIyrjIyrjIyrjIyviJi3jJCzjJCziJSzjIyrjJSzjIyvjJCvjIyvjKC7jKTDjMTflTFHjOT/jLDLjKTDjKTDjJCrjKTDkKTDkMTjhOj/iKjHiIyrjIinjJSzjOT/kNz7kKjDjJS3jIyrjKjHjKjHjKzHkMTbkNjvmTVLkPELjMDbiJCvjHybjHiXjHiXkNz3kMjfmQEbnTVHjJSzjHyfjICjjLTTjJizjHyfjIinkPkPjMDbjIiniJSzjTlLlLjXjICfjIirqm53kLTPjICfjGiHmTFLjJSziIyvkOkDjJCvjLzbhPEHiJSzjKTDhP0TiJSzjJCziT1PiJSziJi7qio3kKTDiKjHsmp3kKjHiKjDulpnkIyrjKzHviY3jIijkLzXiKS/jJy3iMDbiLDPjMTfiMDfkJi3kKzHjLTPjMDbjU1jkW182u5qiAAAA0XRSTlMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQJUFgfZWdmpudj3VYOh4LAQ0tVnWLm5+ZmKm8uKOXnaGbh3FMCAUoQUA3KyAXDg5x28lJCRIaJDA/R0guBwEFBGz44T4CBwcBPuDAGyjPpgobvpMEE7CCAQ+oegqbdAaPZgWKWwWJVwSCVAN8UgN7UgJyTQFpRGA5VTRJLTojLxoXDIkjMMMAAAABb3JOVAHPoneaAAABHklEQVQoz2NgYGTy9fMPCAwKDgkNC4+IjIqOiWVmYWVjiItPSExKTklNS8/IzMrOyc3LLygs8i9mZygpLSuvqKyqrqmtq29obGpuaW1r7+js6mbo6e3j4OTi5uHl658wcRK/gKCQsMjkKVOnMYiKiUtISrFJy8hOnzFzlhyHvIKikriyiioDBxTIqM2eM3eeOozLAZfg0Ji/YOEiTSwSWouXLF2mjUVCZfmKlTq6WCT0Vq1eo2+ARcJw7br1RhxYJIw3bNxkgk3CdPOWrWbYJMy3bd9hgU3Ccueu3VbYJKz37N1ng03Cdv+Bg3bYJOwPHT7igE1C2vHoMSesEs7HT7hgk+BwPXnKDauE++kzHlglPM+e88Iq4X3+gg+CBwA9SWEL6c5vSwAAAABJRU5ErkJggg==""")
WOLF_CREEK_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAMAAADXqc3KAAACWFBMVEUAAABgdbdUa7GUo85ccrUAADqGlsiPn82VpM89WKeUo8+rt9m7xODHz+XM0+gpRp6ClMa8xuHX3O3x8/hFX6ueq9PU2uzU2uuns9fg5PGVpM/R2unR2eiVpNA/Wam4xN64w91AWamDlMfW2+3+///////z9fr09fr+/v7v9/Pu9vL5/Prp9O77/fz+/v/3+/mgz7e63cvY7OKUya7j8erL5di328m228jM5djg7+ff7+bY6+Gv18O63MvC4NH8/f30+fbm8+vD4tG/38/D4dHf8Oat1sHp9O+w2MTQ59zd4vDJ0Ob6+/38/P3N1OjY3u3S6N3c7eWOx6rJ5NbQ1+q6xN/6+/z9/f63wd7R2Oq63czT6d71+viw18TD4dKl0rzn8+37+/36+vz4+fz//v/d7uWQyKvt9vLM5dmn071yuZWazLO02cb1+vey18agy7zC4NLr9fCr1cCKxacvl2NgsIjP59vS6dyTubuUp8ulzr/l8uu83cym07xEonMrlWAzmWaHw6Wx2MTt9vGizLyDmsJgdbiVssS43Mr6/Puq1cBut5ItlmIslmEqlV9Pp3uh0Li93s2WtcJieLhXbrN1ir+exb7a7eL2+/iQyKw3m2knlF4plF8plF4plV92u5ij0bre7uajysB1i79WbbNWbrNacLWJosKs08LN5tmp1L6FwqRWq4BYrIJXq4Fms4y228mi0bqlv8p+ksN4jcB3jL+JnMeiyMHL5teq1b+y2cW22si428qSyK2WyrC22Mq11sq01sqx18aq1b7g7Ovl8+vm8+zg6+tx0ksuAAAAJHRSTlMAAAAAAAAAAAAOQIG/5/sCO5vk/gln2dl58EDk5EAOm5sOO9mCDpu8AAAAAW9yTlQBz6J3mgAAAa9JREFUKM9jYGBgYGRi5uTi5uHl4+Pl4ebiZGZiZAABFlY2fgFBIWEVVSBQERYSFOBnY2UBSrCyi4iKqanCgbq4qAg7K9AcNhEJSQ2ggKYWSFhbR1dPUkKEjZGBiV9UEiSib2AIMszI2ERVVVKUn4mBWUAMpF7V1MzcwtLK2sbWzl5VQ0yAmYFTEGy+jo2Do5Ozs4urrpu7qqqaICcDlxBIXNfDU9XL28fXz181wBnIF+Ji4BYGSQQGBauGhIaFR0RqREUD+cLcDDwgK2Ni4+ITEpNUVZNTUtPSQf7hYeAFacjIzMrO0QWxcvPyC0A0LwMfkCwsKi4pdSsDCZRXVFZVA2k+kIR9TW1dfUNjUzPQly2tbe0dnSAJoFGBXd09vX39E+LsVSdOmjxl6rTpIKN4VGfkzJw1e87cefMXVC9ctHjJ0mXLV8xQ5QE6d+Wq1WvWrl27bv2GjV2bNm/ZsnXb9h1A50pJ79xlthsM9uzdt//AwYMHDxw6LCPLICd/5Gg1FCQcg9BHjysoMnAoKatiAGUlDniwIwNwsMMjCg40IBGFEbVqYpCoxZ0YcCQfAAargzKoC9SZAAAAAElFTkSuQmCC""")
COOPER_LOGO = base64.decode("""iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAW9yTlQBz6J3mgAABNlJREFUSMe1lWtsFGUUhp9vZrbLdrvddnehF7Yt6Y2mgKBi4w8Qaq1KAClgtBBN+YEERY1EJCExJkYRDDFeEjEEIhWlCVq0RLHWamIgJaGUKkVU2rLcyq1gC2xvuzszxx+0BGtLQoJPMslkzsx78r3fe+aDUUjSdQCcSo1YV4C8tI73U9NRjM5INQcwSykedaLGDoicBfbIqlcOq48/GHonDShzKnU/YEVEGoE9wBUFyG0aunWlNpa63Nc/9KXIzkC6vJU8VqY7XeeBFROcToBpQcPRsCoxWXYE0uSzQJos9yTZ43SjHigYVfn3nInoSq19zpNknRifLdcy8uRaME+uZeRJc1qWlLjcXcDKdN3Y93kgTbqCuTfqwTy5EsyVrf5UGW846oDArbr60M3m7r8Li13ujzZ4xyYFNA0LsAFbhEB8PBOcTtc+M/rwsgRvTkWiT4lpYiuFPejzJEcc/ZC9f6DvjEfTDkXlhlEGgEfT6BN5bIErISNF0zERkBuX8ibiWPYMM7MyqR4YiM8ciBBv6ET2/oB5+DcwTdA0ABa43Gp3X7jsz2hkO9AHoAGEbVul68a9Ux1OZFBc+X1o6WnElZagTypE9/uZXvEsgZLZ2H39uF5+AT0rE70gHwZXEtQNChxx+UDKkDPakFXJmu5N0rQbCbBt9Pxc3O9tIG7hfJTTSd/b72L9dZzedzZhn+1Az83BvWk9cfPmwGCUHSh8mu4GPMMboMAayq3SNOyjf2D9egTHzBnoU+/B8eADSDiMMTEP5+KFaMEgKEXs+zqUZd3MuyliM6h1cw/kkTIz+Mvezg7LxKdp2KaFI2cCqrAA2bINdakT5s6hNysT/clFqJpviVZ/Q/S+qYRzs4kePYbSNSLARcu8CnT/a9DGKA1Bns91xG2ONxykBAIYTicDZoyyqz0UajrbxvkY89AMetpPMLO5hSm6wUYrguX3YygIh8N0dXXTYcX2dFnWU0B0+ChMAS54vF75cvduaQuFpLqmRorS0mVW+njZsXOndHZ2SlNzsyx6pFSm6YasWLlS2kMhaQ+FpHzpUhlM9vLRZk0HtgCyevVqGaJ8yRJ5urxcTNO8+eyr6moZm5IijY2NIiISCoUkOztbgCYgdcRBG/yFnAQebz/emtxx5gyHm5tpa2vDjMVobW2lsLCQqqoqmpqa5ER7u9KU4kBDg2z/dLs62NjYB6wFDt7awBi2imPAm55wePP4L3a5/ZpGRjRCnS+R4uJiDMPA5/Nx4OBB5T1/gaytlUTFVid6ryMinwBfD7dF47/s7LDMTSfFssoSvJS4E7hw7hwejwe/309+fj6nTp8myxFHeYKXmKZzzrZ3AesBcyTfhyM2HGqJRZJNRZFfaTT7kgj39/PE/PlUVlbSefkygZ4+eqJR1l/v+rHLtlYBnaNt7EjEbDhwLBbNPB+LTplYPBtRCtM0qa2tZd7cuVLXsF/9dLW78ZJlLgdOjZYcjdG5es22Xt0Xi9QaLhclJSWsWbMGwzCYmJ+vzg4MtJ+3zBeBttto3LYBwEVgdUtLy5HU1FSSk5MpKiqipqamu7en5zXDMA5xlyhdvHhxZ1VVlaxbt85OSEh4A257FN8Z9fX1uFyu1ysqKmTy5Mk/A767Jn4LKcB3wJz/Q3yIDMB5Jx/8Aw8bA1D7A2ZzAAAAAElFTkSuQmCC""")

RESORTS_DATA = [
    struct(
        id = "a-basin",
        title = "Arapahoe Basin Ski Area",
        urlPath = "arapahoe-basin-ski-area",
        logo = A_BASIN_LOGO,
    ),
    struct(
        id = "aspen-snowmass",
        title = "Aspen Snowmass",
        urlPath = "aspen-snowmass",
        logo = ASPEN_LOGO,
    ),
    struct(
        id = "beaver-creek",
        title = "Beaver Creek",
        urlPath = "beaver-creek",
        logo = BEAVER_CREEK_LOGO,
    ),
    struct(
        id = "breck",
        title = "Breckenridge",
        urlPath = "breckenridge",
        logo = BRECKENRIDGE_LOGO,
    ),
    struct(
        id = "cooper",
        title = "Cooper",
        urlPath = "ski-cooper",
        logo = COOPER_LOGO,
    ),
    struct(
        id = "copper",
        title = "Copper Mountain",
        urlPath = "copper-mountain-resort",
        logo = COPPER_MOUNTAIN_LOGO,
    ),
    struct(
        id = "cb",
        title = "Crested Butte Mountain Resort",
        urlPath = "crested-butte-mountain-resort",
        logo = CRESTED_BUTTE_LOGO,
    ),
    struct(
        id = "echo",
        title = "Echo Mountain",
        urlPath = "echo-mountain",
        logo = ECHO_MOUNTAIN_LOGO,
    ),
    struct(
        id = "eldora",
        title = "Eldora Mountain Resort",
        urlPath = "eldora-mountain-resort",
        logo = ELDORA_LOGO,
    ),
    struct(
        id = "keystone",
        title = "Keystone",
        urlPath = "keystone",
        logo = KEYSTONE_LOGO,
    ),
    struct(
        id = "loveland",
        title = "Loveland",
        urlPath = "loveland",
        logo = LOVELAND_LOGO,
    ),
    struct(
        id = "monarch",
        title = "Monarch Mountain",
        urlPath = "monarch-mountain",
        logo = MONARCH_MOUNTAIN_LOGO,
    ),
    struct(
        id = "pwdr",
        title = "Powderhorn",
        urlPath = "powderhorn",
        logo = POWDERHORN_LOGO,
    ),
    struct(
        id = "purgatory",
        title = "Purgatory",
        urlPath = "durango-mountain-resort",
        logo = PURGATORY_LOGO,
    ),
    struct(
        id = "gr",
        title = "Ski Granby Ranch",
        urlPath = "ski-granby-ranch",
        logo = GRANDBY_RANCH_LOGO,
    ),
    struct(
        id = "steamboat",
        title = "Steamboat",
        urlPath = "steamboat",
        logo = STEAMBOAT_LOGO,
    ),
    struct(
        id = "sun",
        title = "Sunlight Mountain Resort",
        urlPath = "sunlight-mountain-resort",
        logo = SUNLIGHT_LOGO,
    ),
    struct(
        id = "telluride",
        title = "Telluride",
        urlPath = "telluride",
        logo = TELLURIDE_LOGO,
    ),
    struct(
        id = "vail",
        title = "Vail",
        urlPath = "vail",
        logo = VAIL_LOGO,
    ),
    struct(
        id = "wp",
        title = "Winter Park",
        urlPath = "winter-park-resort",
        logo = WINTER_PARK_LOGO,
    ),
    struct(
        id = "wolf",
        title = "Wolf Creek Ski Area",
        urlPath = "wolf-creek-ski-area",
        logo = WOLF_CREEK_LOGO,
    ),
]

def get_schema():
    toggles = []
    for resort in RESORTS_DATA:
        toggles.append(
            schema.Toggle(
                id = resort.id,
                name = resort.title,
                desc = "Show: " + resort.title,
                default = True,
                icon = "gear",
            ),
        )
    return schema.Schema(
        version = "1",
        fields = toggles,
    )

def main(config):
    displays = [TITLE, WEATHER, CONDITIONS, TRAILS]
    screens = []
    for resort in RESORTS_DATA:
        if config.bool(resort.id):
            for display in displays:
                screens.append(build_screen(resort, display))

    return render.Root(
        delay = 5000,
        show_full_animation = True,
        child = render.Box(
            child = render.Animation(
                children = screens,
            ),
        ),
    )

def build_screen(resort, display):
    data = get_data(resort.urlPath)
    isOpen = is_open(data)
    logoBox = build_logo_box(resort)

    if display == WEATHER:
        return render.Row(
            expanded = True,
            main_align = "start",
            children = [
                logoBox,
                build_weather_screen(data),
            ],
        )
    elif display == CONDITIONS:
        return render.Row(
            expanded = True,
            main_align = "start",
            children = [
                logoBox,
                build_conditions_screen(data, isOpen),
            ],
        )
    elif display == TRAILS:
        return render.Row(
            expanded = True,
            main_align = "start",
            children = [
                logoBox,
                build_trails_screen(data, isOpen),
            ],
        )
    elif display == TITLE:
        return render.Column(
            expanded = True,
            main_align = "center",
            cross_align = "center",
            children = [
                logoBox,
                build_title_screen(resort),
            ],
        )

    fail("Error loading screen")

def build_logo_box(resort):
    return render.Image(
        src = resort.logo,
        height = 16,
        width = 16,
    )

def build_title_screen(resort):
    return render.WrappedText(
        content = resort.title,
        font = "tom-thumb",
        align = "center",
    )

def build_weather_screen(data):
    temperature = data.find(".styles_h4__2Uc5w").eq(1).text()

    # print(temperature)
    temperatureSplit = temperature.split(" ")

    weatherIcon = render.WrappedText(
        content = data.find(".styles_iconWeather__R1V9M").children().eq(0).attr("title"),
        font = "tom-thumb",
        align = "center",
    )

    highData = render.Text(
        content = "H:" + temperatureSplit[0] + "°",
        font = "tom-thumb",
    )

    lowData = render.Text(
        content = "L:" + temperatureSplit[2] + "°",
        font = "tom-thumb",
    )

    data = render.Column(
        expanded = True,
        main_align = "space_evenly",
        cross_align = "center",
        children = [
            weatherIcon,
            render.Row(
                expanded = True,
                main_align = "space_evenly",
                children = [
                    highData,
                    lowData,
                ],
            ),
        ],
    )

    return data

def build_conditions_screen(data, isOpen):
    summit = "-"
    base = "-"
    if isOpen:
        summit = data.find("[title='Summit']").parent().find("figcaption").text()
        base = data.find("[title='Base']").parent().find("figcaption").text()

    baseData = render.Text(
        content = " Summit " + summit,
        font = "tom-thumb",
    )

    forecastData = render.Text(
        content = " Base " + base,
        font = "tom-thumb",
    )

    return render.Column(
        expanded = True,
        main_align = "space_around",
        cross_align = "start",
        children = [baseData, forecastData],
    )

def build_trails_screen(data, isOpen):
    trails = "-/-"
    lifts = "-/-"
    if isOpen:
        trailsSplit = data.find("[title='Runs Open']").parent().find("figcaption").text().split(" ")
        trails = trailsSplit[0] + "/" + trailsSplit[2]

        liftsSplit = data.find("[title='Lifts Open']").parent().find("figcaption").text().split(" ")
        lifts = liftsSplit[0] + "/" + liftsSplit[2]

    # print(trails)

    trailsData = render.Row(
        expanded = True,
        main_align = "space_around",
        cross_align = "center",
        children = [
            render.Image(
                src = SIGN_POST,
                width = 10,
                height = 10,
            ),
            render.Text(
                content = trails,
                font = "tom-thumb",
            ),
        ],
    )

    forecastData = render.Row(
        expanded = True,
        main_align = "space_around",
        cross_align = "center",
        children = [
            render.Image(
                src = CABLE_CAR,
                width = 10,
                height = 10,
            ),
            render.Text(
                content = lifts,
                font = "tom-thumb",
            ),
        ],
    )

    return render.Column(
        expanded = True,
        main_align = "space_around",
        cross_align = "center",
        children = [trailsData, forecastData],
    )

def is_open(data):
    open = data.find(".styles_open__3MfH6")
    if open.len() == 1:
        return True
    else:
        return False

def get_data(resort):
    url = "https://www.onthesnow.com/colorado/" + resort + "/skireport"

    response = http.get(url)
    if response.status_code != 200:
        fail("Webpage down")

    return html(response.body())
