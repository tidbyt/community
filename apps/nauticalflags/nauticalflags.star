"""
Applet: NauticalFlags
Summary: Display nautical flags
Description: Displays nautical flags.
Author: Robert Ison
"""

load("encoding/base64.star", "base64")
load("render.star", "render")
load("schema.star", "schema")
load("time.star", "time")

flags = {
    " ": {
        "name": " ",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUXIzEVOopcAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAACxJREFUWMPtzkEBADAIAKHT/p23GH4gAVO9Dm3HBAQEBAQEBAQEBAQEBAQEPiESAT9AXSQQAAAAAElFTkSuQmCC",
    },
    "a": {
        "name": "Alfa",
        "flag": "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ZDQzLTFkNTQ1NTEwMGNkZiIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5OTY3OTU4YS1hMzQ2LTQyMmYtYTkwYi03ZjAxNGRjM2YwNWIiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo3MzkyN2FhMC1iODY1LTRmY2EtOThjNS0wNGQzYTljNGMzZWMiCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09Ik1hYyBPUyIKICAgR0lNUDpUaW1lU3RhbXA9IjE3MjE1OTkwODY3ODk3NzMiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4zNiIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIgogICB4bXA6TWV0YWRhdGFEYXRlPSIyMDI0OjA3OjIxVDE3OjU4OjA2LTA0OjAwIgogICB4bXA6TW9kaWZ5RGF0ZT0iMjAyNDowNzoyMVQxNzo1ODowNi0wNDowMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjcxMDk5ZDJjLTZkMzktNGZjYS05MjUxLTA4Yzc3MTE2OTNjZiIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChNYWMgT1MpIgogICAgICBzdEV2dDp3aGVuPSIyMDI0LTA3LTIxVDE3OjU4OjA2LTA0OjAwIi8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PjNov6YAAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUVOgY1A1IlAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAA2xJREFUeNrt209Ik3Ecx/H349Rc05Zmh2gHS92yDi0IrCRXoAc9JChCnTwFRgdPXXZPBG9eUohAkqyGoheNimCl/YOYQaFPZhazujhl/tt0zqdD/tlM53SB+Ps93+PDw++BD7/n9fz+PQqgoRcAyQCatvt57Mu5vqvPX/hxlyS9P4AW8gPoYQBcsE7pYQDkmCeZmR7Xw0BbxBAawul0rgEqaxWfCGAy5lFZWSl3GFrIz/OnLlRVjf60yliOUwtcvnkbq9Uqdxi5mTNMToxRW3sv6rp8gGqLhAMfcTqdZGVl/TsClanO5wU5mGFdRVPaMLTwLO4XD6PQlDYMR8Ecl29EoyllGJuhKR+gMdCUrmesoFlWVrb1eoYMaHo8HoxGo9xhOArmOHPtFna7fct7hQ4jN3OG58+6efTQF9f94gKqLZKR6qWjoyMmmlL0DLtljiOHs7dEU/wwluZ5//pxXGgKH0bhcR/nrsaHZmQpgCbSVkF+dpDPH9rw+XxxWwGgKIpggGqLmAyj20JT2K+J3TKHpi1sC00xzVhGs6+vb1toChnGCppFRUU7bkOIMPKzg7xy9/CgrSWhdoQww2QYpbW1FYvFIncY9qNThMNBqqurE25rb78mS/PM+gdpabmzYzSFCeNszjQnbYUJoSnMCFQL+Qn9cuH1ehP2Ys+PQJUUM8WXrtDU1PRf2tvzgL4dMdPT84T+/n49DJL2YTIXUFdXRyAQ0McZAz8PYDCk4XK55AX0f2Iq1BReSTFz0VGeEKZCTeHffTtEY2PjjjEVbqXLfnQKLTSK2+3e1qhUvJUuYGBsP4qSuiNMxds3UZKZDR+jpqaGiYkJycMAhsfTuOgop6GhQW4zIme0C977eDyeuLYMFEUROIxlTI8cnqe9vX1LTIUEdD2mv3+P09vbK68Z6zGtqqqKC1PhjzENj6dRUloRF6ZCm7E6bwnPEhprj4mp8IBG1vncGQ5mBDbFVHhAI+vN1zQGh77ExFSes+NKMgbj6ZiYSnWQfmQynZLSCpqbm+UFdCNMVVWNOjYtFaAbYdrV1SUnoBth2tnZKa8Z6zGtr6+PwlTaXzlHJtPJzLJEYSqlGauYLq+oq6qKzWaTOwyAYts0JmOQ7u5uuX/yBXg5ZCTX9EluMyIxDaec0MNYqe/+zDVA9Tj+1h9iknhNjypWAgAAAABJRU5ErkJggg==",
    },
    "b": {
        "name": "Bravo",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAAEQAAABECAYAAAA4E5OyAAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWAjWfCjGRAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAA3pJREFUeNrt3EFIU3EAx/Hfm+aaTs0NlGJOaTCcF3WawwZBISvotvJQEAtEsEsGYuCCbq3iQcQ8NAlpO2QHQfRiKaZpWyNJCaJ0wiSdBWWbsBk2071OmxtmvrZ32f///sfB3uHLex/ee////zEAOIgjMXIB4HWxluoIzpqjUBgawbIsGAAczUGW1Edg+TCDYDAIpVIJCc1nRpTj8FTGwOVyQaFQAADdQeZ0ZVjnYmhpaUk1hMYR5nZw860bbrcbMplMDDJYq0KXwQyj0ZjyO5WoBmJbuBz5jEAgAJVKtRuDYeg0xKkrg8vlSokRH9QF8VaVIrSznQLpnhszmiB9trGOnt7eFEipDTJaq0azoWEPpFSiuh+kKTEYhp4zxKkrQ8+Vzn1jUIVqHNLW1lZ+T7s0QHrvwYN9IaUqyGitGvVaDUwmE//3ISRDap+ehO+xg/d/iA4yrK9Ez8VOaLVaMcjssQL4NyJ4wgNS4oNEOQ5O/MJ920NekBIfZKJRg4ZKFW9IiQ4SiG3BNv4CPp8vrf8TFyQdSIkNki6kRN66xyHttlr/G1Iiz5CJRg0qCqQwm80ZHYeIIJlCSlyQYX0l7pja0oaUKEM+qYrg34igvb1dkONldZAox+HR7wi6rdbEVCTVl8wbvRoVxfKMISUiyFpsG7dfvRQEUiKCTDdp0VVzQRBIiTBE9+UHWJZFKBQSgwBA9WoYbc0mOBwOQY+b1fMya7FtmCNL8Pl8glw6DMNk/0TVZF05ZovlGBoaEiRI1t+YnZxbwfL8AgYHB8UbMwCQMgyuHSrEXZtNEGCJePyvXg2jrkQpCLDETHbHJ7MzAZYIVJPH8xPH8bFAmjawxC2pOjPjx/LiYkbAEhVEyjC4isMZAUvccoj6rz+hkReiv7+fblSFAJbYZZnlkjxYm8+BZVnxkkkG9p3Hg7GxMTFIMrC3rFZsbm6KQZKB7evroxvVdIGlYq17uSQP10+d5g0sFcsyz75fwazXywtYKoIUMTm4JC/hBSw1uyGaFr5DkZN7ILBUbSA6aL07dRuI4sDa7XbxkkkGdnxkBB6PRwySDOyNjo6/Akvlnrs4sAMDA3SjehCw1O7K/BewVH8MIczt4HzYD7fbDaPRSN5b93SGt6oUA7EopqamkJ+fT/fHEABAP/8NJYwkAWxuHBiahyEYgcVi2TUE4kiMPz/+cwu5CNolAAAAAElFTkSuQmCC",
    },
    "c": {
        "name": "Charlie",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWJSu/wL6XAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAGtJREFUWMPt1bkNgDAQRNG/XAkJHZAg0RgBRVEOjdAGtmUCFzEBsw3sk/aYACrCGgCm9ZA0f5+LDnEZYEAAtVbNJUaER2BAe8X3snsEBhigzYKSkqR5P44OIwNaFuRctIB5O70DBvw8C5SAD56AFcaOnL7mAAAAAElFTkSuQmCC",
    },
    "d": {
        "name": "Delta",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWJiwKiXj3AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAF1JREFUWMPt1z0VgDAUQ+EbTpkwgoiOOKlNhKClDK8LHjKQGMg3vR8BhTEN4L1PS/l+PWyYE0AADUAqL6BKXsAxuqk+cyCAAAIIIIBvGc3pAwioXMUBBPBrgNzv+QJmHA+7M8mpugAAAABJRU5ErkJggg==",
    },
    "e": {
        "name": "Echo",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWJxurL+y5AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFdJREFUWMPt1zERgDAAQ9Ff6GEDK4hBVpWwIwQJrNxxZUJDhv4YyBuypACdYCrAsu6R8udqTIQjQIAAAQIExAEV4LjPSPn2A+b+ugEBAgQIEDAuoKTv+QcKNwnyjqxzIwAAAABJRU5ErkJggg==",
    },
    "f": {
        "name": "Foxtrot",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWJzl+T61dAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAjVJREFUWMPFl81OE1EUx3/3dqY0LsrGNLOeLlRewPgmUgfCA7gx6QdNI0RMpIZBjTEuCQswfkTXmrgg4R1aGl6A2G7aRKoD9bqY0Np0Wu7tUDnbmzn//zn3d++cKwDFNYYFoJS5h26zRa1Ywcrc5E6lRDKdNs4hhAgNGIv/aFJf26D75QBQNJI2t/KPSM7PG+eS04gfrT/ldP8bCEAI2tv7NLZfEbTbszXQbbaor23wc+8rJMRgISlp+3s0/JcEnY7ZNoQIXM7Ar2aLWmWd0w/fw6+iQinSD+9zu5TXYkIIodeB7oX4pwniYUY6bz9y9NzX7oTUAu7xk7ByncOiFJ0372lsvdBiQhoBp3++tMGUxsDphiaYkRBqAacbE8CMhFAbOIPtmASmjAWcQRfGgSljAxcTTHklwMUA0wKolSp0Px/MVvxfE6/fUT87G3Qgfe8upCz+W6RsbmSzAwPZlSWcahEScvbiCYlTLZJdWRoYkLaN6+Vw/PJsTSQkjl/G9XJI2x4+BaGJRRx/FeZmsB1zFo6/iust9sVH7oF+JzYLV8tEysLZLAxVPjQTjphY9gA4KW/B7/P4lT8r4C57SMuKHkpHTFgW7tIDEIKTfBV6f2IB53q5SPGJf8PYYEYAZzwPTA3mGOCmmoiMwZwA3NiHiZYJHTAvAW5qA1pgagAX+10wFkxN4MaPC4bRCwJ1vLOrDjML6jCzoI53dlUvCIzzAGqq6+6iE+q8BzB15f2h9Dqf538BCDiC/Zdkqk0AAAAASUVORK5CYII=",
    },
    "g": {
        "name": "Golf",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWKzHcIWpjAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAIlJREFUWMPt17ENgzAQheH/IpSCLMIQyTJkLlJkDjpGyQIUhMIRPhoUJTpE6+ZdZfuerK99BjgFpwL49E1YXO7X8DY/Btztezdz6vYWc92AY8f/5UR6PTlReAQQQAABBBBAAAEEEEAAAQQoDqgAxmnZ3+b0Qz0zTksop7u5d8b/OreFnG9nK13PV0Q1KdTDLbtZAAAAAElFTkSuQmCC",
    },
    "h": {
        "name": "Hotel",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWLB9PtvFrAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAEpJREFUWMPt1zEVwCAQBNE5XhzEBR6wjwhcRAA5PNBcM2Ngf7sBJIU9AJl3hn9v5tuvx8e3aBQnQIAAAQIECBAgQIAAAQIERPU9P07DCz8SRE2mAAAAAElFTkSuQmCC",
    },
    "i": {
        "name": "India",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWLRTBfxmiAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAi1JREFUWMPtlztoU1EYx3/nPmweTYkZgtEa1PiojxiKQkWwIqToKFRH27VLHJ0sHcUH6uKiIILFoRWcdNCCD4QOgYpWMQRRLFSwptY8bNLk5h6H+lhscx9ilvznc8/34zvn/z/fFYCkidIAahNdTSmuJzMoNFktgKYDaE4/lBLMn/4RAhTxnwAWinXeflwiM1Pma8EAwO9R2NrpJb7FQ3itZgvGMkB5yeRhusi1ezkev6z9dc3uqEqqP0T/4SDBdtXSvgKQjXLgW6nOhTtzXBzLW9r0VNLH8OA6NkfWuM+B7xWTc6OfuTSet9zW2xOLnL3xiVy+7s4FUsL9yQKX7xaQNgN77FmFmw/mMerSOcB8weDqeM6xxUZuLfButuocYCpbJp01HAMYdcnk69Kq3VsRwDThzYey66B5Pr1I1ZD2AQxTMjNXcw0wla1gmtL5JXSr2S+msyNQBIQ6VNcAhxJtKKtE44oAmiroinpcAxzY5UPXHLpg3w4fQghXAAfjflQnHQCIhnVGBoKOiw/0+UjEvM5zQNcEg0dDJLt128W3r1c4fSJMu1dxN5B0hnXOD22gd4/1l3tbROFKKkIi1vgOWZqI9sY8XD8TJXU80HDtyV4Po8Mb6dsfsARr6Tn+MxNIXr0v8+RFkUfpEk+nl4MqvknjWI+PI90Benb66PBbs6+ezNgD+KW6KanW5O+AEWLZtrpmzzF6MuNsJlQVgbdN8C/UGstbAKLZv+c/AHagra8ljw+LAAAAAElFTkSuQmCC",
    },
    "j": {
        "name": "Juliet",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWLgj+UxYuAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFlJREFUWMPt1sEJgEAMRNEfWbQMtzjtyuZsQwjxYBE5+KeBPEgYEkDRmAGw7kfL8Oe+WGiOAAECBARQVT1tHBGuQIAAAd9Llpn/bcIBsM3TIxQgQEBvE3YCXkf3EMJKYOp0AAAAAElFTkSuQmCC",
    },
    "k": {
        "name": "Kilo",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWLyNL9N4vAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAE9JREFUWMPt17ERgCAUBNFFjK3DFiiIriiFZmxDBrQHkp/s5Tf30kvAR2BOgNHvrfJcmauW7fH3aRwER4AAAQIECBAgQIAAAQIECEjR9/wHM/4JP/O32RwAAAAASUVORK5CYII=",
    },
    "l": {
        "name": "Lima",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWMCVvzXWEAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAF1JREFUWMPt1sENgDAMBME1Cb1QCGVTCL2gCHrIPcJjr4Bo5Fg6F/CyMB3guY7pB/bzjgAbiyNAgAABAgR0gDHmGrm1igGV3gNplcdfMDs9l1CAAAECBPwGENdxmg/Rjg848bwp+wAAAABJRU5ErkJggg==",
    },
    "m": {
        "name": "Mike",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWMSgIZzh4AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAzVJREFUWMPFl0tPE1EYht8Z0ISykELrCqImtEgvGttSIOoPIEb/gTEqJUFYiCs3RpSL0lGoxlhIlNDCb2DlSuLK0hotyi1pAQEjLaXTgTQgrYuhpGXuUxLOcnqm33POeed7ZggAWZzgKAWAbLaQIR7fwuMnI/BNLoI4hiKWag1G3rTBYTcXXCcIAiTfDVVVFeh/1oa7Nwz4lymuuLVGg2GPC3abmfd3UuhGvV6Lnu5WuG4ZVUNYazQYHnLBYTeDENhKUuwPzuor8fzpfbTeNCgOSq643W4GQQgfJAkA8wtRUYjebhfutNTKzoOlWgOvRHGG2QEAlADonlk4haYGA3Q6Le/k8vIyNDeZEVuJ4NvipiiIpZo9c4fdIlicphm8pHyY+jzJAqztmRAOhuF01ApDaMrQ3GhGYi2KwNwmSEI4cGxxfsBkkgE1OA7KF0ImGWQBSipsWN5IYyYkAVFehkZnPeg/ywjMxgsgCgNHCBZ/NTSBvtFplJIE9vMBALAQwTAaJSCcDfVIri8htMAeh5zA0TS78r7RaZwuYedwAHIQ36d/SGaiyWlC/HcEmXQaXo/4yml6GwOUH5QvhNK8bdtPBkEAyJ4+18q56Wp9BbyeB6iruyAYuFgsgbX1DVgtRsEzp2kGA5QfgxMhZI48y7tLH4T7wJdfW+jo8mJ2LiIIoNNpcclqFA2c+/U4KD+3uKxGNPUzgc5H4hBCIz9wIn1IHAAApmYS6OzyYk4BRC5wvR8Dh4FTDZDbifaH7zE/H5Wcm2J2MED54R4LShaXDQAAydQuUgftU2zs7e7hbzwFuX2blC0Wjwu2KybJuZWVZxSpnNMHxJUqb1liHTN/8DYiNUqV2zH5AMhilJpKbSMaXS1K5WRRSnX7cK/dI/qI6vVa9Pe04XZLLe9LDecIlCp1JZZWrXJOBtQo9dCiKlReAKBWqfkWVarywxeSy5ZrB9uuXKlHIWSrfDWCYOATq+OvgTDsNrMqpfINOSqPx7eg02lZgKNfRnyBc48FoaQVXDdp8W6oHRdFIAS/jJQqtRiVk8eh1GJUznsEDLODF+4xUL6Q4pULZWL4bQeMhvOcIyBO+vP8PxWu1EW+ghrIAAAAAElFTkSuQmCC",
    },
    "n": {
        "name": "November",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWNQK3sDSqAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAT1JREFUWMNjZGBg+M8wgICFgYGBgU0+BaeC9gJbhqKCOKxyf//+ZTCzL2S48uQ7Vvlfb/8yvL7fwyAiIoRVnpGRkYGJYYDBqANGHUDYAYyMeKQYidCOXw0jAwPD/97+hTgtv3P3OYOKsiQDw3/M4uLfv/8Mjx6/ZlCQF8Oq/e3bzwzs7KwMPDwcWOWLC+MhDvj/H3dZ1DdxMUNl/yGc8nuXZjDYWBtjlXvw8CmDomEtAxsfM/Zy4uEcIqLgPwUFJRF6R3PBqANYYLUarjz87x/+hPT371+c+v/+/QfJ6ITKASPrXJwKrE3lGMJCHHFaXlKzFKcjP3/9w9DXEsYgIMCLVd7WxgQSArjqcwYGBoboEDGc+fzv378M//4twdsesDDXw9keGE2Eow4YrY5Hq+PRXDDqgEHhAMaB7p4DAIdUjDzsuJLfAAAAAElFTkSuQmCC",
    },
    "o": {
        "name": "Oscar",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWNS/yb2jfAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAANBJREFUWMPF1z0OAiEQhuGXL9t4BWPvHTTex1sYj+HVLCztrSyx2sQYd5eFmYEKhpnwhJ+CBGQ6tgHgcdnzvGXyO3bx0+uOAHbHxPacSJv4HRBAEuwOfRAaO70Q+h70QOg3EI3Qv2AkQlMTUQjNTUYgtJTgjVBJkidCpYleCK1J9kBobYE1QjVFlgjVFloh1KK3QKj1DFsRsrjJLQhZvedahDBsNQhTQA3CHLAW4QJYg3ADlCJcASUId8ASIgQwhwgDTCGG6L/giCADV0i9v+cfVW4lXYzQprcAAAAASUVORK5CYII=",
    },
    "p": {
        "name": "Papa",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWNihHJq6/AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFpJREFUWMNjZGBg+M8wgICFgYGBgU0+ZUAs//VwDgMTwwCDUQeMOoAFn+TPB7OpYgm7QupoFIw6YNQBow4YdcCoA0YdMOqAIdoiwteSGY2CUQcMGwcwDnT3HACrcwjP/gpMdQAAAABJRU5ErkJggg==",
    },
    "q": {
        "name": "Quebec",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWFR9BMnzRAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAEBJREFUWMPt1zEVACAQw9AcD7wgBNkIwQsDyOiSGOhfW8AjWAe4e0bGxzo0wgkQIECAAAECBAgQIECAAAGVvucfApsFP0/tkMEAAAAASUVORK5CYII=",
    },
    "r": {
        "name": "Romeo",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWFxGUvDNUAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAHtJREFUWMNjZGBg+M8wgICFgYGB4TC/GtEaLNYy4ZQ77vaPgZGXeMttP95iYGIYYDDqgFEHjDpg1AED7gAWBgYGhv+fqWTaP9LNYmRgYPj/e4/GgPie1eXGaBoYdcCoAyDlwIngfwPSJBuNglEHjDpg1AGjDoC3iAbSAQCb8hY8KMr09wAAAABJRU5ErkJggg==",
    },
    "s": {
        "name": "Sierra",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWGDkmkYdhAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFhJREFUWMPt17EJgFAMRdEb+eAaLudUfznXsIqFrVgJr/CmTZEDIZBXQBOsAdCdMVQVC+ESEAeMt+a67Z8NOo/pCgQIECBAgAABAp5f8zsWmAsE/P0KkoAL3QkMP9vHRWAAAAAASUVORK5CYII=",
    },
    "t": {
        "name": "Tango",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWGgU7yJlkAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAEpJREFUSMdjPMyv9p+BEPj4k8Hm/wMGYgCjeDIDGycTXjX//3xmYGIYIDBq8ajFoxaPWjxq8ajFoxaPWjxq8ajFoxaPWjxqMWEAALdZCbKwnKyRAAAAAElFTkSuQmCC",
    },
    "u": {
        "name": "Uniform",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWGyxgYTBJAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAGxJREFUWMPt1ssJgDAQhOF/kty1Cm3C7rUJu7CAPDzYQXIIwsx94FtY2BXQmJgEcC5bV/l4bmophBi7+pIITI4BBhhggAEGCGit9V/kmjNIXd2Y0jhgaHrp+wdGc627l9AAAwwwwICf/wMzAS+KPxQ4OBSSVwAAAABJRU5ErkJggg==",
    },
    "v": {
        "name": "Victor",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUXBTc/h6xNAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAtBJREFUWMPFl89P03AYxj/9tpEKB8X1XxgJnvQP4KgXryZ682A2xno3kVAcDiHROVDCT2OMIkE8atQYjxyJFy9b2MVwMxmRbYxMG6iHupGxb9eOLqHH9m2fp+/77P2sCuBwhocGsHlhoOlk761rXJ6aQI9EuiJiV/bJTT+mvLDRdH6otI2Q3XCw8Y1capJasdgF8Qr5TJby4ob0uvC6sfr6E7n0dCgTdrlC/ukzSrNrnoP2NIBQqL78cGoTdqVCPvuMUuYNKN51AiBiJUCVeNEE1VcfyU08ora729HM85kZSjOroEnUVeFq1g0MmEkMKwmqIu/E6mdyD9KBTNiVffJPspSer8nfXFUwrCQDZvLYgKr3EE3EMMZNUOT9qr794hvMeuBKcx4zVxSMcZNoIoaq9zRnQNV1osMxjJQp74RPMH0DpyoYKZPocAxV1+UhbJiwTHkmPILpGzhVYFit4uCWO47TbPmw9ofC4jLFyUU4PGp94JFD350bDKbGUM/1uG2fXfMWHxshOjLcaPvxRBS5gYaJpRWK6Xk4lP+Ie29fR+u/SHnpvXfbLZNoIt4i7mvANVGjsPyCYmoenA6RochnftKA1u4Z9UwAFB96d0L65uPtxZtgFMiEA8X0gjwTLYFLBhJvv4pPmkjEidyP+9Zeunf3/8z1QM0SQUd6ZNvYv/d862o/d7Cr+4GjIgKDJZOlvPDOt/Zg/WtHKPc1EASpYVAuuoHUMCj33AMuUttvuMioG8rdqRXfjSn7e+e5BxpInWuP1GjCNVBQNfnGrKPccRicsKQmRFikhkW56AZSw6BcdAOpYVCuAM7fcuXUSJVSNCDKzxsGKpC6iUZ5ft0bLJYZSBxAaBr9V69Q6xMcbG61jlJRsH8U2Pu1w8r3LbcDJ7+MOkGqdyf8UT5U2m5Dww6QGgblWjeQGgbl0lUcGY13hNRAKB+Ne6/is/w8/wfWI8BX42jaKgAAAABJRU5ErkJggg==",
    },
    "w": {
        "name": "Whiskey",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWHiL6rukLAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAKFJREFUWMPtl8EJAkEMRd+Y4FHsYI/bhOV4sx5vlmMTe7SDxaNMGBvYkVkcCS7JMYT8B/mEJAEFx1CA/XB2EX89buxwjgBYBJDUX6jWU5eSVuA5XVGVLuI5G4fx0g4AoCqISJhw+wC6pvh+HJvqTvMUIwiAAAiAjW7CNRsuRvD/HsjZuol86qW1A7J2w31zlFppHIH94Fmr9QwTugMk7/f8DSJqHu7Mle6hAAAAAElFTkSuQmCC",
    },
    "x": {
        "name": "X-ray",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWICksuSv+AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFxJREFUWMPt1rENgFAIRdGLMTqGDqdT6XA6hr/BwtpEK5pLS/FOQggEkBRWD5D53TDO62vvOrZf4RFBR3EJECBAQDkggBympSS8nbsjECDgWUM/IgECBAjwFlQCbmx/EzvQ+oK7AAAAAElFTkSuQmCC",
    },
    "y": {
        "name": "Yankee",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWITqxHFthAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAA1pJREFUWMPFl01PVFcYgJ/3MoPSmSYmJjSOQ4QFYefKuvCjibS/oBsXhtpNowFxwf/ogkK6UZEmhSaNJm7Ugh8LTTetdtFdZ/ADJKNA0tQyaIbee44LLnfuOffcwavTyPIm5HnP+7xfI4DmA/7lANau9UcfGv9CZVrTeGDGJUUon/H45CAgze/Kh6fzmr9/1qDi/wCFQaH/pJDbbUJfLsGfkz5fVp5sBbCn2BHBn11T5B8K+RhEuqA8LJQOC+KZ8MW7ms2rmqI2AysMwsBXHp0fW/BnsPaDouuF18xA9PIZxcYtwDNzVB4VSp9a8GALvnLBermGwhchvGjBl6E6qfAXLAWNdaj8mIRLHspjQumQCdcBLN7WrFyy4OwA/07hP3LUwF9Tilf3LPhHUD6XhKtt+GUNgeX8RAv4uMJ/nCxCD9iCY8FHHGn3YfGOZmVKw3/Wy0/s8HIL7nXHAjDg+fDlKQW3ckGDbzn/HAZOOwpuGaoTybR39ELfsFWEUcGNpaT9Tnucd/RC/3mBvdrMgHRBTxr8lsN5vNXSnLvgo8KeA2IWoRTCPk9zPu1wPpjNeQTvlWQXpBbc3TDtgaPPh7I5d8GjAEqHBZE2DJkJc8jEncfTDhA04grEMWSmMhbceIu0W/DNDVi4opNdYAwZ3+F8KIPzPug/l0z75gZUZhXrc1YAqc53WCzVyRTnKfDqT4r6jebiyrVzsbQquM0NqM4q1m+Eza9jATyd16xOt2nIpMArM4r6XHL25gBW27BYWjqfUdTnXf23HU+QYbFMpFR7K+e/WIdfHrqHxLGM3maxZHV+3byUyMH+EaHnM0cAOzpfyOZ8/aZ1Y+yC0ohQPiJIR9zE/+Xcuiv3fSP0HDNHvvcux0RL57NJ59IZwo+b8CgDA197dBbeb7FsF1zU5zFCaVgoH7Xg8TnghLc4JlyzvTITvtwzX14aDp3Hj1oFtd8du+BdF0sr5/bLdQBL9zW1i44Ash4TkfM5667c5XauAlj+VfP8++ayy73VYsnofN/ZZLXrEF4b18kijOALGZzPhlvNMyfc/hG386X74ctdE/mPb32CJZ242/tOe7BX80+9+d1vwKMremufS6zdctB9SigeFF6+Nqu99pumdsm8MepabY+gD/vz/A0sVFDqbu/LiwAAAABJRU5ErkJggg==",
    },
    "z": {
        "name": "Zulu",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWIxax8lUAAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAA0FJREFUWMPF191vFFUYx/HvObtAKVTDS6FY2O32TWLQGA3xylsvvPCC8KIYaIWE1g2FspT/QEy0JpKYqFv+Ai8EExMTjYlAiaZWUKChS7f7QqWlu+zsYtulu3R3Hi+07aJ9mdluy1zOPOf8PjPnzJkzChCe4uEEON/h5tAbFTh0bkVCRTQ9wZ287r2ABvB9NsRXP02QM50rEv5r8HlaPt8I8A9gPCu0dEb5+nKa/DIiRDS/DTbi9W9icJxZAEAmB0c/inChe3kQguZ6qAGvfzOBh7PndWFRNgetnVEudqcxxVnCcMXv4Qa8/kpup568pv9bPJYRTpyLcrH7EaY4ShCvuBFpwPvFZvqS/7+q52ryYFw4eS7Ctz9PLgkhKG5G6/F+WcmtpJqzRs/XODYmHPs4wnc9maIQgqLvbj3H/Vu4kVDz1umFOkmmheazYb7vzdpEKG4P1dHm38K1uFqwUi/W1V+TwnsfhvihN4tgDdF/r5a2rq30xtSitdpKh8aE0PpJ2BIicK+ONn8VPfeVJay2+lCHkybHPw3z47XH8yLujNRysquKX0aU5cHSdiZWNG7S2hni0h+PEdFPjHnwvof2rm1cHVa2Jqu2O7uHEibNZwfpvpX7F6EIjbpp73qOK38q22+LLub9HkkJhz8IcrUvR2jUxanz1VwaUkWtFUWvt8NJ4Ru/YvcGRSRW/Dqpi234vqeRt1Kamv4IZ2QEj5aVASigxdPAnkkHazJ5EKExFaZDjRaFsAVwKMXRmnr2ZlZRNpkv/NCz0wji0zHbCG3nzptcdRzIrqbs0dxbtxcSA7TrOC4bCMuAZnc9b0/NHz597EoM4NNxqnUJAdPha9NWNq3CLmOADh1jmy4B4LC7jnemVlOetr5jViK8aAQ5o+OLIvRCY/6uq5aDuTJb4bMIk5eMO5x2PKBK2QQo4MAOD4fya1k3MVX8ZkyElxMBfM4EW5UNwP4dHpqkfEnhhYhXEv34nAkqlQXAdPj68aWHFyJeNQKcdhpsUgsA9m2voUnKqShh+AzCNGcQG9UcgD3b3TSpdTyzDOEzYWae3UYAnzPJBlUAeLPaxRFVwbNjyxdeiHjN6OfUqtTMhH+qv+d/Az4IS6ttItS1AAAAAElFTkSuQmCC",
    },
}

common_pairings = ["AC", "AD", "AN", "BR", "CD", "DV", "dx", "EF", "EL", "FA", "GM", "GN", "GW", "IT", "JA", "JL", "MAA", "MAB", "MAC", "MAD", "LO", "NC", "PD", "PP", "QD", "QT", "QQ", "QU", "QX", "UM", "UP"]

DISPLAY_OPTIONS = [
    schema.Option(value = "phrases", display = "Display Random Maritime Messages"),
    schema.Option(value = "letters", display = "Flags in Alphabetical Order"),
    schema.Option(value = "randomletters", display = "Flags in Random Order"),
    schema.Option(value = "custom", display = "Custom Phrase"),
]

SPEED_OPTIONS = [
    schema.Option(value = "2200", display = "Slow"),
    schema.Option(value = "1600", display = "Medium"),
    schema.Option(value = "1000", display = "Fast"),
]

def main(config):
    display_type = config.get("type", DISPLAY_OPTIONS[0])
    speed = config.get("speed", 1000)

    #default
    display_text = "TIDBYT ROCKS"

    if (display_type == DISPLAY_OPTIONS[0].value):
        display_text = get_random_phrases()
    elif (display_type == DISPLAY_OPTIONS[1].value):
        display_text = get_random_alphabetical_order_flags()
    elif (display_type == DISPLAY_OPTIONS[2].value):
        display_text = get_random_letters()
    elif (display_type == DISPLAY_OPTIONS[3].value):
        custom_text = config.get("phrase")
        if custom_text != None:
            display_text = custom_text

    return render.Root(
        delay = int(speed),
        child = render.Row(
            children = get_animation_flags(display_text, 2),
        ),
    )

def get_random_phrases():
    remaining_pairings = []
    display_text = ""
    for item in common_pairings:
        remaining_pairings.append(item)

    for _ in range(0, 5):
        random_number = randomize(0, len(remaining_pairings) - 1)
        display_text = display_text + " " + remaining_pairings[random_number]
        remaining_pairings.remove(remaining_pairings[random_number])

    return display_text

def get_random_letters():
    lowest_letter = 97
    highest_letter = 122

    remaining_letters = []
    for i in range(lowest_letter, highest_letter):
        remaining_letters.append(chr(i))

    display_text = " "
    for _ in range(0, 9):
        random_item = randomize(0, len(remaining_letters) - 1)
        random_letter = remaining_letters[random_item]
        display_text = display_text + " " + random_letter
        remaining_letters.remove(random_letter)

    return display_text

def get_random_alphabetical_order_flags():
    lowest_letter = 97
    highest_letter = 122

    starting_point = randomize(lowest_letter, highest_letter)

    display_text = " "
    for _ in range(0, 9):
        display_text = display_text + " " + chr(starting_point)
        starting_point = starting_point + 1
        if starting_point > highest_letter:
            display_text = display_text + " "
            starting_point = lowest_letter

    return display_text

def get_animation_flags(text, positions):
    children = []

    for i in range(0, positions):
        children.append(render.Animation(get_word_in_flag(text, positions - i)))

    return children

def get_word_in_flag(text, position):
    children = []

    for i in range(0, position):
        children.append(render.Image(src = base64.decode(flags[" "]["flag"])))

    text = text.lower()
    for i in range(0, len(text)):
        if text[i] in flags:
            children.append(render.Image(src = base64.decode(flags[text[i]]["flag"])))

    return children

def randomize(min, max):
    now = time.now()
    rand = int(str(now.nanosecond)[-6:-3]) / 1000
    return int(rand * (max + 1 - min) + min)

def get_custom(type):
    if (type == "custom"):
        return [
            schema.Text(
                id = "phrase",
                name = "Custom Phrase",
                desc = "Custom Phrase",
                icon = "message",
            ),
        ]
    else:
        return []

def get_schema():
    return schema.Schema(
        version = "1",
        fields = [
            schema.Dropdown(
                id = "type",
                name = "Display",
                desc = "What to Display?",
                icon = "flag",
                options = DISPLAY_OPTIONS,
                default = DISPLAY_OPTIONS[0].value,
            ),
            schema.Dropdown(
                id = "speed",
                name = "Speed",
                desc = "Display speed?",
                icon = "forwardFast",
                options = SPEED_OPTIONS,
                default = SPEED_OPTIONS[0].value,
            ),
            schema.Generated(
                id = "custom",
                source = "type",
                handler = get_custom,
            ),
        ],
    )
