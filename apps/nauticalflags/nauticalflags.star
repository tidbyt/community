"""
Applet: NauticalFlags
Summary: Display nautical flags
Description: Displays nautical flags.
Author: Robert Ison
"""

load("encoding/base64.star", "base64")
load("render.star", "render")
load("schema.star", "schema")
load("time.star", "time")

flags = {
    " ": {
        "name": " ",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUXIzEVOopcAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAACxJREFUWMPtzkEBADAIAKHT/p23GH4gAVO9Dm3HBAQEBAQEBAQEBAQEBAQEPiESAT9AXSQQAAAAAElFTkSuQmCC",
    },
    "a": {
        "name": "Alfa",
        "flag": "",
    },
    "b": {
        "name": "Bravo",
        "flag": "",
    },
    "c": {
        "name": "Charlie",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWJSu/wL6XAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAGtJREFUWMPt1bkNgDAQRNG/XAkJHZAg0RgBRVEOjdAGtmUCFzEBsw3sk/aYACrCGgCm9ZA0f5+LDnEZYEAAtVbNJUaER2BAe8X3snsEBhigzYKSkqR5P44OIwNaFuRctIB5O70DBvw8C5SAD56AFcaOnL7mAAAAAElFTkSuQmCC",
    },
    "d": {
        "name": "Delta",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWJiwKiXj3AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAF1JREFUWMPt1z0VgDAUQ+EbTpkwgoiOOKlNhKClDK8LHjKQGMg3vR8BhTEN4L1PS/l+PWyYE0AADUAqL6BKXsAxuqk+cyCAAAIIIIBvGc3pAwioXMUBBPBrgNzv+QJmHA+7M8mpugAAAABJRU5ErkJggg==",
    },
    "e": {
        "name": "Echo",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWJxurL+y5AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFdJREFUWMPt1zERgDAAQ9Ff6GEDK4hBVpWwIwQJrNxxZUJDhv4YyBuypACdYCrAsu6R8udqTIQjQIAAAQIExAEV4LjPSPn2A+b+ugEBAgQIEDAuoKTv+QcKNwnyjqxzIwAAAABJRU5ErkJggg==",
    },
    "f": {
        "name": "Foxtrot",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWJzl+T61dAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAjVJREFUWMPFl81OE1EUx3/3dqY0LsrGNLOeLlRewPgmUgfCA7gx6QdNI0RMpIZBjTEuCQswfkTXmrgg4R1aGl6A2G7aRKoD9bqY0Np0Wu7tUDnbmzn//zn3d++cKwDFNYYFoJS5h26zRa1Ywcrc5E6lRDKdNs4hhAgNGIv/aFJf26D75QBQNJI2t/KPSM7PG+eS04gfrT/ldP8bCEAI2tv7NLZfEbTbszXQbbaor23wc+8rJMRgISlp+3s0/JcEnY7ZNoQIXM7Ar2aLWmWd0w/fw6+iQinSD+9zu5TXYkIIodeB7oX4pwniYUY6bz9y9NzX7oTUAu7xk7ByncOiFJ0372lsvdBiQhoBp3++tMGUxsDphiaYkRBqAacbE8CMhFAbOIPtmASmjAWcQRfGgSljAxcTTHklwMUA0wKolSp0Px/MVvxfE6/fUT87G3Qgfe8upCz+W6RsbmSzAwPZlSWcahEScvbiCYlTLZJdWRoYkLaN6+Vw/PJsTSQkjl/G9XJI2x4+BaGJRRx/FeZmsB1zFo6/iust9sVH7oF+JzYLV8tEysLZLAxVPjQTjphY9gA4KW/B7/P4lT8r4C57SMuKHkpHTFgW7tIDEIKTfBV6f2IB53q5SPGJf8PYYEYAZzwPTA3mGOCmmoiMwZwA3NiHiZYJHTAvAW5qA1pgagAX+10wFkxN4MaPC4bRCwJ1vLOrDjML6jCzoI53dlUvCIzzAGqq6+6iE+q8BzB15f2h9Dqf538BCDiC/Zdkqk0AAAAASUVORK5CYII=",
    },
    "g": {
        "name": "Golf",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWKzHcIWpjAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAIlJREFUWMPt17ENgzAQheH/IpSCLMIQyTJkLlJkDjpGyQIUhMIRPhoUJTpE6+ZdZfuerK99BjgFpwL49E1YXO7X8DY/Btztezdz6vYWc92AY8f/5UR6PTlReAQQQAABBBBAAAEEEEAAAQQoDqgAxmnZ3+b0Qz0zTksop7u5d8b/OreFnG9nK13PV0Q1KdTDLbtZAAAAAElFTkSuQmCC",
    },
    "h": {
        "name": "Hotel",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWLB9PtvFrAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAEpJREFUWMPt1zEVwCAQBNE5XhzEBR6wjwhcRAA5PNBcM2Ngf7sBJIU9AJl3hn9v5tuvx8e3aBQnQIAAAQIECBAgQIAAAQIERPU9P07DCz8SRE2mAAAAAElFTkSuQmCC",
    },
    "i": {
        "name": "India",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWLRTBfxmiAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAi1JREFUWMPtlztoU1EYx3/nPmweTYkZgtEa1PiojxiKQkWwIqToKFRH27VLHJ0sHcUH6uKiIILFoRWcdNCCD4QOgYpWMQRRLFSwptY8bNLk5h6H+lhscx9ilvznc8/34zvn/z/fFYCkidIAahNdTSmuJzMoNFktgKYDaE4/lBLMn/4RAhTxnwAWinXeflwiM1Pma8EAwO9R2NrpJb7FQ3itZgvGMkB5yeRhusi1ezkev6z9dc3uqEqqP0T/4SDBdtXSvgKQjXLgW6nOhTtzXBzLW9r0VNLH8OA6NkfWuM+B7xWTc6OfuTSet9zW2xOLnL3xiVy+7s4FUsL9yQKX7xaQNgN77FmFmw/mMerSOcB8weDqeM6xxUZuLfButuocYCpbJp01HAMYdcnk69Kq3VsRwDThzYey66B5Pr1I1ZD2AQxTMjNXcw0wla1gmtL5JXSr2S+msyNQBIQ6VNcAhxJtKKtE44oAmiroinpcAxzY5UPXHLpg3w4fQghXAAfjflQnHQCIhnVGBoKOiw/0+UjEvM5zQNcEg0dDJLt128W3r1c4fSJMu1dxN5B0hnXOD22gd4/1l3tbROFKKkIi1vgOWZqI9sY8XD8TJXU80HDtyV4Po8Mb6dsfsARr6Tn+MxNIXr0v8+RFkUfpEk+nl4MqvknjWI+PI90Benb66PBbs6+ezNgD+KW6KanW5O+AEWLZtrpmzzF6MuNsJlQVgbdN8C/UGstbAKLZv+c/AHagra8ljw+LAAAAAElFTkSuQmCC",
    },
    "j": {
        "name": "Juliet",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWLgj+UxYuAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFlJREFUWMPt1sEJgEAMRNEfWbQMtzjtyuZsQwjxYBE5+KeBPEgYEkDRmAGw7kfL8Oe+WGiOAAECBARQVT1tHBGuQIAAAd9Llpn/bcIBsM3TIxQgQEBvE3YCXkf3EMJKYOp0AAAAAElFTkSuQmCC",
    },
    "k": {
        "name": "Kilo",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWLyNL9N4vAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAE9JREFUWMPt17ERgCAUBNFFjK3DFiiIriiFZmxDBrQHkp/s5Tf30kvAR2BOgNHvrfJcmauW7fH3aRwER4AAAQIECBAgQIAAAQIECEjR9/wHM/4JP/O32RwAAAAASUVORK5CYII=",
    },
    "l": {
        "name": "Lima",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWMCVvzXWEAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAF1JREFUWMPt1sENgDAMBME1Cb1QCGVTCL2gCHrIPcJjr4Bo5Fg6F/CyMB3guY7pB/bzjgAbiyNAgAABAgR0gDHmGrm1igGV3gNplcdfMDs9l1CAAAECBPwGENdxmg/Rjg848bwp+wAAAABJRU5ErkJggg==",
    },
    "m": {
        "name": "Mike",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWMSgIZzh4AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAzVJREFUWMPFl0tPE1EYht8Z0ISykELrCqImtEgvGttSIOoPIEb/gTEqJUFYiCs3RpSL0lGoxlhIlNDCb2DlSuLK0hotyi1pAQEjLaXTgTQgrYuhpGXuUxLOcnqm33POeed7ZggAWZzgKAWAbLaQIR7fwuMnI/BNLoI4hiKWag1G3rTBYTcXXCcIAiTfDVVVFeh/1oa7Nwz4lymuuLVGg2GPC3abmfd3UuhGvV6Lnu5WuG4ZVUNYazQYHnLBYTeDENhKUuwPzuor8fzpfbTeNCgOSq643W4GQQgfJAkA8wtRUYjebhfutNTKzoOlWgOvRHGG2QEAlADonlk4haYGA3Q6Le/k8vIyNDeZEVuJ4NvipiiIpZo9c4fdIlicphm8pHyY+jzJAqztmRAOhuF01ApDaMrQ3GhGYi2KwNwmSEI4cGxxfsBkkgE1OA7KF0ImGWQBSipsWN5IYyYkAVFehkZnPeg/ywjMxgsgCgNHCBZ/NTSBvtFplJIE9vMBALAQwTAaJSCcDfVIri8htMAeh5zA0TS78r7RaZwuYedwAHIQ36d/SGaiyWlC/HcEmXQaXo/4yml6GwOUH5QvhNK8bdtPBkEAyJ4+18q56Wp9BbyeB6iruyAYuFgsgbX1DVgtRsEzp2kGA5QfgxMhZI48y7tLH4T7wJdfW+jo8mJ2LiIIoNNpcclqFA2c+/U4KD+3uKxGNPUzgc5H4hBCIz9wIn1IHAAApmYS6OzyYk4BRC5wvR8Dh4FTDZDbifaH7zE/H5Wcm2J2MED54R4LShaXDQAAydQuUgftU2zs7e7hbzwFuX2blC0Wjwu2KybJuZWVZxSpnNMHxJUqb1liHTN/8DYiNUqV2zH5AMhilJpKbSMaXS1K5WRRSnX7cK/dI/qI6vVa9Pe04XZLLe9LDecIlCp1JZZWrXJOBtQo9dCiKlReAKBWqfkWVarywxeSy5ZrB9uuXKlHIWSrfDWCYOATq+OvgTDsNrMqpfINOSqPx7eg02lZgKNfRnyBc48FoaQVXDdp8W6oHRdFIAS/jJQqtRiVk8eh1GJUznsEDLODF+4xUL6Q4pULZWL4bQeMhvOcIyBO+vP8PxWu1EW+ghrIAAAAAElFTkSuQmCC",
    },
    "n": {
        "name": "November",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWNQK3sDSqAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAT1JREFUWMNjZGBg+M8wgICFgYGBgU0+BaeC9gJbhqKCOKxyf//+ZTCzL2S48uQ7Vvlfb/8yvL7fwyAiIoRVnpGRkYGJYYDBqANGHUDYAYyMeKQYidCOXw0jAwPD/97+hTgtv3P3OYOKsiQDw3/M4uLfv/8Mjx6/ZlCQF8Oq/e3bzwzs7KwMPDwcWOWLC+MhDvj/H3dZ1DdxMUNl/yGc8nuXZjDYWBtjlXvw8CmDomEtAxsfM/Zy4uEcIqLgPwUFJRF6R3PBqANYYLUarjz87x/+hPT371+c+v/+/QfJ6ITKASPrXJwKrE3lGMJCHHFaXlKzFKcjP3/9w9DXEsYgIMCLVd7WxgQSArjqcwYGBoboEDGc+fzv378M//4twdsesDDXw9keGE2Eow4YrY5Hq+PRXDDqgEHhAMaB7p4DAIdUjDzsuJLfAAAAAElFTkSuQmCC",
    },
    "o": {
        "name": "Oscar",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWNS/yb2jfAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAANBJREFUWMPF1z0OAiEQhuGXL9t4BWPvHTTex1sYj+HVLCztrSyx2sQYd5eFmYEKhpnwhJ+CBGQ6tgHgcdnzvGXyO3bx0+uOAHbHxPacSJv4HRBAEuwOfRAaO70Q+h70QOg3EI3Qv2AkQlMTUQjNTUYgtJTgjVBJkidCpYleCK1J9kBobYE1QjVFlgjVFloh1KK3QKj1DFsRsrjJLQhZvedahDBsNQhTQA3CHLAW4QJYg3ADlCJcASUId8ASIgQwhwgDTCGG6L/giCADV0i9v+cfVW4lXYzQprcAAAAASUVORK5CYII=",
    },
    "p": {
        "name": "Papa",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWNihHJq6/AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFpJREFUWMNjZGBg+M8wgICFgYGBgU0+ZUAs//VwDgMTwwCDUQeMOoAFn+TPB7OpYgm7QupoFIw6YNQBow4YdcCoA0YdMOqAIdoiwteSGY2CUQcMGwcwDnT3HACrcwjP/gpMdQAAAABJRU5ErkJggg==",
    },
    "q": {
        "name": "Quebec",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWFR9BMnzRAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAEBJREFUWMPt1zEVACAQw9AcD7wgBNkIwQsDyOiSGOhfW8AjWAe4e0bGxzo0wgkQIECAAAECBAgQIECAAAGVvucfApsFP0/tkMEAAAAASUVORK5CYII=",
    },
    "r": {
        "name": "Romeo",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWFxGUvDNUAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAHtJREFUWMNjZGBg+M8wgICFgYGB4TC/GtEaLNYy4ZQ77vaPgZGXeMttP95iYGIYYDDqgFEHjDpg1AED7gAWBgYGhv+fqWTaP9LNYmRgYPj/e4/GgPie1eXGaBoYdcCoAyDlwIngfwPSJBuNglEHjDpg1AGjDoC3iAbSAQCb8hY8KMr09wAAAABJRU5ErkJggg==",
    },
    "s": {
        "name": "Sierra",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWGDkmkYdhAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFhJREFUWMPt17EJgFAMRdEb+eAaLudUfznXsIqFrVgJr/CmTZEDIZBXQBOsAdCdMVQVC+ESEAeMt+a67Z8NOo/pCgQIECBAgAABAp5f8zsWmAsE/P0KkoAL3QkMP9vHRWAAAAAASUVORK5CYII=",
    },
    "t": {
        "name": "Tango",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWGgU7yJlkAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAEpJREFUSMdjPMyv9p+BEPj4k8Hm/wMGYgCjeDIDGycTXjX//3xmYGIYIDBq8ajFoxaPWjxq8ajFoxaPWjxq8ajFoxaPWjxqMWEAALdZCbKwnKyRAAAAAElFTkSuQmCC",
    },
    "u": {
        "name": "Uniform",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAGYktHRAAAAAAAAPlDu38AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWGyxgYTBJAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAGxJREFUWMPt1ssJgDAQhOF/kty1Cm3C7rUJu7CAPDzYQXIIwsx94FtY2BXQmJgEcC5bV/l4bmophBi7+pIITI4BBhhggAEGCGit9V/kmjNIXd2Y0jhgaHrp+wdGc627l9AAAwwwwICf/wMzAS+KPxQ4OBSSVwAAAABJRU5ErkJggg==",
    },
    "v": {
        "name": "Victor",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUXBTc/h6xNAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAtBJREFUWMPFl89P03AYxj/9tpEKB8X1XxgJnvQP4KgXryZ682A2xno3kVAcDiHROVDCT2OMIkE8atQYjxyJFy9b2MVwMxmRbYxMG6iHupGxb9eOLqHH9m2fp+/77P2sCuBwhocGsHlhoOlk761rXJ6aQI9EuiJiV/bJTT+mvLDRdH6otI2Q3XCw8Y1capJasdgF8Qr5TJby4ob0uvC6sfr6E7n0dCgTdrlC/ukzSrNrnoP2NIBQqL78cGoTdqVCPvuMUuYNKN51AiBiJUCVeNEE1VcfyU08ora729HM85kZSjOroEnUVeFq1g0MmEkMKwmqIu/E6mdyD9KBTNiVffJPspSer8nfXFUwrCQDZvLYgKr3EE3EMMZNUOT9qr794hvMeuBKcx4zVxSMcZNoIoaq9zRnQNV1osMxjJQp74RPMH0DpyoYKZPocAxV1+UhbJiwTHkmPILpGzhVYFit4uCWO47TbPmw9ofC4jLFyUU4PGp94JFD350bDKbGUM/1uG2fXfMWHxshOjLcaPvxRBS5gYaJpRWK6Xk4lP+Ie29fR+u/SHnpvXfbLZNoIt4i7mvANVGjsPyCYmoenA6RochnftKA1u4Z9UwAFB96d0L65uPtxZtgFMiEA8X0gjwTLYFLBhJvv4pPmkjEidyP+9Zeunf3/8z1QM0SQUd6ZNvYv/d862o/d7Cr+4GjIgKDJZOlvPDOt/Zg/WtHKPc1EASpYVAuuoHUMCj33AMuUttvuMioG8rdqRXfjSn7e+e5BxpInWuP1GjCNVBQNfnGrKPccRicsKQmRFikhkW56AZSw6BcdAOpYVCuAM7fcuXUSJVSNCDKzxsGKpC6iUZ5ft0bLJYZSBxAaBr9V69Q6xMcbG61jlJRsH8U2Pu1w8r3LbcDJ7+MOkGqdyf8UT5U2m5Dww6QGgblWjeQGgbl0lUcGY13hNRAKB+Ne6/is/w8/wfWI8BX42jaKgAAAABJRU5ErkJggg==",
    },
    "w": {
        "name": "Whiskey",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWHiL6rukLAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAKFJREFUWMPtl8EJAkEMRd+Y4FHsYI/bhOV4sx5vlmMTe7SDxaNMGBvYkVkcCS7JMYT8B/mEJAEFx1CA/XB2EX89buxwjgBYBJDUX6jWU5eSVuA5XVGVLuI5G4fx0g4AoCqISJhw+wC6pvh+HJvqTvMUIwiAAAiAjW7CNRsuRvD/HsjZuol86qW1A7J2w31zlFppHIH94Fmr9QwTugMk7/f8DSJqHu7Mle6hAAAAAElFTkSuQmCC",
    },
    "x": {
        "name": "X-ray",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWICksuSv+AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAFxJREFUWMPt1rENgFAIRdGLMTqGDqdT6XA6hr/BwtpEK5pLS/FOQggEkBRWD5D53TDO62vvOrZf4RFBR3EJECBAQDkggBympSS8nbsjECDgWUM/IgECBAjwFlQCbmx/EzvQ+oK7AAAAAElFTkSuQmCC",
    },
    "y": {
        "name": "Yankee",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWITqxHFthAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAA1pJREFUWMPFl01PVFcYgJ/3MoPSmSYmJjSOQ4QFYefKuvCjibS/oBsXhtpNowFxwf/ogkK6UZEmhSaNJm7Ugh8LTTetdtFdZ/ADJKNA0tQyaIbee44LLnfuOffcwavTyPIm5HnP+7xfI4DmA/7lANau9UcfGv9CZVrTeGDGJUUon/H45CAgze/Kh6fzmr9/1qDi/wCFQaH/pJDbbUJfLsGfkz5fVp5sBbCn2BHBn11T5B8K+RhEuqA8LJQOC+KZ8MW7ms2rmqI2AysMwsBXHp0fW/BnsPaDouuF18xA9PIZxcYtwDNzVB4VSp9a8GALvnLBermGwhchvGjBl6E6qfAXLAWNdaj8mIRLHspjQumQCdcBLN7WrFyy4OwA/07hP3LUwF9Tilf3LPhHUD6XhKtt+GUNgeX8RAv4uMJ/nCxCD9iCY8FHHGn3YfGOZmVKw3/Wy0/s8HIL7nXHAjDg+fDlKQW3ckGDbzn/HAZOOwpuGaoTybR39ELfsFWEUcGNpaT9Tnucd/RC/3mBvdrMgHRBTxr8lsN5vNXSnLvgo8KeA2IWoRTCPk9zPu1wPpjNeQTvlWQXpBbc3TDtgaPPh7I5d8GjAEqHBZE2DJkJc8jEncfTDhA04grEMWSmMhbceIu0W/DNDVi4opNdYAwZ3+F8KIPzPug/l0z75gZUZhXrc1YAqc53WCzVyRTnKfDqT4r6jebiyrVzsbQquM0NqM4q1m+Eza9jATyd16xOt2nIpMArM4r6XHL25gBW27BYWjqfUdTnXf23HU+QYbFMpFR7K+e/WIdfHrqHxLGM3maxZHV+3byUyMH+EaHnM0cAOzpfyOZ8/aZ1Y+yC0ohQPiJIR9zE/+Xcuiv3fSP0HDNHvvcux0RL57NJ59IZwo+b8CgDA197dBbeb7FsF1zU5zFCaVgoH7Xg8TnghLc4JlyzvTITvtwzX14aDp3Hj1oFtd8du+BdF0sr5/bLdQBL9zW1i44Ash4TkfM5667c5XauAlj+VfP8++ayy73VYsnofN/ZZLXrEF4b18kijOALGZzPhlvNMyfc/hG386X74ctdE/mPb32CJZ242/tOe7BX80+9+d1vwKMremufS6zdctB9SigeFF6+Nqu99pumdsm8MepabY+gD/vz/A0sVFDqbu/LiwAAAABJRU5ErkJggg==",
    },
    "z": {
        "name": "Zulu",
        "flag": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgmlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIA0EURY9RiUjEwhQiFluolTYqYhmjEIQIISokauHuxsRAdg27CTaWgm3Awk/jr7Cx1tbCVhAEPyDWFlaKNiLrmySQIMaBYQ535l7eewO+w5xpuS0hsOyCE4+EtURyQfO/4CcItBDQTTc/EYtFabg+72hS5+2Qymr87s/VkVpxTWjShENm3ikILwuPrRfyineFg+aqnhI+Ex50pEDhB6UbFX5VnCmzT2UGnbn4pLDqQMvUsVHH5qpjCY8K96UsW/J9iQqnFG8otnJFs1qn6jCwYs/PKl12LxGmmSGGhkGRLDkKDMlpi+ISl/twA39P2R8TlyGuLKY4pljDQi/7UX/we7ZuemS4khQIQ+uz5733g38bvkue93Xked/H0PwEl3bNv3YI4x+il2pa3wF0bsL5VU0zduBiC7of87qjl6Vm2b50Gt5O5ZuS0HUD7YuVuVXvObmHOZlV9Br29mEgI9lLDfpuq5/bv2+q8/sBCWJyfLi2Tc8AAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfoBxUWIxax8lUAAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAA0FJREFUWMPF191vFFUYx/HvObtAKVTDS6FY2O32TWLQGA3xylsvvPCC8KIYaIWE1g2FspT/QEy0JpKYqFv+Ai8EExMTjYlAiaZWUKChS7f7QqWlu+zsYtulu3R3Hi+07aJ9mdluy1zOPOf8PjPnzJkzChCe4uEEON/h5tAbFTh0bkVCRTQ9wZ287r2ABvB9NsRXP02QM50rEv5r8HlaPt8I8A9gPCu0dEb5+nKa/DIiRDS/DTbi9W9icJxZAEAmB0c/inChe3kQguZ6qAGvfzOBh7PndWFRNgetnVEudqcxxVnCcMXv4Qa8/kpup568pv9bPJYRTpyLcrH7EaY4ShCvuBFpwPvFZvqS/7+q52ryYFw4eS7Ctz9PLgkhKG5G6/F+WcmtpJqzRs/XODYmHPs4wnc9maIQgqLvbj3H/Vu4kVDz1umFOkmmheazYb7vzdpEKG4P1dHm38K1uFqwUi/W1V+TwnsfhvihN4tgDdF/r5a2rq30xtSitdpKh8aE0PpJ2BIicK+ONn8VPfeVJay2+lCHkybHPw3z47XH8yLujNRysquKX0aU5cHSdiZWNG7S2hni0h+PEdFPjHnwvof2rm1cHVa2Jqu2O7uHEibNZwfpvpX7F6EIjbpp73qOK38q22+LLub9HkkJhz8IcrUvR2jUxanz1VwaUkWtFUWvt8NJ4Ru/YvcGRSRW/Dqpi234vqeRt1Kamv4IZ2QEj5aVASigxdPAnkkHazJ5EKExFaZDjRaFsAVwKMXRmnr2ZlZRNpkv/NCz0wji0zHbCG3nzptcdRzIrqbs0dxbtxcSA7TrOC4bCMuAZnc9b0/NHz597EoM4NNxqnUJAdPha9NWNq3CLmOADh1jmy4B4LC7jnemVlOetr5jViK8aAQ5o+OLIvRCY/6uq5aDuTJb4bMIk5eMO5x2PKBK2QQo4MAOD4fya1k3MVX8ZkyElxMBfM4EW5UNwP4dHpqkfEnhhYhXEv34nAkqlQXAdPj68aWHFyJeNQKcdhpsUgsA9m2voUnKqShh+AzCNGcQG9UcgD3b3TSpdTyzDOEzYWae3UYAnzPJBlUAeLPaxRFVwbNjyxdeiHjN6OfUqtTMhH+qv+d/Az4IS6ttItS1AAAAAElFTkSuQmCC",
    },
}

common_pairings = ["AC", "AD", "AN", "BR", "CD", "DV", "dx", "EF", "EL", "FA", "GM", "GN", "GW", "IT", "JA", "JL", "MAA", "MAB", "MAC", "MAD", "LO", "NC", "PD", "PP", "QD", "QT", "QQ", "QU", "QX", "UM", "UP"]

DISPLAY_OPTIONS = [
    schema.Option(value = "phrases", display = "Display Random Maritime Messages"),
    schema.Option(value = "letters", display = "Flags in Alphabetical Order"),
    schema.Option(value = "randomletters", display = "Flags in Random Order"),
    schema.Option(value = "custom", display = "Custom Phrase"),
]

SPEED_OPTIONS = [
    schema.Option(value = "2200", display = "Slow"),
    schema.Option(value = "1600", display = "Medium"),
    schema.Option(value = "1000", display = "Fast"),
]

def main(config):
    display_type = config.get("type", DISPLAY_OPTIONS[0])
    speed = config.get("speed", 1000)

    #default
    display_text = "TIDBYT ROCKS"

    if (display_type == DISPLAY_OPTIONS[0].value):
        display_text = get_random_phrases()
    elif (display_type == DISPLAY_OPTIONS[1].value):
        display_text = get_random_alphabetical_order_flags()
    elif (display_type == DISPLAY_OPTIONS[2].value):
        display_text = get_random_letters()
    elif (display_type == DISPLAY_OPTIONS[3].value):
        custom_text = config.get("phrase")
        if custom_text != None:
            display_text = custom_text

    return render.Root(
        delay = int(speed),
        child = render.Row(
            children = get_animation_flags(display_text, 2),
        ),
    )

def get_random_phrases():
    remaining_pairings = []
    display_text = ""
    for item in common_pairings:
        remaining_pairings.append(item)

    for _ in range(0, 5):
        random_number = randomize(0, len(remaining_pairings) - 1)
        display_text = display_text + " " + remaining_pairings[random_number]
        remaining_pairings.remove(remaining_pairings[random_number])

    return display_text

def get_random_letters():
    lowest_letter = 97
    highest_letter = 122

    remaining_letters = []
    for i in range(lowest_letter, highest_letter):
        remaining_letters.append(chr(i))

    display_text = " "
    for _ in range(0, 9):
        random_item = randomize(0, len(remaining_letters) - 1)
        random_letter = remaining_letters[random_item]
        display_text = display_text + " " + random_letter
        remaining_letters.remove(random_letter)

    return display_text

def get_random_alphabetical_order_flags():
    lowest_letter = 97
    highest_letter = 122

    starting_point = randomize(lowest_letter, highest_letter)

    display_text = " "
    for _ in range(0, 9):
        display_text = display_text + " " + chr(starting_point)
        starting_point = starting_point + 1
        if starting_point > highest_letter:
            display_text = display_text + " "
            starting_point = lowest_letter

    return display_text

def get_animation_flags(text, positions):
    children = []

    for i in range(0, positions):
        children.append(render.Animation(get_word_in_flag(text, positions - i)))

    return children

def get_word_in_flag(text, position):
    children = []

    for i in range(0, position):
        children.append(render.Image(width = 32, height = 32, src = base64.decode(flags[" "]["flag"])))

    text = text.lower()
    for i in range(0, len(text)):
        if text[i] in flags:
            children.append(render.Image(width = 32, height = 32, src = base64.decode(flags[text[i]]["flag"])))

    return children

def randomize(min, max):
    now = time.now()
    rand = int(str(now.nanosecond)[-6:-3]) / 1000
    return int(rand * (max + 1 - min) + min)

def get_custom(type):
    if (type == "custom"):
        return [
            schema.Text(
                id = "phrase",
                name = "Custom Phrase",
                desc = "Custom Phrase",
                icon = "message",
            ),
        ]
    else:
        return []

def get_schema():
    return schema.Schema(
        version = "1",
        fields = [
            schema.Dropdown(
                id = "type",
                name = "Display",
                desc = "What to Display?",
                icon = "flag",
                options = DISPLAY_OPTIONS,
                default = DISPLAY_OPTIONS[0].value,
            ),
            schema.Dropdown(
                id = "speed",
                name = "Speed",
                desc = "Display speed?",
                icon = "forwardFast",
                options = SPEED_OPTIONS,
                default = SPEED_OPTIONS[0].value,
            ),
            schema.Generated(
                id = "custom",
                source = "type",
                handler = get_custom,
            ),
        ],
    )
