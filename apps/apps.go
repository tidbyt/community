// Package apps provides a clean way for Tidbyt to be able to get a list of all
// community apps.
package apps

// Code generated by tools/generator. DO NOT EDIT.

import (
	"errors"

	"tidbyt.dev/community/apps/analogclock"
	"tidbyt.dev/community/apps/analogtime"
	"tidbyt.dev/community/apps/bgghotness"
	"tidbyt.dev/community/apps/biblevotd"
	"tidbyt.dev/community/apps/bigclock"
	"tidbyt.dev/community/apps/binaryclock"
	"tidbyt.dev/community/apps/clockbyhenry"
	"tidbyt.dev/community/apps/dateprogress"
	"tidbyt.dev/community/apps/datetimeclock"
	"tidbyt.dev/community/apps/daynightmap"
	"tidbyt.dev/community/apps/digibyteprice"
	"tidbyt.dev/community/apps/digitalrain"
	"tidbyt.dev/community/apps/dvdlogo"
	"tidbyt.dev/community/apps/espnnews"
	"tidbyt.dev/community/apps/fishbyt"
	"tidbyt.dev/community/apps/fuzzyclock"
	"tidbyt.dev/community/apps/gapilotbuddy"
	"tidbyt.dev/community/apps/googletraffic"
	"tidbyt.dev/community/apps/hvvdepartures"
	"tidbyt.dev/community/apps/isstracker"
	"tidbyt.dev/community/apps/jokesjokeapi"
	"tidbyt.dev/community/apps/lirr"
	"tidbyt.dev/community/apps/manifest"
	"tidbyt.dev/community/apps/mbta"
	"tidbyt.dev/community/apps/nationaltoday"
	"tidbyt.dev/community/apps/nearearthobjs"
	"tidbyt.dev/community/apps/netatmo"
	"tidbyt.dev/community/apps/nft"
	"tidbyt.dev/community/apps/nightscout"
	"tidbyt.dev/community/apps/noaabuoy"
	"tidbyt.dev/community/apps/nyancat"
	"tidbyt.dev/community/apps/nycbus"
	"tidbyt.dev/community/apps/pagerduty"
	"tidbyt.dev/community/apps/phaseofmoon"
	"tidbyt.dev/community/apps/pokedex"
	"tidbyt.dev/community/apps/sbbtimetable"
	"tidbyt.dev/community/apps/sportsstandings"
	"tidbyt.dev/community/apps/steam"
	"tidbyt.dev/community/apps/sunrisesunset"
	"tidbyt.dev/community/apps/theysaidso"
	"tidbyt.dev/community/apps/twitterfollows"
	"tidbyt.dev/community/apps/verticalmessage"
	"tidbyt.dev/community/apps/weathermap"
)

// GetManifests returns a list of all apps in the this repository. Add your applet
// below to include it in the Tidbyt Mobile app for all Tidbyt users.
func GetManifests() []manifest.Manifest {
	return []manifest.Manifest{
		analogclock.New(),
		analogtime.New(),
		bgghotness.New(),
		biblevotd.New(),
		bigclock.New(),
		binaryclock.New(),
		clockbyhenry.New(),
		dateprogress.New(),
		datetimeclock.New(),
		daynightmap.New(),
		digibyteprice.New(),
		digitalrain.New(),
		dvdlogo.New(),
		espnnews.New(),
		fishbyt.New(),
		fuzzyclock.New(),
		gapilotbuddy.New(),
		googletraffic.New(),
		hvvdepartures.New(),
		isstracker.New(),
		jokesjokeapi.New(),
		lirr.New(),
		mbta.New(),
		nationaltoday.New(),
		nearearthobjs.New(),
		netatmo.New(),
		nft.New(),
		nightscout.New(),
		noaabuoy.New(),
		nyancat.New(),
		nycbus.New(),
		pagerduty.New(),
		phaseofmoon.New(),
		pokedex.New(),
		sbbtimetable.New(),
		sportsstandings.New(),
		steam.New(),
		sunrisesunset.New(),
		theysaidso.New(),
		twitterfollows.New(),
		verticalmessage.New(),
		weathermap.New(),
	}
}

// FindManifest finds an manifest at the given ID.
func FindManifest(id string) (*manifest.Manifest, error) {
	for _, app := range GetManifests() {
		if app.ID == id {
			return &app, nil
		}
	}

	return nil, errors.New("app manifest does not exist")
}