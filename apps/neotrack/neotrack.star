"""
Applet: NEOTrack
Summary: Near Earth Object Tracker
Description: Shows the closest object on approach to Earth today according to NASA's NeoW API.
Author: brettohland
"""

load("cache.star", "cache")
load("encoding/base64.star", "base64")
load("encoding/json.star", "json")
load("http.star", "http")
load("humanize.star", "humanize")
load("render.star", "render")
load("secret.star", "secret")
load("time.star", "time")

ASTEROID = base64.decode("""
R0lGODlhFAAUAPcGAEhJRzAxL3l7eAACADc5NwcJBgABAFlbWGBiXyUnJE1PTCIkIXN1coqM
iRgaGDM1MgEDAaipp1xeW3+BfmZoZTo8OXh6dxQWE0ZHRTEzMAADAS4wLXt9emVmY2tuamls
aB8hHxocGpOUkXx9ezU3NT0+PFdZVQwPDJialw8SD4OEgm1wbAMFA56gnRweHJSVkkBBP0tN
SmNlYistKk5RTXR3c3Z5dZmbmAAAACkrKAoMCWhqZ4eJhmdpZjk7OFRWU1JUUAACAWhrZ0lL
SGJkYURFQ0pMSicpJkNEQQIEAlBST6KkoQ8RDo+RjTY3NUBCPwsNChkbGI2PiwgKBwYIBRsc
GXV3dGVnZV5gXQkLCBYYFR4gHTM1Mz5APZGSj4CCfyMlIyAiHy0uLAMFAlZXVVdYVlhZV4SG
gouNidPU03Byb2lraWhpZzEzMRIVEVtcWW5wbXd5dQEDAAECAGpsaQQGBAIDARgZFkJEQQUH
BFVWVAMEAp+gniosKlFSUAEBADk6OF1fXCcpJwwOCyYoJkZIRQkMCRUXFIKEgAADAC4wLpGT
kBATD2FjYIGDgA4RDWRmZImLiUVGRG9xbgMGA0dJRrS2tLu7uR0fHIeJh1hZVjk6N1VWU1ZX
VG1vbX1/fTY4NQUHBSkqKH6AfYuNij4/PHV2c1NVUktMSmVnZExOS15gXCEjICwtK4aIhmZp
ZlFTUGttak5QTWhqaENEQiYnJTw+OyosKYyOi3x/fD9APklKSIiLiBMVEgoNCikqJx8hHj4/
PSYoJVBSUG5vbIGCf4KDgImLiIyOinJ0caCjn6eqpqyvrLCysDI0MQIEATY3NFtdWpSWk09R
Tnp8eWlraGxuawQGAw4QDVJUURweG0FCQJqcmFZZVmZnZVlcWYOEgS0vLU5PTRcZFo6QjVha
V7GzsSMlIsjKxzAyL31/fJWXlGdpZ8PEwjs9Oj0/PISGg3+AfURGQ1pcWg0PDEpMSV9hXz9B
PlVXVZSVk4OFglNVUxIUEWNlY1haWLGysSH/C05FVFNDQVBFMi4wAwEAAAAh+QQEKgD/ACwA
AAAAFAAUAMUAAAAAAQAAAgAAAwABAwACBAEDBQIEBgMFBwQGCAUHCAUICgcKDAkMDgsOEA0Q
Eg8SFBEVFhQWGBYYGhgbHRocHhweIB4jJCIkJiMmJyUoKigrLCotLiwwMS8yNDE0NjM2NzU5
Ozg7PTo+QD1DRUJGR0RHSUZMTktQUk9SVFFVV1RZW1hZXFlaXVlcXltdX1xfYV5iZGFjZWJk
ZmNpa2drbWptb2twcm9ydHF0dnOKi4qQko+Zm5inqacAAAAAAAAG2cCBQEAYGo1FwaAoNG5G
sBnGkIBkcCqAR0cQNpXJwbL5JYqLhMDKhqpoeLjetyseSAif0CASgIhGFxkmCxFkQ01Jh4lH
YDk1HjYqJzcMMSoXOQBhYhMWBQALFhMDGn0BISI8h6tmAgACAUMHq0lMjGG0ZrZKXoZirUTB
HREbDCYpXqy1JjIWKy07NQ0mJLFMXgweNC8lLhQcLRUYDyYYyg4IABcVFpUBChwgIyEsqwUQ
nwCxAQ8QJR5aqiVKEyuYvgAJAPz6IgQNrjlKIiKROKQLI2BHkl00EgQAIfkEBSoAPgAsAAAA
ABQAFACFAAAAAAEAAAIAAAMAAAMBAQIAAQMAAQQBAwUDBAYEBggGBwkHCgwJDA4LDxEOEBMQ
ExUSFRcUGBoXGRsYGhwZHiEeIyUiJSglJykmKSsoMzQyNjc0ODk2Ojs5Oz06PT48PkA9QEI/
QkNARkdER0lGSEpHSktIS01KTlBNUlRRU1VSVFdTVlhVV1lWXF5bXmBdYGJfYWNgYmRhZGZj
aGpna25rc3VyeHp3fH16h4mGiouJkpKRp6qntri1AAAAAAAABv/AgoAwLAgFAqHQMBgUnETk
03g0CJhX60CwHRAITqbzisxeiVvuZgGjjXoAAzVpNDA5mY1L9LHNeB5NVoNyFjQ5IiAALzgm
My4xYANyRAoFGhkOGg8jKDApKzk1SGMEEw4qGCEAFRMSIiUuMjKTSQQFEhs3GxgtGRceFB8U
IgGDBQQGESQnAQEWAM4NGhQdMi1yTQAYBwYLBRE7EwUMFxUKLDpIcnRUBQ/OAQcCGBIQ7E8L
CWCUBAcACAJEA1DGiRAnW+wQ7GbGCrIrCK8EQFDAShIDYIzY4iJHicV1YJIVXDdpyph1FaUM
cZgGI5IvXJ6o1GjQTpGLgq5o5CdFDJIBIAAh+QQFKgBCACwAAAAAFAAUAIYAAAAAAQAAAgAA
AwABAgABAwABAwECBQIEBgMFBwQGCAYICgcKDQkOEAwSFREUFhMWGBYYGRcZGxgfIR4hIyAj
JSIpLCksListLywuMC0vMi8xNDE0NjM2ODU5Ozg7PDk+Pzw/QT5BQj9CREFDRUJFR0RHSUZJ
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
L0Mi4vtz74iUIkEAACH5BAUqAEIALAAAAAAUABQAhgAAAAABAAACAAACAQEDAAEDAQIEAgMF
AwUHBAYIBQgKBwoMCQ8RDhMVEhweGx8hHiEjISYoJSwuKy4wLS8xLjEzMDI0MTQ2MzY4Njg6
ODo8Oj5APUJDQUNFQkVHREZIRUhKR01PTE9RTlFTUFNVUlZYVVdZVlhaV1tdW11fXF9hXmBi
X2NlYmRmY2VnZGxua29xbnFycHJ0cXN1cnV3dHl7eHp8eYCCfoOFgYOFgoWHhIqMiZWXlJeY
lpmamJydnKaopqiqqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/gAUCgwQDhYWCAokFBQSK
AwKOg5GFipOOhpGMlYYEkokCmZYDBZA7ITE6PTEepZ4DpJGQBT4MChgwKy0cP6GcoY0gJyQg
ETk1NCQ3NpmQkAImKiIvEBgSLCQoQEEApIkDFjUjFhoWDTgTHhs8HyEEpZonJSkcMBMsIhgz
HREZHI6CCnXgkGGChAARHjQAgSCGDBIVCkFyUQIIBQUAWhgQgHHBhYUOAgADkGFBgQPvADTo
MEDBgQcgAJgkBQnBMwABBSxYkABAgAqMBDnrBAvWKAnvIHkqlamR0HcCAAwi9U6ipkiTGsEK
uHXS1KxLjR4yFNDRp1BiaVLtqqkU06XfB5SGkqX0VSAAIfkEBSoARAAsAAAAABQAFACGAAAA
AAEAAAIAAAIBAQIAAQMBAgQCAwUCBAYEBggGCAsHCw0KDQ8MDxIOERMQExUSFRcVGBoYGx0b
Hh8dICIfIiQhJCYjJiclKConKiwpLS8sMDIvMzUyODk3Ojs4Ozw6PD47PT89P0E+QUJAQkRB
REVDRUdERkhGSEpIT1BOUlRRU1VTVFZTVVdUWVtYXV9dY2ViZWhlZ2lmaGpnaWtobXBsc3Vy
dHZzeXt4en15foB9f4F/gYOAgoSCg4WCi4yKi42LjY6Mm5yanZ6cAAAAAAAAAAAAAAAAAAAA
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
FACGAAAAAAEAAAIAAAMAAQMBAwUCBAYDBQcEBggFBwoHCQwJDA8MERQRFBYTFhgWGBoXGhwa
Gx0bHSAdIiQhJyknLC4rLzEvNjg2OTs4Oz07PkA+QEI/QkRBREZDRklGSEpHSUtISkxJTE5L
TlBNUVNQVFZTVlhVWFpXWlxZXmBdX2JeZWdjZ2lmaWtnaWxoa21qbG9rbXBsbnBtcHJucXJv
cnNwc3Rxc3VydXd0eHp2e315e316f4F9gIJ+gYN/goSAjI6LjpCNkZOQkpSQmJqXoaOgpqim
p6mmrq+tvsC+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAB/GAAgMEAoUDgoQCBImLjQSHioQDg4WLgoWXlZaajZGDjoQAPyUxMzIoPACU
m4YAMiVGRThHOSEWhomRADlCOho2FkRBFUA9mISJSEktDScpJT4VJEMaJorXBDQkFQoDEBAu
NycVLCEvlNcOKSM6EBIgKRIYGR0fAKqRHfcBCgkVCwJqcFiww4OIFdcEUACwAYGACQkeNMCA
QYUFDxxIPBow4cCjQg4UMDigAECBBQ9ARIhkwBAkQgcABCAQQB4KS4xyJXxEoMCEC4kmHauE
DhOMVcg6sRr6ERKnSpeQ7pSESJKlT4dyUXJa9SojqAkjKQoEACH5BAUqAEQALAAAAAAUABQA
hgABAAACAAADAAEDAAIEAQQGAwYIBQoMCQwOCw0PDA8RDhIUERUXFBkbGBweGx8hHiEjICMl
IiYoJSkrKCwuKzAxLzU2NDo7OTs9Oj0/PD9BPkFDQERGQ0ZIRUhKRkpMSUxOS05PTE9RTlBS
T1NVU1VXVFVXVVZYVldZV1haWFpcWl1fXF5gXl9hX2FjYWNlY2ZoZWZpZmdpZmdpZ2hqZ2hq
aGttam1vbHJ0cXR2c3+AfYOFgoSGg4aIhoeJhpSVk5qbmaOko7GyscPEwgAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAf1gAGCAgIBhYOEgwEDhoKNhoeOhQMCA4yTk4uLjJSClIyOnQMAKjkoLi0ulZKa
iQAsHiIqHDw7FJCihx80QzUXESk4JQxCl56GMDIVNiVAKT4zIx9BK6wDCS8/DigdOjoyPica
KxqNiT8+AQAoJRs2Ej0mGQExjo4LDQAKBRIkGSgZJoAokcKDogoZLDBIEEIChgghFjy4QeCC
hkgGBAAwoEACAY8rFByQ8GECggiGABgioBIBAAAdJjxogAFCAg8dVrEaZGnSgQcVGrDKpLPR
JweFknpKSgjUIVCbNIUyZ+/T0kiboGqytHWpJVBgDTntiaiqo0AAIfkEBSoARwAsAAAAABQA
FACGAAAAAAEAAAIAAAMBAQMBAQQBAgUCAwYDBggGCAoICw4LDhEOEhQRFhgWGRoYGhwZGx0a
HB4cHh8dICIfISMhIyUiJCYkJiglKConKSspLS4sLzEuMjQxNDY0Njg1Nzk2OTo4Ojs5PD07
PT88P0E+Q0RBREZDRkhFSUtIS0xJTE5LTk9MUFFOUlRRVFVSVVdUWFlWWVtYW1xZXV9cXmBd
X2FeYGJfYWNgY2ViZWdlZ2lmaWtoamxqa21rcnRydnh1eHp3gYKAh4mHioyKjpCOmJqY1NXU
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAB/+ABIIDAwKFAgSEAouIioiMi4kEkZOFk42FhIKPAZWQhAOViSUBMC1FPiyZ
j4aNAigsJy8bODwtQIyHggQAFAsZIzc5ITAaQTOUmwETPSwRHCnQJjEkpKyCOjU0DiIlGkQ2
HkMJODKeixIlDgAoQBJCDNACGhCVhBIfKQAECRIVHzJIGPkxAUUGQ4VWhJDQIEIMFhxIXMiA
wQEIEDsiBQiQQICEAgkCaGgBYgSFDi5exMg4AIEBBhZYgFig4MKDAyEMZJCgosaIRQYiLQLw
qMeiAA4qBFAkCdGmXJcaNWXFylKuRbocHcLaSlIoSE61tkL41WooS6seWVU7NlKoQQMCAgEA
IfkEBSoASAAsAAAAABQAFACGAAAAAAEAAAIAAAIBAQIAAQIBAQMAAQMBAgQCAwUCBQcEBggF
CAsHCQwIDA4LDhANERMQFhgVFxkWGxwaHR8cHyEeISMgIyUiJCYjJiglKispKy0qLC4rLS8t
LzEuMzUyNDYzNjg2ODo3Ojw5PT48P0A+QkNARUZER0hGSUpHS0xKTU5LTlBNUFJPUlNQVVdU
V1lWWVtYXmBcX2FdYWNgY2VhZGZjZ2lmaGpnaWxobG9sbnBtb3FudXZzdXd0dnh0d3l1eXt4
gIJ+g4SBg4WChIaDhYeEioyKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/+AAgIDBoIEgwYFAwIHBQcDkASSjI+SkgWCB5KF
iwcCBAYHoYIAAQIFjo8DlwSojgYYL0BAIjQ+moWFBKKhBjYaKjEhP0I/R4QCiZ2MFSUgGUc1
JidAKUS4hAWhABc1PiQRPEM0RTQzHowGBIsYEAg1HAAxPTY5EzFBGqCnAwETEB8ylOiAwsgC
FgoU1OiRbBIECiA6HNhwgYeJHThctGBxQgcjAgBCWIiAIAIDEyJQjAjQgQYMADcC9FrRQEKB
BhoqAACwgMKKDxUyyPCxaoAHBAcYRJDgQAADCARCoHiRIgOMVgIQHNI2CmmCnQwSPCiUDBWk
U54QtSplKlmvrYQxDnnita4AKFEDMK0LtUvQq3R4MeUa9GnAI0+J0vaFlMrwoUGrDEiG1IgQ
p1zreCULBAAh+QQFKgBCACwAAAAAFAAUAIYAAAAAAQAAAgABAgABAwADBAIHCAYHCQcJCwgL
DQoNDwsPEQ0SFREWGBUZGxgdHxwgIyAjJSIlJyQnKSYpKyksLisuLy0vMC4wMS8yMzEzNDI2
NzU3OTY5Ojg6PDk+Pz0/QD5BQkBDREJJSkdLTElMTktNT0xPUU5QUk9SVFFWWFVYW1haXFph
ZGFjZWNkZmNlZ2RmaWVpa2hrbWpwc29xc3BydHB1d3R3eXZ6e3h8fXp9f3uDhYGFhoOHiIWN
j4yUlZOdnp0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/4ACAwSDAgSEhgKGgwSLgouNh4iH
hoSMioWVlpGKmAOKkgMyKjsiKy4An4MDrIgDASQ8Ih43IhEyOJuMqjMnDxYlND43MS+ph6yC
AxkeKQArLDAdOkE2PQGUnwQgLSMhJRcjDBobKi45QJ2JEh4MMxofGg8IASUbHD+PBAEMBRIb
Bj742BCCAooPDzKs+BHJAAAHAwpSqEABAwQINT5MyGCiRKMABwBgQ5CAQQUACQJkAHFvBStt
BxDsy7AgwQIDHiyQYABBwYZOBBYI2gdqZgMJAbApMnDhwKZE6hpgmhSKEqGrjR4NvQrq09ZV
lvS1isQoEtlLQyspK6oNUlZ1XQOhBgIAIfkEBSoASAAsAAAAABQAFACGAAAAAAEAAAIAAAMA
AQIAAQMBAgQBAwUCBQcEBggFCAoHCQsICQwJDA4LDhEOEBIPERMQEhUSFRcUFxkWGRsYGx0a
Hh8dICEfISMhIyUiJSYkJiglKConKiwpLi8tMTIwMzQyNTY0Nzg2Ojs5P0A+QUJAQ0VCRUhF
R0lGSEtISkxJTE5LTU9NT1FOUlRRVFZTVlhVWFpXWlxZW11aXF5bXV9cXmBdYWNgY2ViZWZk
ZmhmaGpna21qbW9scnRydHZzenx5fH16f4F+goSBhYaEjo+NnqCdsbOxAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/+AAgID
ggQFhoaHioaEAwQCiYUCBYeClISQk5MFmJSCmJaangQdNkZBPiBHAZGcgpMDOxczRT80KTAv
Np0Ej70uIiAxFUQvQjIhASGPnpMdEAYfCSY2OjdDLismKQOYjhoOGxkYHg0AHD45RikxhpAE
AS8aFh8dFDUaHikqKEAyrJAAJGjQYQSFBhJKXAAAwESHWS0APHoxQUOwDw1GMJBAYtsHFiV+
4Dj0qAcEAAIcAFAwAkEAHiciZEiBoVcmCg4kaNhArkOCDSFIiDBw4JElAA8AHEIZgsICCBMi
KB1Q4FWzRFUJoHzlrlIoS4ssEQA19pAjqkYVSbKpiFMls1UTNQ3K6gqTr2aF3BklZHTToG6B
AAAh+QQFKgBMACwAAAAAFAAUAIYAAAAAAQAAAgAAAwABAQABAwACBAECBAIEBgQHCQYICgcJ
CwkLDQoOEA0QEg8SFBEUFhIWGBUYGhcaHBkbHRocHhweIB0gIh8iIyEjJSIkJiMnKCUqLCks
ListLywwMS4yNDA1NzQ4Ojc/QT5DRUJFRkRHSUZJSkhMTktPUE5RUlBTVFJUVlRVV1VWWVZY
WlhaXVpdYF1fYV5gY19iZWJjZmNlZ2VnaWZpa2hqbGprbmttb2xwcm9xc3B2eHV3eXZ5e3h8
fnuBg3+Bg4CFh4SIiYaNjouPkY6Qko+VlpSjpKGur64AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/4ACggWCAoSEhQMDBYiCA46PkYOGhY2RhIqK
iY6Fmy8tMzcxJJSIj4k5RzMuKkJAGztKmJ2LMxknKD4uDiorDkYdAJ2CPBwWIyhLSS8yQSlE
PULDAw0PFhkfEzwuPjpKQ0UuBJAEDAsaFiYbFxgwNj9IOCg0nAYCHA0UGyARAB8jImqwGCGD
xCMHFRwUQGBAg4IAGUBYAEFBwgoOPwQMyGBoAAUECBgEEAAgA44SCUBoWPBIQYIDAwAA8PDA
w4IGEWiEePDBgYFDAggwIikAgkKSEBYIICFsEiZEwgYgWDBSwMhHjDQ1GlQgkyRJXSlpPNX1
lMZOjUyVOou166yhkAjYel07tmOhQAAh+QQFKgBHACwAAAAAFAAUAIYAAAAAAQAAAgAAAgEA
AwABAwEDBQIEBgMFBwQGCQYICwcKDQkMDgsNEAwPEQ4RExAVFxQZGxgcHRseHx0gIh8iJCEj
JSIlJyQmKCUqKykvMS4yMzE0NjM3OTY5Ozg7PDk+QD1BQj9ERkNGSEVJS0hLTUpNTktPUE1Q
Uk9SVFBUVlNXWVZbXVpdX1xfYV5gY19iZGBjZWJkZmJlaGRoa2dvcW1ydHBzdXF3eHV6fHh8
fnt+f3x/gX6Fh4SHiYaPkY2Rk4+SlJCTlJCVl5OXmJWdn5yqqqoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/4ADBQUD
hQQCiIQCA4sEBISOj4iHi5OJiAKRho6WAgWZoIwFh4wEQz4pHRMgRjABjY6bAkUkN0FCOxpE
LSeZsYUCITQ4JC4NDSgGJDM1LwCZA4cFHxsZJBYSLC86I0UYPiuUggcUExkTJhdALcM2LB4/
g40jChsgIyUgGzE9JioyASAAKBXAUQAMAh5k4IEBQQUVIUAEYDAK06SBAAJc8OCgQg4RHzJE
ysQgQIIImRIM0OChAgAHDiCMIpAxFKJnGDZEaJBgwYNKjXxJi2ZgAgcNBp4x8jWg4CJBhRYA
cISAEoFosWbGEvCKaTRQTJ9iOiTuKalohUqBqgjr0VJOaA0RYb1q0a1VR5+uDggEACH5BAUq
AEYALAAAAAAUABQAhgAAAAABAAACAAACAQADAAADAQIFAgQGAwYJBQkLCAsNCg0PDBATEBUY
FRkbGBodGh0gHSMlIiQmJCUoJSgqJyosKSsuKy0vLC8wLTIzMTQ1MjY3NTo7OT4/PUFCQEJE
QUNFQkVGREdJRklKSEtMSU1PS05QTVBST1FTUFNVUlVXVVpcWlxeW2BhX2JjYWNlYmZnZGdp
ZmlqZ2ttamxubG5wbXBxb3FzcXV3dXZ4dnl7eHx+e3+AfYiJh4qMiZOUkZWWk5ucmZ2enJ6f
nKSlpLO0sgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAf/gAQFBAQChQUFAwICioKEhouLBYuCjIOEigOFjJoCiYSD
mYeTiwOiAz5AOzcqPwAEmo+YngsuOCUgN0QMPTaZobACDywkQjEZHCEjJzQ8iQOfAwFFHBMo
FSkwPAAwNz0xnpACGyokIgoVGTIiGEEvIzWVphETKRACHSEQMx0mKkMYKpAakGGBiQo0PITA
YGJEixI5dKz4oMBUAQgQDCAAYGHCCAgWGEQoEUGFBgyWAKhkIG2BAAAIUGQAkCEBBRQkCBUy
lUlAgAELAgiQYKABgAeyBCUaJHSBgw8PLmyAMMGQqXCDsg5AcEBCB2EmKJkCBSmRVUybPnlC
pIgRo0ekGRy1RVQIVjC6sewOEhtOk9aehyIJvipJQCAAIfkEBSoAQwAsAAAAABQAFACGAAAA
AAEAAAIAAAMAAAMBAQAAAQQBAwUCBQcEBwkGCAoHCg0JDQ8MDxENERMQFRYTGBkXGhwZHB4c
HiAdISIgIiQiJygmKy0qLS8sLjAtMDEuMTIvMjQxNDUzNzg2OTo4Ozw6Pj89QEE/QkRBRkhF
SkxKTE5LTlBNUVNRVFZUVlhWWFpYWVtZWlxZW11bXV5cYWJgaWtoa21qbW5rbW9sbnBtb3Fu
dHZzenx5fX98f4F/iIqIi4yKjY6MlJWSnJ2bn6Cdo6Shr7CtAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAB/+AAgMChIOGhYQEg4mLioiEkAOLkIqLkgIEhZmYkJiNBREnISQ6JZuckwIBQCQxQTAQ
CyYTgoKGiic9JhkjFBokMEA3QoWWAT8pMTwoNzUyMi00OS+dgjIWHBg3KR4kODoWED4ztokg
NhgcBSk4Fi8kKhA7LrWqLxwaAQscEQkhJSdWjMhggcQlEAwmXCiBgIMIDyx4wDggIQQEEBkI
EGAwAAAFCiMqACihoIUGGBsojGKwaRCBChIeJAAhokAGCQ0SLOhgoVymn4QCEDCgEQCAGBUq
TXIUoIKDAA0AJBgQ4UM1T7UyDSjQKcClSPUqcepkadPPAUDPXvpqC20nrYIH4FZLdYpQIAAh
+QQFKgBGACwAAAAAFAAUAIYAAAAAAQAAAgAAAwABAwEBBAECBQIFCAUHCgcOEQ0RFBATFRMV
FxQXGRYZGxgcHhwfIR4hIyEjJSIkJiQmKSYpKyktLywxMzA1NjM2NzQ2ODU4Ojc6PDk+Pz0/
QD5AQj9DRUJFR0RISkdKTElMTktPUU5RUlBSU1FTVVJVVlRYWlhaXVlcX1tfYV5iZGBjZWJk
ZmNqbGlrbWpvcW5ydHF1dnN6e3h8fXuAgoCCg4GHiIaNjoyQko+Rko+SlJCSlZGWmJSYm5ef
oJ2jpKG9vrzS09EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/4ACBAMEAoaFgoeEg4UDAoSPhYiSkZCCA4uGiZqS
nZaDQDRCMyUxLYcEqZiXAy00JCIXJjBAG4ebmC44PCwjPyg0PDUWI5eChTIiQUMSD0USFhQV
PTkAho6GFigiKBsMIiccOCFEKzCJqQkAJBEcGA8jMzs6FhscHC+MABwaCA/rKfZFYAEhBQoY
Jg44GuEDQwQBGCZAsBGAw4gQIBJ8WACDUIcPCiYEMODgAoUOFBww+OBBgooOhRx8CNDAQAIF
CgAg4IBARgYBFET8TEWAgYEAmwAYsARAw41jjRwRCIBIk6EDCTCleoSKQAGinK5ttapJqiOp
6AZJHXsWlduykwusgqW06VYirYYCAQAh+QQFKgBJACwAAAAAFAAUAIYAAAAAAQAAAgAAAwAB
AwABAwECBAIDBQIEBgQFBwQICQcLDQoOEA0REhAUFRMWGBUYGhcaHBocHhwfIR4iJCEmKCUo
KicqLCksListMC0xMzAzNTI2ODY6PDo+Pz0/QT5BQkBDRUJGSEVHSUdKTElNT0xPUU9QUk9Q
U1BSVFFVV1VXWVZZW1haXFlbXVpcXltdX1xfYV9hY2BiZGFmaGVpa2htb2xvcW5wcnBxc3By
dHF0dnN2eHV3eHV4eXZ5e3h7fXt/gX6ChIKGiIWHiYaLjYqPkY6TlZKVlpQAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/4ADAgIF
gwSEAgOChQSKA4wCjYmCg5SViZGCi5iDk52ek40AMykTMw0+hoKHg4UCAR9DLSQ1OkZHDYmN
A4cFBBwiHUFCPz0xOz1BRZQFrik0NisUIx0uLDIdHSpInAUAOkQQJxwQABgrESY4KCkAzBcX
HwQgGxAUPDATGykpKEC8AnbMiAAAwgUALToAKCGCRA4ZPQCEGPQAwIIOGTqE4ACgQYYKHRCA
ANFCBysBCgQYAEABw4MFFCx0VICBxotBDgAkEOAuQYAbGjxUQAAgwggLMyIFSOAKQIACBygd
GiABArMClgAwiNQNKgVCkjg9qqTJEFZCik4uOjmVQDNFiBcSNcPE6myru4UsuXKUl5ckV4Sw
YrUUCAAh+QQFKgBHACwAAAAAFAAUAIYAAAAAAQAAAgABAgABAwACBAEDBQIEBgMFBwQHCQYI
CwgLDgoNEA0RExETFRIVFxQXGRYYGhcZGxkbHBodHxwfIR8hIyAjJCIkJiMmKCUoKicqLCks
LisuMC0wMi8zNDI1NzU4Ojc7PDo9Pjw/QD5CQ0BERkNGSEVISkdLTElMTktOUE1RU1BYWldc
XlteYF1fYl5hY2BiZWJkZmNlaGVpa2hqbWlxc290dnJ2eHR5end7fHmDhYGLjYqMjouSlJGU
lpOVl5OfoJ6jpKKpqqm8v7y+wb4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/4ACBAKEgoWDA4MEiwQDiYYDhIuCipSM
iY6NlJGKnJKJiBNDPgA8P0EAApGglQM6JzIXISMoMjJGgpmsFBYlBx4vLTc7OC9CRaqaAgsP
ExgnGCw1Ljo2PERAuYMCEhsuJRwLFiEbJxAeMz0omgQBJhYaFw4AKScRDh8xMC4gOIIaKHak
KOCBQYALKEZMWJEiBo0cNhZBQBCgQIAMCAAEoHAhgAIPI0hssJGAQIYNExpgCNGBQwMSBACI
6IDhwwQViQI8CLCgAoALACAEiOBogIQTEkBI2kaoAYUPLAIYUEUI4FRDkxwBaNCoUaQCU7t2
WlQUEyNLZMXqsuTpUCZGWRGLnpXrSFUmbZOURTpEFu2iQAAh+QQFKgBJACwAAAAAFAAUAIYA
AAAAAQAAAgAAAwABAQABAgABAwECBAECBAIDBQMEBgMFBwQHCQYICgcKDAkLDQoMDwsSFBIV
FxQZGxgbHRodHxwgIh8jJSEoKiYqLCktLiwwMS8zNDI2NzU3OTc5Ojg6PDo9PzxAQj9BQ0BE
RkNGSEVISkdKTEhLTUpMTktOUExPUU5RU09TVVFVV1NXWVVYWldaXFhcXlteYF1maGRoamdr
bWptb2xucG1vcW5zdHF0dnJ2eHV3eXZ9f3uBg3+Fh4OJi4aNj4qPkYyTlZGam5ieoJ2gop++
wL4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAH/4ACBQMCAwMFg4gGgoWFho4CjY+TkQWCloOFgwMBm5WMhoiCAzg5QD01PidFh4QG
lgKLG0Q7NBxBLEQ0IUYAo7GWACMjFQA+Ih1IOUJDRzqajSAXEw8HIzAkLDI/Lg1CL4wFJgAH
Ny0jIToXHzc8NCk7OK0GKR8cGBwyFwQXITYIM0SsmIDBUgAJESoYgCDgoIMIJFa8KHHBBgZD
FZJ0YMhARoAMFSCU2IACQgsNBAwNIAAggAAJhwoY4AQAQIQPGVSogBWMwqNIhQIgCBHDA4xI
DQokYOCgEANCoQY4sNBAAaFNBxgsEHBhkUqVEKIOmBkplCOoMueNVSQJakyZmRnKuoLU6pdM
SaMORXqFKNMmQrGuqjyLiFAgACH5BAUqAFEALAAAAAAUABQAhgABAAABAQACAAACAQEDAQMF
AwQGAwQGBAQHBAYIBQcKBwsOCg0PDA8SDxIUERQWFBYYFhgaGBscGh0fHR8hHyIkIScpJywt
KzAyMDU3NTc5Njk6ODs8Oj0+Oz9APUJDQENEQUVHQ0ZJRUlLSEtNSk1PTFBST1FUUVNVU1VX
VFdZVltdW11gXV9hX2FjYGJkYWRmZGZoZmlraGpsaWttamxua21vbG5wbW9wbm9xb3Byb3J0
cXN0cnR2c3V3dHd5dXh6d3l7d3p9eXx+en6AfYGDgIaIhoiJh4iKiImLiYqMio+RjpOUkpaX
lZaYlsLDwNLU0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/gAIDgwIEhYaG
hQOChYKGiwKNg4mRA5SLBASWkZWbmpiClgM6AD1PIyVAUCuViKIBSyw7IhtCSEZOSkOciQQY
MSgCGiYqMyRMLC8nJZ+RACUUGhccHT82NzAgPjg+IocEBREMCg0bFCEKRU07QCEtOZgBBxAX
AR0YKRgmGUc8ODVJIACIZEGTBw0NGgiokEKFAxESYsAgMqJRoQkUFCSw0GECCwwfTJj4QKMC
pwUmBwAwQEGADAcQEJyIUIHDCgCZELQkMDDIogCFAGyIoMHFQAYPNCltplRAAAAWOC2aygiS
pkM4M3GSmmiq10xaI12VyqgXJEdgv01F9OiQWIuKCt525SrValoBgQAAIfkEBSoAAAAsAAAA
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
B/8VPHeBGqUnfBgUYkqRE+PGRYhy45yAADs=
""")

NASA_ENCRYPTED_KEY = "AV6+xWcERU3AKBthH/usok+VvTNZG/tt2S/KdesVg1alT8A6EhrF+eHsQLTTjukoKMw4F6/494Z+lzgMjsFT5yVXX1q5eXBXI5xPncGlE06Le5PKx9DrSnVhpJyDfv2WnO/tA0RJXCvHwoVHepPAAHMKDo+tetRGCPShxj87msEG2mrpUOnmwK2VtJkZLg=="

CACHE_KEY = "neo_response"

def main():
    # NASA's API requires that the date be in a specific format
    today = humanize.time_format("yyyy-MM-dd", time.now())

    # Check the cace for data before proceeding. The cache is set with a TTL of 1 day (in seconds)
    cached_response = cache.get(CACHE_KEY)
    if cached_response != None:
        print("Returning cached data")
        data = json.decode(cached_response)
    else:
        print("Fetching data")
        data = fetch_and_cache_neos(today)

    neos = data["near_earth_objects"][today]

    # Sort by the closest approach data's astronomicl units measurement. We want the closest number.
    closest_neo = sorted(neos, key = lambda x: x["close_approach_data"][0]["miss_distance"]["astronomical"])[0]

    # Generate the display name
    name = "Asteroid" + closest_neo["name"]

    # Get the estimated max diameter value (for dramatic effect)
    diameter_km = closest_neo["estimated_diameter"]["kilometers"]["estimated_diameter_max"]

    # Figure out if KM or M are going to fit in a 5 character length
    km_string = str(diameter_km)[:3]  # First 3 characters because "KM" is two characters.

    # Only use the metre value if the diameter is smaller than 0.1 KM
    if km_string == "0.0":
        diameter_m = closest_neo["estimated_diameter"]["meters"]["estimated_diameter_max"]
        m_string = str(diameter_m)[:4]
        m_string = strip_trailing_zeros(m_string)
        diameter = m_string + "M"
    else:
        km_string = strip_trailing_zeros(km_string)
        diameter = km_string + "KM"

    # Hazardous colour border
    potentially_hazardous = closest_neo["is_potentially_hazardous_asteroid"]
    if potentially_hazardous:
        border_color = "#F60"
    else:
        border_color = "#0F0"

    # Velocity display
    relative_velocity = closest_neo["close_approach_data"][0]["relative_velocity"]["kilometers_per_second"]
    velocity_string = str(relative_velocity)[:3] + "K/s"

    # Miss distance
    miss_distance = closest_neo["close_approach_data"][0]["miss_distance"]["lunar"]
    miss_distance_string = strip_trailing_zeros(miss_distance[:4]) + "LU"

    # Orbiting Body
    orbiting_body = closest_neo["close_approach_data"][0]["orbiting_body"]

    return render.Root(
        child = render.Row(
            children = [
                render_image_and_scale(border_color, diameter),
                render.Padding(
                    pad = (2, 0, 0, 0),
                    child = render.Column(
                        children = [
                            make_data_scroll(None, name),
                            make_data_scroll("V:", velocity_string),
                            make_data_scroll("D:", miss_distance_string),
                            make_data_scroll("O:", orbiting_body),
                        ],
                    ),
                ),
            ],
        ),
    )

# Fetch data from NASA's API, cache the result.
def fetch_and_cache_neos(today_string):
    base_url = "https://api.nasa.gov/neo/rest/v1/feed"
    today = today_string
    api_key = secret.decrypt(NASA_ENCRYPTED_KEY) or "DEMO_KEY"  # NASA's demo key has a 50 req/hr limit.
    final_url = base_url + "?start_date=" + today + "&end_date=" + today + "&api_key=" + api_key
    response = http.get(final_url)
    if response.status_code != 200:
        fail("Call to NASA API failed", base_url)
    data = response.json()

    # TODO: Determine if this cache call can be converted to the new HTTP cache.
    cache.set(CACHE_KEY, json.encode(data), ttl_seconds = 86400)
    return data

# Creates the data display component with the prefix (fixed) and the data (scrolling)
def make_data_scroll(prefix, data_string):
    font = "5x8"
    if prefix == None:
        width = 42
    else:
        width = 33
    return render.Row(
        children = [
            render.Text(prefix or "", font = font),
            render.Marquee(
                width = width,
                align = "end",
                child = render.Text(data_string, font = font),
            ),
        ],
    )

# Builds out the righthand column with the image of the asteroid, and scale.
def render_image_and_scale(highlight_color, size_string):
    return render.Column(
        expanded = True,
        # main_align = "end",
        children = [
            render.Box(width = 1, height = 1),
            render.Stack(
                children = [
                    render.Box(width = 20, height = 20, color = highlight_color),
                    render.Padding(
                        pad = 1,
                        child = render.Image(ASTEROID, width = 18, height = 18),
                    ),
                ],
            ),
            render.Box(width = 1, height = 2),
            render.Row(
                children = [
                    render.Box(width = 1, height = 2, color = "#fff"),
                    render.Column(
                        children = [
                            render.Box(width = 18, height = 1, color = "#000"),
                            render.Box(width = 18, height = 1, color = "#FFF"),
                        ],
                    ),
                    render.Box(width = 1, height = 2, color = "#fff"),
                ],
            ),
            render.Padding(
                pad = (0, 1, 0, 0),
                child = render.Marquee(
                    width = 20,
                    align = "center",
                    child = render.Text(size_string, font = "CG-pixel-3x5-mono"),
                ),
            ),
        ],
    )

# Convets numerical strings with trailing zero characters ("0") to whole numbers.
# eg. "8.00" becomes "8", "9.01" will remain "9.01".
def strip_trailing_zeros(value):
    # Loop through and remove any and all trailing "0" characters
    for _ in range(len(value)):
        value = value.removesuffix("0")

    # Remove a trailing decimal separator if present
    value = value.removesuffix(".")
    return value
