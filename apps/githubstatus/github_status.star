"""
Applet: GitHub Status
Summary: Monitor GitHub status
Description: Periodically call the GitHub status page and display any outages that occur.
Author: hross
"""

load("cache.star", "cache")
load("encoding/base64.star", "base64")
load("encoding/json.star", "json")
load("http.star", "http")
load("render.star", "render")
load("schema.star", "schema")

# statuspage.io GitHub status page ID component file
GITHUB_INCIDENTS_JSON = "https://kctbh9vrtdwd.statuspage.io/api/v2/components.json"

GITHUB_ICON = base64.decode("""
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
""")

GITHUB_ICON_RED = base64.decode("""
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
""")

GITHUB_ICON_YELLOW = base64.decode("""
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
""")

def main():
    body = cache.get("status_body")

    # make an API request if cache is empty
    if body == None:
        rep = http.get(GITHUB_INCIDENTS_JSON)
        if rep.status_code != 200:
            fail("GitHub Status failed with status %d", rep.status_code)

        # TODO: Determine if this cache call can be converted to the new HTTP cache.
        cache.set("status_body", rep.body(), ttl_seconds = 240)
        body = rep.body()

    statusJson = json.decode(body)

    op_state = "good"
    failing_components = []

    for component in statusJson["components"]:
        if component["status"] != "operational":
            if op_state == "good":
                op_state = component["status"]
            elif component["status"] != "partial_outage":
                op_state = component["status"]  # lowest status

            # add marquee text to outage info
            if (component["name"] and not "githubstatus.com" in component["name"]):
                failing_components.append(
                    render.Marquee(width = 48, child = render.Text(" " + component["name"], color = "#a00" if op_state != "partial_outage" else "#FFFF00")),
                )

    if (op_state == "good"):
        failing_components = [render.Marquee(width = 48, child = render.Text(" No Issues", color = "#0a0"))]

    # a lot of failures
    if (op_state != "good" and len(failing_components) > 4):
        failing_components = [
            render.Text("%d Services" % len(failing_components), color = "#a00" if op_state != "partial_outage" else "#FFFF00"),
            render.Text("    Down", color = "#a00" if op_state != "partial_outage" else "#FFFF00"),
        ]

    imgSrc = GITHUB_ICON
    if op_state == "partial_outage":
        imgSrc = GITHUB_ICON_YELLOW
    elif op_state != "good":
        imgSrc = GITHUB_ICON_RED

    return render.Root(
        child = render.Box(
            # This Box exists to provide vertical centering
            render.Row(
                expanded = True,  # Use as much horizontal space as possible
                main_align = "space_evenly",  # Controls horizontal alignment
                cross_align = "center",  # Controls vertical alignment
                children = [
                    render.Image(src = imgSrc, width = 15),
                    render.Column(
                        children = failing_components,
                    ),
                ],
            ),
        ),
    )

def get_schema():
    return schema.Schema(
        version = "1",
        fields = [],
    )
