"""
Applet: Weather Clock
Summary: Time and weather
Description: Display current time and weather.
Author: J. Keybl
"""

load("encoding/base64.star", "base64")
load("encoding/json.star", "json")
load("http.star", "http")
load("render.star", "render")
load("schema.star", "schema")
load("time.star", "time")

DEBUG = False
TIME_FONT = "6x13"
WEATHER_FONT = "CG-pixel-3x5-mono"
TIME_NIGHT_COLOR = "#333333"
TEMPS_COLOR = "#FFFFFF"
HUMIDITY_COLOR = "#0000FF"
MESSAGE_COLOR = "#E60000"
TIME_FORMAT_SEPARATOR = "3:04 PM"
TIME_FORMAT_NO_SEPARATOR = "3 04 PM"
TTL_SECONDS = 60
DEFAULT_LOCATION = {
    "lat": 38.9072,
    "lng": -77.0369,
    "locality": "Washington, D.C.",
    "timezone": "America/New_York",
}
DEFAULT_API = {
    "appID": "",
}

def main(config):
    dt = 0
    sunrise = 0
    sunset = 0
    dn = True
    icon = ""
    sTemps = ""
    sHumidity = ""
    sMessage = ""

    location = config.get("location")
    loc = json.decode(location) if location else json.decode(str(DEFAULT_LOCATION))
    timezone = loc["timezone"]
    lat = loc["lat"]
    lon = loc["lng"]

    weatherAPI = config.get("weatherAPI")
    if weatherAPI == None:
        api = json.decode(str(DEFAULT_API))
        weatherAPI = api["appID"]

    nightMode = config.bool("night_mode", False)
    if nightMode == False:
        dayModeSec = 0
        nightModeSec = 1439
    else:
        nightModeStr = config.get("nightModeStart")
        if nightModeStr == None:
            nightModeStartHr = 23
            nightModeStartMin = 0
        else:
            nightModeStartHr = int(nightModeStr[0:2])
            if nightModeStartHr >= 24:
                nightModeStartHr = 0
            nightModeStartMin = int(nightModeStr[2:4])
        dayModeStr = config.get("nightModeEnd")
        if nightModeStr == None:
            dayModeEndHr = 7
            dayModeEndMin = 0
        else:
            dayModeEndHr = int(dayModeStr[0:2])
            dayModeEndMin = int(dayModeStr[2:4])
        nightModeSec = nightModeStartHr * 60 + nightModeStartMin
        dayModeSec = dayModeEndHr * 60 + dayModeEndMin

    openWeatherURL = "https://api.openweathermap.org/data/2.5/weather?lat=" + str(lat) + "&lon=" + str(lon) + "&APPID=" + str(weatherAPI) + "&units=imperial"

    now = time.now().in_location(timezone)
    ss = now.hour * 60 + now.minute
    if DEBUG:
        print(now)
        print(now.format(TIME_FORMAT_SEPARATOR))

    if ss >= dayModeSec and ss < nightModeSec:
        # Get new weather data and cache it
        if DEBUG:
            print("Getting DATA")

        weather = None
        if weatherAPI != "":
            weather = http.get(openWeatherURL, ttl_seconds = TTL_SECONDS)  # Using the new HTTP Caching Client

        if weatherAPI == "" or weather.status_code != 200 or "error" in weather.json():
            wID = 801
            sTemps = "68 * 64"
            sHumidity = "48%"
            dn = True
            sMessage = "No weather API Key"
        elif weather.status_code != 200 or "error" in weather.json():
            wID = 0
            sTemps = "--- * ---"
            sHumidity = "---%"
            dn = True
            sMessage = "No weather data"
        else:
            wID = int(weather.json()["weather"][0]["id"])
            if DEBUG:
                print("ID: ", wID)

            dt = int(weather.json()["dt"])
            if DEBUG:
                print("Date: ", dt)

            sunrise = int(weather.json()["sys"]["sunrise"])
            if DEBUG:
                print("Sunrise: ", sunrise)

            sunset = int(weather.json()["sys"]["sunset"])
            if DEBUG:
                print("Sunset: ", sunset)

            temp = int(weather.json()["main"]["temp"])
            if DEBUG:
                print("Temp: ", temp)

            feels_like = int(weather.json()["main"]["feels_like"])
            if DEBUG:
                print("Feels like: ", feels_like)

            humidity = int(weather.json()["main"]["humidity"])
            if DEBUG:
                print("Humidity: ", humidity)

            sTemps = "%d" % temp + " * %d" % feels_like
            sHumidity = "%d" % humidity + "%"
            if DEBUG:
                print(sTemps)
                print(sHumidity)

            if wID != 0:
                if dt >= sunrise and dt < sunset:
                    dn = True
                    if DEBUG:
                        print("Day")
                else:
                    dn = False
                    if DEBUG:
                        print("Night")

        icon_str = get_icon(wID, dn)
        icon = base64.decode(icon_str)

    if ss >= nightModeSec or ss < dayModeSec:
        # NIGHT MODE
        return nightScreen(now)

    else:
        # DAY MODE
        return dayScreen(now, icon, sTemps, sHumidity, sMessage)

def get_schema():
    return schema.Schema(
        version = "1",
        fields = [
            schema.Text(
                id = "weatherAPI",
                name = "Open Weather API Key",
                desc = "Enter API key",
                icon = "certificate",
            ),
            schema.Location(
                id = "location",
                name = "Location",
                icon = "locationDot",
                desc = "Location for which to display time and weather",
            ),
            schema.Toggle(
                id = "night_mode",
                name = "Night Mode",
                desc = "Enable night mode",
                icon = "gear",
                default = False,
            ),
            schema.Generated(
                id = "night_mode_schema",
                source = "night_mode",
                handler = nightModeTimesSchema,
            ),
        ],
    )

def nightModeTimesSchema(night_mode):
    if night_mode:
        return [
            schema.Text(
                id = "nightModeStart",
                name = "Night Mode Start",
                icon = "clock",
                desc = "Use 24-hour format (HHmm), e.g. 2300",
                default = "2300",
            ),
            schema.Text(
                id = "nightModeEnd",
                name = "Night Mode End",
                icon = "clock",
                desc = "Use 24-hour format (HHmm), e.g. 0730",
                default = "0700",
            ),
        ]
    else:
        return []

def dayScreen(now, icon, sTemps, sHumidity, sMessage):
    return render.Root(
        delay = 500,
        max_age = 120,
        child = render.Stack(
            children = [
                render.Padding(
                    pad = (0, 0, 0, 0),
                    child = render.Column(
                        expanded = True,
                        cross_align = "center",
                        children = [
                            render.Box(width = 64, height = 1),
                            render.Animation(
                                children = [
                                    render.Text(
                                        content = now.format(TIME_FORMAT_SEPARATOR),
                                        font = TIME_FONT,
                                    ),
                                    render.Text(
                                        content = now.format(TIME_FORMAT_NO_SEPARATOR),
                                        font = TIME_FONT,
                                    ),
                                ],
                            ),
                        ],
                    ),
                ),
                render.Padding(
                    pad = (1, 15, 0, 0),
                    child = render.Box(
                        width = 16,
                        height = 16,
                        child = render.Image(
                            src = icon,
                        ),
                    ),
                ),
                render.Padding(
                    pad = (20, 16, 0, 0),
                    child = render.Box(
                        width = 44,
                        height = 8,
                        child = render.WrappedText(
                            content = sTemps,
                            color = TEMPS_COLOR,
                            font = WEATHER_FONT,
                            align = "left",
                            width = 44,
                        ),
                    ),
                ),
                render.Padding(
                    pad = (20, 11, 0, 0),
                    child = render.Box(
                        width = 44,
                        height = 8,
                        child = render.Marquee(
                            width = 44,
                            child = render.Text(
                                content = sMessage,
                                color = MESSAGE_COLOR,
                                font = WEATHER_FONT,
                            ),
                        ),
                    ),
                ),
                render.Padding(
                    pad = (20, 22, 0, 0),
                    child = render.Box(
                        width = 44,
                        height = 8,
                        child = render.WrappedText(
                            content = sHumidity,
                            color = HUMIDITY_COLOR,
                            font = WEATHER_FONT,
                            align = "left",
                            width = 44,
                        ),
                    ),
                ),
            ],
        ),
    )

def nightScreen(now):
    return render.Root(
        delay = 500,
        max_age = 120,
        child = render.Padding(
            pad = (0, 8, 0, 0),
            child = render.Column(
                expanded = True,
                cross_align = "center",
                children = [
                    render.Box(width = 64, height = 1),
                    render.Animation(
                        children = [
                            render.Text(
                                content = now.format(TIME_FORMAT_SEPARATOR),
                                font = TIME_FONT,
                                color = TIME_NIGHT_COLOR,
                            ),
                            render.Text(
                                content = now.format(TIME_FORMAT_NO_SEPARATOR),
                                font = TIME_FONT,
                                color = TIME_NIGHT_COLOR,
                            ),
                        ],
                    ),
                ],
            ),
        ),
    )

def get_icon(wID, dn):
    # Get icon data
    icon_str = ""
    if wID >= 200 and wID < 300:  # THUNDERSTORM
        icon_str = get_thunderstorm() if dn else get_night_thunderstorm()
    elif wID >= 300 and wID < 400:  # DRIZZLE
        icon_str = get_drizzle() if dn else get_night_drizzle()
    elif wID >= 500 and wID <= 504:  # RAIN - same as for drizzle
        icon_str = get_drizzle() if dn else get_night_drizzle()
    elif wID == 511:  # FREEZING RAIN
        icon_str = get_freezing_rain() if dn else get_night_freezing_rain()
    elif wID >= 520 and wID < 600:  # RAIN SHOWER
        icon_str = get_rain_shower() if dn else get_night_rain_shower()
    elif wID >= 600 and wID < 610:  # SNOW
        icon_str = get_snow() if dn else get_night_snow()
    elif wID >= 610 and wID < 616:  # SLEET
        icon_str = get_sleet() if dn else get_night_sleet()
    elif wID >= 616 and wID < 700:  # RAIN AND SNOW
        icon_str = get_rain_snow() if dn else get_night_rain_snow()
    elif wID == 701:  # MIST
        icon_str = get_drizzle() if dn else get_night_drizzle()
    elif wID == 711:  # SMOKE
        icon_str = get_smoke() if dn else get_night_smoke()
    elif wID == 721:  # HAZE
        icon_str = get_haze() if dn else get_unknown()
    elif wID == 731 or (wID >= 751 and wID <= 762):  # DUST
        icon_str = get_dust() if dn else get_night_dust()
    elif wID == 741:  # FOG
        icon_str = get_fog() if dn else get_night_fog()
    elif wID == 771:  # GUST
        icon_str = get_gust() if dn else get_night_gust()
    elif wID == 781:  # TORNADO
        icon_str = get_tornado() if dn else get_night_tornado()
    elif wID == 800:  # CLEAR SKY
        icon_str = get_clear_sky() if dn else get_night_clear_sky()
    elif wID == 801:  # FEW CLOUDS
        icon_str = get_few_clouds() if dn else get_night_few_clouds()
    elif wID == 802:  # SCATTERED CLOUDS
        icon_str = get_scattered_clouds() if dn else get_night_scattered_clouds()
    elif wID == 803:  # BROKEN CLOUDS
        icon_str = get_broken_clouds() if dn else get_night_broken_clouds()
    elif wID == 804:  # BROKEN CLOUDS
        icon_str = get_overcast_clouds() if dn else get_night_overcast_clouds()
    else:
        icon_str = get_unknown()  # NO INFORMATION TO CHOOSE ICON

    return (icon_str)

def get_unknown():
    # no graphic available

    return (
        "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjavZZpkqs6DEb/axV3CdbgaTnGxlV3B2/59zMJGToQMnQ93LRciiwJHRlD839/O/3BJc4nMh9TyCE4XJYtS8Ekues1n2V2ro+54eazji9WTHc/rDPG2NILpELqSXmJp8OR3iwIF8lbevY/9HoJI3cZpdWRYNzo4+yiu73S9e69pY5npmFtxQLqE84PtT7KMoPhhMLosixgRNwe87iMjJFccZXYXHPVTRiVMwur62zcuHDneZGVK1I0mSVCilTRRZc0SpaqTlmN1NS4S9SsTZOKVplVoZVLLrzEzUu4ygmBG8NSGM4YK5ZB6+Tbsemo9zpKxHj6tVbIS2Rg4FFFHf9hBSDc1z7yS4HX8fMCWDgxWI0yJzxgcdPJxeT52ltKC2iFoYe00+LYzg5QIsT2SIYVBFxg9RzYRZHIjDom8CnIXJRMJiBg76UhSzHVADhJRmysibzYipeTGlsIILwGjUCTtYCVmbdAFi2hh4pXb9774KNPPvsSNFjwIYQYxl4sUaNFH0OMMcUcS9JkyaeQYkopp0JZsmKv+hxyzCnnXAqCFnguWF1SgWKSSSeb/BSmOKUpT6WifapVX0ONNdVcCzVp2qz5FlpsqeVWZp7RSrPNfg5znNOc59LRal27dd9Djz313MuF2kKV7pg9kntOjc/UAIwWZgajlRrUMa4ueLxO/GAGYmIM4nEQQEPLYOYSm8kgR4OZy4Jd4QVZ+gGn8SAGgjaz+M4XdldyD9wI+/5TbnJLjga63yBHA90GuUduG9TaeL/XsQ8dXmxjG46iOsX2g1GRhD/ndiT812U6zcF6q7aoy3B0mrwse6nzMu2oYschc4pAu6FvUmh3KdiDwaRFaLHIqVdNL+eU9TTtOWuPvHgkuORwzbpsZH2cHDzQay6OJR3Heh5qpUg/MR7R2UvqC2onWissAq1NCg+WB4Z0Z/luc95I2u+Mh557ErFnevGpDnOiT7p4KxJ97eHz3b8dgd4vx7Yn+qSwW57pV5AtGX1Q2P2G/BTVjSf6pTb6Hxry3Sagtwu725BfQb9K+gLZ3QJ654347CSgN0+d3Q+Acx/59fQ5OkN2jwJ6+Zh9+Tja+165ZIsSyj5WOlU/3NX0k7OS3vmYepYcffV+ffyIOOZ91Pbr7u/4tMz0D3V6CRVyG962AAAACXBIWXMAAA9tAAAPbQFzSCgeAAABCElEQVQ4y43TIU4DURDG8d9bStKW9ApgqpcDkAYPBtWaBoXiBl2Bq8ZxAUAiwSA5AShEDYoDIGgCZDAbWEq73c/Ny8z/zUy+SRYU7OIAn5iXzx1s4DbxZJkipW5QBEMrFIyCIlLqLis+j5R61ihS6gXTP5Dy59NgoIFKSAFZkGOWuMBOE0iKeMMsyAWThTnHwX6jTphk5bZ/6VxhOzhqwPjI8P6vRS6xFRyvAcyzlXNyjddgXEfI0K6B3OOlBtLJsFm7cR5qIC1BXue+ysYHwUklHgZ5Vnq7v86FZSfPwVmZ2/+5i9LK00ZWZi+4WXUPRTCqKR4uHlNakpTjEF8Vj7TRwl3isZr/DYwHXTEe0IysAAAAAElFTkSuQmCC"
    )

def get_clear_sky():
    # Clear sky graphic

    return (
        "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAAB7klEQVQ4EZ2TPW8TQRCGn/XtfTiHY5PEQYCIQDIFNCAkJCQkJFoKCvg9/BpqSqT0iNqk40sUKSzFyI4hlmP7fLvM+HzhHFwx0t7tzbzzzjuze4aX7z0ewgBu70Z8O82IMse96wlHvRlMHel2wLnzuBwwsipWwwYYWdnM4Jzhxf0m82spu/tbaOxhJ6XVinG1Aqe+6rL6kViDvWKYGsODOymvnu0zHM25kQaMJjmfPk+ItUjN4L3IrZglsqK/RqcdcnMv5tHdBq+ftukLwVvp681hn1YsyYFhJm1cNmviEG2t23e0W4ZmM5Y2PZGQjhfw+FbK+GxBd5ARSL5iq7YkmAvzznaNxlbAYfc3vdGCLPf8GOR8OMk5EDK00L8CsE4CRuTtNQK+DD3vTuY8H8NRP+OJtEUScjxxREnA3K1qV07CUg9lBIavM6GfwkHTcnZuGMr6OPB0dmK+hzmZhI0MeXnmSx5l8dgoiVBiK4CmnNxPefeE6Op2zKkEfmWQ1gMZIEgdvTJrZhORWJhMWRnlQz06rJaMM1+lCPdFsrm4TYJPRMFfU/6ywepeEWXtMl5kLRWsuy4nFsBNT52Hrccq+v/NJksC1bBZYuFf11iUK5TaOFQFJaAkKRVV/eW+jK0IQv2PN1gJL2AFYH2vCM8ftOabw7we784AAAAASUVORK5CYII="
    )

def get_night_clear_sky():
    # Night clear sky graphic

    return (
        "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAABmElEQVQ4EY1SWY7CMAx1ulOgm0aMxCW4EWdAAnEEzsgXB4APEDDTUlo8sRkbKPMxkRIvsZ+fnRgAQLt1FUUBcRzD7XaD8/kMx+MRHMdhW4M6CgHwHg6HqosvCAL2OY6LURSjBXuJcQTMBsLpdILxeAyLxQKm0ylf5XnOklgEQahMjDGSCkhVpNJsNsP1eo2bzQaXyyVXm0wmLG0S2vbQdV1lwQya5gp1XTPibreD/X4PNAvatMIwZBlFkdUjaNuWbWGBnhdgmmSKOp/PcbVaqd2dDdlPLAB7vT72+wknEEULr9vOQHWKG40+McsypHYoziMuZflFghe1QtRpeDTU7XYLvh/A9Vrb5zSAiHA4HDhWW7CWViF9MEjQJrFPnk0qdmP1GQWNocGA2FSRlsj7/eOkx7xH/Pq6iY/Qv7UnBqTee6RqSZLoM9InkkUFpIj4XvoPwx6macE+1/Ve7mzCm63QRf7BgPSpLpeK9bZtpAhLYxzLLGV2cqEAZVVan7G/rIGq+mZdgoRy4Ifgeb7+RLp/G6Ik/Vf+AEFfzlQzPTDhAAAAAElFTkSuQmCC"
    )

def get_thunderstorm():
    # Thunderstorm day

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAACaUlEQVQ4ES1Tu44UMRAs2+2Z2cc9AsQJCFjIeOhIkBASAcmm/AKfSUhMSEJAQIZ0Eoi93b3dnRm/qPacR57x2N3V3dVl8+7T51JKRkwJKUaUnJAL+NVXggVgjEFKBWrHA90BrKn7cjoe6kGmQ6GPqQb3axT0IWKMGfPW06cQvMAQlRCKDFEn2ing/a7GnIaCXXRLeC84nY4EShDv6qGxtOO0MQSEOmNN3XJTDx3nj9sRb16u8PH9a9wlA+sEznskphAZVIuRKALhhjjWxKeIR9dY7A8B148aPLlq8W97h31yuJxbpGJx1njM5gsCFMh6vWbtrIslpDCCvhiOJ+y2O7x6vkQgsb9uNvjw4imJjJU4Lw5t1zFjcvBstWIiCYaHCAM6KTjsblGuPBpv8P3nBo8fnCNnxlO+GDWxY/oj1kEWwjqUt5Aq24ms5zzCu4zfNyechsR1QWQnLJkuBFIwba22XJatq73OxcHPHAYm0vcWmaTRF23jamTr+NUsag5TwxTEalqqmcOYse8pJlI78PtnM+BsLjVddap9V2f94VBnHcLW1tTveqbONCkV/N2OCH3A5XnD8tSw9qc6qKPT6dgRZik9EXpGH8l2JjmBXIRaI0thPdohHfrWdVWitpsbiXZ2iIGkTIaqf11bRmBjIcJJfdCuIih51ZPnibaJSrWV9XqJJvTItQJ4CiyEQhlTugynF2nSC5XK88wO6JBvX7+wFq19AghjYGRqnDUOLKFphDc1Vxu9nZpZJligZvqhh3n49qKEJFRgi4YKM67FYrZAGg26boZuRsXxKoeRxgRlcIw5VOfjsMd/BXaITMZM2DgAAAAASUVORK5CYII=")

def get_night_thunderstorm():
    # Thunderstorm night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAAC10lEQVQ4ESWTWW8cVRCFv+57pzf3LHa8IMdOjEB+iEj+AO/8aCReEa+IF0OCFcCJPZ7F057eV86MW7p9e7l16tQ5Vc67738aAv+AwI/wPB/XdYBBu4ujpUetnr5v6dqGrmto25a+6/S5x/peuA8Owgg/iHCNUYCihLMH2cXrfXe471rapqLTaptGR9wXgDAccxBPCaMIxxno98EC0uU4LyyGXhmVdQdSVwVNme+IYcMgZnZ4yuHJOd7smDQvaNOEIBopvFMOZ0dGQLoLwNHq6oZtsqGua+zIhkymJ7z94R3X7y+wbsfHvxekzwV1IbpVta/XOAbXsXo2jIQ13iwoihzbqdyi7DAS8O2bCcczi3NwoOCaIq1YzhPtJd7I4/JixvlpKDHh9uaRzzf/YVtRaqRsk+XcP2SYUURWdYyswY/FThlcb8TRNOLsYsrVa18a9NzdpTStXCjKmiBwKbOC+bLg6tsJpRitld3dqbRzwOh/0/FlnrFYZsS+ZZuVlLLTOu6Ar6Lm92uCs1ey6ISTqeGP+5rQfQGo644qbUiTmrTouL4cS9CWdJtiPQXn2ZYmh6//HnH/+JrQc0kSMfB7Ca8SqxpHTIrecHIcy5mBxcOG7WqBfc4SDrMZpTrNW61pmpbBNQLI8aJ2b2FTVuoBMUgHiRgrec9muaTIN9iySlg9LdQRMWb+IHE2XF4d0hVbUnWbMQ6trKwlci6Ap1VE+Wz4cnvHc7LCbaxPL5FGgdGBJz7dfMIxFn/m8bRZqbxErEpGYYsfSi96ll8/cnye8+oswH532nA7v2fWJ4Rhye8//0qb/cnt4zN//fYL8WQmLSKmU+TCFrf6kTxfkaR3bBLNw4frN0OyXhNFMXF4wZH9hvqfBPd4wI4jdd6uE2uauqIiV4d+xlG5RZXRH/g4p5OjIQgCptEZvh3L0mDfRL1UNxokK0GNJtRoFnYz0Wuo9iMt0VsJ+z9oBJ/faPlfPQAAAABJRU5ErkJggg==")

def get_drizzle():
    # Drizzle day

    return ("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")

def get_night_drizzle():
    # Drizzle night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAEDmlDQ1BrQ0dDb2xvclNwYWNlR2VuZXJpY1JHQgAAOI2NVV1oHFUUPpu5syskzoPUpqaSDv41lLRsUtGE2uj+ZbNt3CyTbLRBkMns3Z1pJjPj/KRpKT4UQRDBqOCT4P9bwSchaqvtiy2itFCiBIMo+ND6R6HSFwnruTOzu5O4a73L3PnmnO9+595z7t4LkLgsW5beJQIsGq4t5dPis8fmxMQ6dMF90A190C0rjpUqlSYBG+PCv9rt7yDG3tf2t/f/Z+uuUEcBiN2F2Kw4yiLiZQD+FcWyXYAEQfvICddi+AnEO2ycIOISw7UAVxieD/Cyz5mRMohfRSwoqoz+xNuIB+cj9loEB3Pw2448NaitKSLLRck2q5pOI9O9g/t/tkXda8Tbg0+PszB9FN8DuPaXKnKW4YcQn1Xk3HSIry5ps8UQ/2W5aQnxIwBdu7yFcgrxPsRjVXu8HOh0qao30cArp9SZZxDfg3h1wTzKxu5E/LUxX5wKdX5SnAzmDx4A4OIqLbB69yMesE1pKojLjVdoNsfyiPi45hZmAn3uLWdpOtfQOaVmikEs7ovj8hFWpz7EV6mel0L9Xy23FMYlPYZenAx0yDB1/PX6dledmQjikjkXCxqMJS9WtfFCyH9XtSekEF+2dH+P4tzITduTygGfv58a5VCTH5PtXD7EFZiNyUDBhHnsFTBgE0SQIA9pfFtgo6cKGuhooeilaKH41eDs38Ip+f4At1Rq/sjr6NEwQqb/I/DQqsLvaFUjvAx+eWirddAJZnAj1DFJL0mSg/gcIpPkMBkhoyCSJ8lTZIxk0TpKDjXHliJzZPO50dR5ASNSnzeLvIvod0HG/mdkmOC0z8VKnzcQ2M/Yz2vKldduXjp9bleLu0ZWn7vWc+l0JGcaai10yNrUnXLP/8Jf59ewX+c3Wgz+B34Df+vbVrc16zTMVgp9um9bxEfzPU5kPqUtVWxhs6OiWTVW+gIfywB9uXi7CGcGW/zk98k/kmvJ95IfJn/j3uQ+4c5zn3Kfcd+AyF3gLnJfcl9xH3OfR2rUee80a+6vo7EK5mmXUdyfQlrYLTwoZIU9wsPCZEtP6BWGhAlhL3p2N6sTjRdduwbHsG9kq32sgBepc+xurLPW4T9URpYGJ3ym4+8zA05u44QjST8ZIoVtu3qE7fWmdn5LPdqvgcZz8Ww8BWJ8X3w0PhQ/wnCDGd+LvlHs8dRy6bLLDuKMaZ20tZrqisPJ5ONiCq8yKhYM5cCgKOu66Lsc0aYOtZdo5QCwezI4wm9J/v0X23mlZXOfBjj8Jzv3WrY5D+CsA9D7aMs2gGfjve8ArD6mePZSeCfEYt8CONWDw8FXTxrPqx/r9Vt4biXeANh8vV7/+/16ffMD1N8AuKD/A/8leAvFY9bLAAAAOGVYSWZNTQAqAAAACAABh2kABAAAAAEAAAAaAAAAAAACoAIABAAAAAEAAAAQoAMABAAAAAEAAAAQAAAAABedU8gAAAHzSURBVDgRXVJdb6pAED3CAouWWkL7YGJ8bHL70P//S3xuUmPU2kYtrYAL3DlD19zbSRZ2Zuec+Rzled5DpO97dF2HKIoQxzFNSJIEWZahrmscDge18d37BkEAQ2U0GukjDRTawjBUotvbDE1j1c5P0zR6iGFAc32RC408nuByueB4PGE2m2E+n8M5h9VqhfV6DWOM+imBB/HPLBid4vU8n6oeRaG+WWsV3LYtjHemB1l5KMyC9/E4FVCAh4cCZfklulV72zopQQLSkbWQiIdRKbxrk4RkOs2w2byhKHKkqVV/7xf4ND2BB/lM6rqRmrewNsbLy6tM46TEEleDXUsg0NfPUXmdI9xsttjvP8CmlmWpGTJzLVM1+RDA+f+bCW10qqpa7A6sm5NgyRRmr3tAJ3a2KIpr7QSzy84x6pcCB90pKTFKQEemnKYp8vwOi8VCAJ/S6UiaN8VyucTp9CnxeiUhkMIsiNUexPFAQKLz+VsdmWpVnYXcSGmR1O8U+PsTGDOs7M3NWHbfCGBYIjpOJqlkEsrsJ1LasOa0/5eFtEIXI0liLeH5+Yk+Kn+eHnXuNo01XT97T8ASZJE6acYAoCGxyQ8ciGSJvDP//u7r1x50HZvTaqff3z+w2+5wf3+nTd3t9rI4R1TnSneAU+Ahkc/mLxcIChmifAzBAAAAAElFTkSuQmCC")

def get_freezing_rain():
    # Freezing rain

    return ("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")

def get_night_freezing_rain():
    # Freezing rain at night

    return ("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")

def get_few_clouds():
    # Few clouds

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAACz0lEQVQ4EU2TzW8bVRTFf2/mzYztaWKn8Qf9SEmgLWokQqBCKqJCKqtSIRb0f2HHhv+i6667qYQUiRV036YLJNJGRApRVYfESRM7tmfGbzhvyiLPPvP57rn3nnPH8MOvJSVEISwvxrw+yolzx61LNV6+mcLEkc6HjF2JmwFGOLcCbIgR8qnBOcOD1SZZL2Wx28C/W7+e0moluOD9Pv/sPKy/qVmDvWCYGMNnKyk/ftNlcJxxOQ05Ppux+dcZiU8SGMpS5Z5bltiq/oDrnYgr7YQvbszx8OsO+yJ4rL5+3tinlYRkoWE6+z9YbQQi8XfWJBG+tRf7jk7L0GwmarMkFumwgC+XUk5PCjYHOVdrhliRh3r+zpOJqCLIJNDF+YC5RsjGixPeHBfk2vD34Yxn/RkrIhMje2MHmZAGrLdCtSMCpwqMymvPhWwNSp70M+4N4eV+zh21RS1iZ+Toppabi0Gly/bpjOe7GcgtSz2SBIZXU9FN4FrTMhwbBsIfhyV3evXK2mXp8HCtSRhFjLdH3PvI8fm1Bib+ZatUUZUiTTl0Jh65z0XhwPeZC2faUbf8tJZyW0GjzLDcjiidKkhUoicw+k0lnld3QTgSrqqyVVl5uxdxd7nBJ92ENA5lXEihoNG4wM7VYhKpqTwVgcalIoyVPZPk391Kuf9xqpeOt/0JxczQuhBzMp2RKrnpPOqX/3oXRNJR+gMx9XSua6hykbYjwwc2oKvzktR/LUt/P3WV9R8qgV1qWFbDgAOV9Kf6Xddcbfq+/XD4JbGZ6D4q+VRCH7uAfzS5C0rwSont992QB5cL5uXYsDDsDAM2+iErdSgUtytnDvR8T+WMZfyCKu0p2PesP/a3UUR/VwGJ0wbDO03Zt+28IlQiVnLL1iigf6IplD4amYrYhwde+q+eTsojfYVvRafvj25QorlhoOt5IVZAKjQEn9EvXer6/fE/eiwQ6Fu+SCEAAAAASUVORK5CYII=")

def get_night_few_clouds():
    # Few clouds at night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAACCElEQVQ4EXVTyY7aQBB9XsYLi80ipEAYwoE7R/6Gb0AC8Ql8IyeGA4mEnBEYbMYGQ6eqCD2ZSdJSL66uevWqXtsAoGjq0Wg0UCqVcLvdkCQJDocDTNOUb+306cAAMqvVqj4/bI7jiM00LeV5JUVgH3zMBxg54ng8otPpYDabYTwey1W9XpedWTiOq5kYhvEIheIsj0yTyUQtl0u1Wq3UfD6XbMPhUGf1ff8DC2FQFBecz2dBjKIIu90O3AuePFzXlb1Wq4HK1CwsyxK7sm1HhUFNZ5lOp2qxWOjvMAz0mSJUuVyWyf3gQpTvl6nTFtL0IAqcTidB5oV7wIw8z8Pzcw+c9fU1QhT9FB+b17e3VD544VKazQbCsEYypojjvdydzzna7S9yPp1SjEYjKUcAxPp7KYoCeXbB9+QH8jzTV09PDrIsQxAE6Ha7srPvXwAcYdk2kvRITlX0et+IUVMHsJzcVH5oPASA34BNQUyfHZLkIJesOwdXKhVcr1e550DuA2fnOGmieH9aWq2WgMVxLABhGEpD+Wlvt1thwE9eAPr9PkgabDYb0r6Jl5c1wd0p/onLr08pVvR92IPBADzphVG9PVwuBW5Et/O1TepkpEIsMu73ewkOgpCYGWJnMHu9Xstfx3WyIc9Zrjbp7lOzPGmYYZhgANf1cVcj1Uz+24N3kvfTv+jzzS+87//oqt2m+AAAAABJRU5ErkJggg==")

def get_scattered_clouds():
    # Scattered clouds

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAADFElEQVQ4ESWTXW8bRRSGn9kd7ybOemPTJCYNoklDUlSVFggFWlVccQEI8SWhSvwEfkQvuOOy/4ELrishBBUI1N7wIaoilFKHqChN01ix6/h77V3v8LqsfKzZ2TlnzjzvO4YPvnE4KPiweiJgp5UymznOLYf89teAa5+e5PxGmb2DLi+fjjmz/gzhbMBwmDIzY/GM9ZlGmhiyieG9s/MkS0XKCoqWJ8kEPI8LGxVGGu7ud2k0evS6Q7qdIdYp2fcNmxWPmYIWrs3xyVtLNI/HVIs+B0nOrT+bvLkZs32YcON+l3dWfF5dj59uaF+ICpRCjzsY1qshF1+M+fjyIketMV8FR3z5/RH1+oDrN1uwHDB97j4ec2Uv4/bxBPtPz4MHGR9eKbG1EYPvkSQpE+dojhxLi7OsxgGtdqYdnU5lGORwu6nzhD72s/MRr68V2VqPKAYe9VHO3X9TRlnOoycTnnOG3cyjZixMlNkX8chweSUg1aup1RpuRcBarSHtbkK5XKTbS8HqWI8Svvipyb1mJpkMb4jJauyz05nwx94Ixg7z9/a+a7WHDBK1qF2zLKMniRYqEVF5nu9qPb6+N2Jdye+fixnmBX7c7bMR5bzyfBH78KBNZ5AIoZOm0O6PpYpPFBqWI3hNfri2nbItVhcT2KxaPrpQZnWhgMtzzO+/1FwqONOkZJThBM+oUHcScqdRkIxQKVkuabczSyFR4BNIejVLf5hh0/FYldR+6giUqVqEgaWXT/i1a9laKXH1bIQT3EP5YJIbylFAR66amylgr++UqAY5i4qiQA2Eds46chvKoQG3DlN2mm1OSL5Tc1Kjk/GzXCgROSXV7A9+zKIIbKtVOo75gqM91ni6QhbBqKVkelkcL8kXx7nHQxWrqNta7rCfP2t492RGqaAzZYYHgvVt3WNtVjWUt6fCDc3vS9mh+FTEpzqFpG/6YW/2C9T3pG+Ya4FBHfL2QkqsgroirKWW+30ZrGMI1Ol0TpdVj1TTu7l0Y+RaIvpYk7p/VD0ngCDnI2MLLMwpioqneZrTUOP///8DqrJftxRk5qAAAAAASUVORK5CYII=")

def get_night_scattered_clouds():
    # Scattered clouds at night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAACKUlEQVQ4EYVTOcsiQRCt1tGZ8T4Q8ZvBFTRRwXRDMzP/hrGYmO5fNDMQERFEd3RUvK/eerWM7G6yDWVPd1VXvfeqVESk2T4rl8tRPB6nx+NB5/OZqtUqpVIpul6vFI1GybIsCoVC9H6/ZTc+L/kjmUzSdrsVC+5PpxOZpkmRSEQevV4vUkrJN2LCfPiBD1Q9Ho/kui71ej2q1Wo0Go2kCqojge/vGMmFkAQILpcLIUDHYjHQEOv3+3o8HuvpdKqHw6HctVqtjx/xiC2VSprpaAOZwLVSqQg/z/Nos9lQo9GgTCYDcGTbtuw4g85qtaLlcil3qtlsaogERyKRoMViQd1ul7LZLA0GAyoUCnS73ehwOMgD/ECrcDhM0Ed1Oh1QEP7P51OSAMF8Pqd8Pi/oJpMJozNZnzIZhkGe95PNk4QG2hUccIPHaBMoYMEHdJqZu67DAkK8E7f3uyAJIQFURXXsgQE2FtTHN1qH3TSj5DiuUITfABc4g96iOux+vwsaDE+73ZZhQhH4gAjiS4JgooIkuEQQEvu+T+l0WqACGZIiHj4kQ3JVLBZ18ABighLa9ntwfFqv15wgxQgSDDsn3UAbkQjxWJqnT9frdW3bli6Xv32GBr4/jVH+dYbPwMjCUBXDBARYjlNita+03++Fym63405oRpJmikrucTZms5nMAIYIF1D666vEfY+xWJYIplSIkMA0QS3K/4eTxKKQYgOs/y6IjAL/rl9/CzWIpboyhgAAAABJRU5ErkJggg==")

def get_broken_clouds():
    # Broken clouds

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAADDUlEQVQ4ER2TvW8cRRjGf7s7O3u3e2evHZ/PPhN0Ng6gIARCSEQUKZBoaGioKCn4R2ho+SsoI0RJA6IAkTRUOBJOCPLZPjv3sXe3n7Ozy0u22dF8PO/z/p4ZZ3qzaX3Xo2kagkBhjMXahta2OK5DC0xvU25mBdppGb++RTcKyDNDN1SodVIyuVzRjzSe56B9j6CjeH6VMhqERNrlz7Nbjg762Nbl2cWa0V5NI0XyzEE9+ukvKlNzcriFrS1aa+69OeRsmXM+zdgTgbNJwSxtOZ8ZHk9yPojhw9M+URigdnsNHe2zSVNElBAHtzF8/tEdvv/1hq9/uIFKFhZL2PchbfjtuuXbUZ/3Rx0R2BkQiEAcWzILNvCIB7JRui+FTW/Y5aCo+eaLEYe7AdfLkvvHMYM4IEky1OMLy7vjDifSr+fBsnFYlh7Joub51PDAdbkz6HB80OWNo5BT28MVmGmasVzlqC8f7gusLqtVKW2UvL0j49SIW59P34r57nZGLFFcznP6Hcsmq7mabUjSglDcqsA1/P3PilQWaoH47+VL1rlhsNvjZHebT467PJsLdUkoL2uJ2DKUIqO9kFqguS8mSybTFfPVhnWWcZukVLVAk419Kj6+G/DHxuGrJw2/XPpYB+qqIFlnGPk7T35/2hameZV/WVrpz6ERy9PU5eepYmIVx7Hm4Tjk/mFAJYXqPKVt5R6II7UWwoFyRbGilFv4/0XS2sOK5Xd24LMdy2DboiiYX1VsjKbfG4r9iiCSeflwhKqco+OrV9fYdxrudiv2dcu80vx4VlM2EnUYclumMk54T2IXVKjzF1NWWSmEfck2YpGKsnJwdId1q9nSNeKetbyLOCpxVoaFnEwKj9rxUTdJThh22Y4lX62IvEDgGFpZdEWkchvG3RrtGQpTMOy2RLFHWZX4UkgtBvdY+hpxyJbX0kildWMZR4bT0DKbr3l6nmAksqY2DLc0VS+Ut1ETd1zUg6MAxxouVvKMBb+vPF6LRFnmrhcyv/HYOB1Jp+JlNOBM7XCV+3gCbdwU/AdXZocuuXrJ1QAAAABJRU5ErkJggg==")

def get_night_broken_clouds():
    # Broken clouds at night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAAB70lEQVQ4EU2TOY4qQRBEo6HYNwMHCZBw2CyQ8MBFGJgchEtwES7DATgCDgYIAaPPvvTnpabQpNRUdVdmRGRkEYxGozAajSoMQ0UiEb3fbxGxWEyv10vP59PW+/1u5/F4/JtHXYTC0+mk2+2my+ViANfrVYvFQufz2ZJPp3/fIkAJiAB3u93O2BOJhK0Udbtd1Wo1zedzDQYDHY8/cu5sRKlUSslk0hRC7kzGR7pH3m63ajQamkwmqlarms1m6nQ6Wi6XIpe8IAjUbreVTqfl6JsAlX29Xlez2VSxWFQ+n/+e8b1QKBgAPuARCoJerxdms1lD5YC+xuOx2E+nU5VKJTtDDYwogIj18XgoGA6HIQf0zke8WK1WopVyuWx9r9drtVot0T8EFHogh5v7/d6kIokJIL9Sqdi3zWZj0pkQHhDI5yEc8wWNYgJAfxdQgzeogRWltMbICcy0KbD5e4l4Jwl2Cvr9vqlAPt+9gXYPYKeAF3P1F4xCXMdgz+qVAoBKVueLAOHxrbCn8Hg8mkfOORsrtxY/crmcgTgkgUYLHpn+vNsUkoxXTMrnA2It2M8nCTZYAUMqYJzxYKa/6hjJNLxydzgc7IUZExQDRmImkzH3Yf0WfMjIYSrmAcgE8/f/C1iRyzuJBOqQTR4rgLT2H5ppakVHYqx9AAAAAElFTkSuQmCC")

def get_overcast_clouds():
    # Overcast clouds

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAACOklEQVQ4ETVT25baMAyUbSXOBcru/39HH/vYf2mXllLCQhLfOiNOwzGxfJFmRhP37ev3lkqW4IP44KXvOhmnUTq8aylSWxU+tVQJquK8l7Tvr7lzoh4LLTXJLUsfetlTFrdu0lqTggTeO8m5SMI4vUWJsbc1ESeOCVi94VdQQVKyRYtrxRzH8MeqcYgyz6MEoEx7ArKGRF70fl9EAZcHS+EG8uQk27bZRVI6nY6WoABFzlkqkvsQLJkSWsUtB6g7MhdshqB2YRqHF2QcJg07h0LUSoi6FtHjPMkKUTYMvkdcOh4OcphnGQBbIVzXqVWtuOAhNmM+GbT1DfCutwVdcID6RXrtpI+dHUjQZEfSWKPFz+cGugH01JJTG308HlLAq6FdEXwD4N7vn4YG8hmFdVuNAilSPJ6Zpsk6pR+/L4DHfjdZPh/Gb0dlcmYXYhwsOWOFNg6XKfjfZZEG7fSKCcwgtAv7ntHWBC9sSMK4A6V5mg1JbciINe5zjy3Vj/MviX0P3r1V0wAaXrHZAdHdjOVB4YlB8/Q9nDqMRndHu/XH+Yx1ZIKyMUazMm3ssUY0ZuXdyYC9AUWmcbK5ajAUygMJIj5QIUIk+AiUYBIewDp9MY2jDEDJAtshmZVZgJ3Tn0CQ6SwEtUBh9RAp0MOvZBDtBreS5gRBL9c/RpEe4feil9vV1CQ/9pUPxfkfm5Eg5JZgNgzG9Mq6Pc3O+m79xOf6umKVXxGS0LZIyrY1tHEvqyTMV8D3eHP9HyA1RdeptwS1AAAAAElFTkSuQmCC")

def get_night_overcast_clouds():
    # Overcast clouds at night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAABXklEQVQ4EU3SCQ7CQAwDwC0sFIR4H///AvddNJGMGmnZI45jpwyHw2F6v99tsVi05XLZeu9ts9nU/vl82jRNTXy/38rDvV6vOg/D0LofIABJZI/Ho94QeLN73+/3bb1eNzWiCCSFPQn3dPZmjePYttttEVIgkPfb7faXg0Sh/fl8VuFqtWq73a4IvFtzOz1FGJPETKquCMwmOWrkBaJuYCTxaI9U784ZLHDmZNCIkHbyLpdLsTor0FUgZEWhMFx5CzmSnoEAkE0e4HwGMLpRaUYwBurcr9drdXA5Ho/FCqhAhxS56+zNirJSgDHTT6eQ8Etu1FEqx1ZZ4B8IgHcLGcBc3f1+V1t5AxaI+vl8LqYMD1mmHLn2fNb516G2K3TgSdhZ8j73H0vUGTKM6KfT6e+HZN2SBHBWkFmwjNxc2Oy8YRWKxZwA2AKGi0V3uPojKZIMQc7uWTCK/CfYyfsPNHtDnAqUn6wAAAAASUVORK5CYII=")

def get_rain_shower():
    # Rain showers

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAACEElEQVQ4ETWTTZLTQAyF1T+xJ0yq2LEe7kAVJ8iWK3BMlqy5CgsoyEyw3X98T4471Y5b/fQkPcnh85evY4xutTVrtdrozfow/v2hF/M1ggm3n4NZDBZCsPzv/uYXHYeBT3CH/d0NhvFYAugYh0EBGALZZIQQg6xRD2y6UMDuZig57SD8LERw7FxL8QwETjlbTtGhymhnTtaxyCkG7vjvDYuCgshVTlzkRE38Rj7BbjaDQBxZCBRxalbQSAGmOdr53bMT5+v1ugNhbmW1E7WMbbHXvzdrCFpr81oLmWonyE452fz0hNho8PHlhUSahVbNIJgQ6M/vX/azbgCGbRConD6dVLiXq2xUQ47J8nOmDqKH0GyjNqV5e7vbsqzu0AB2hDzKUSt1VgvV8nyZk4vRLFnZArlEa+q5hNBWWwEHRRfRLi3ayPxoo0blvnVbq6JJXb/2qB0CnfRwZz10VFtYWRpttdvrwhRSQvUyFOnReRzUc5WgJcekTTdaI4MFhoXoG7V7qwrt8pqlExmxkzzxP87ebs4NXFxrIW2iA9T8N7oRNefsjkjHUj4SD6DSwBks5cVWiOwf0R5NBFrR40o8BBX5Y0tM2Q7y/OP7N6LuNYu1klF6fBjSI6XkagiDSLzjTOTCzCzrYuHDp/ejtMwAzTYxYSFNdjlfmMpo83xmZGc+80GLASMcwW3rxZ3v683+AxrsiYbNqVHvAAAAAElFTkSuQmCC")

def get_night_rain_shower():
    # Rain shower at night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAABv0lEQVQ4EWWTbXriMAyEldiQB35wAs7ADbg+F6LbxLGddF453na3fjDIHzMajcXwfD53DSulWK3ViLdt81/TYN0HcV8Pw+DbcZ7nvyB2+oX/43/WBxiS+DMbl4ZxtMbN6jehZxZw7Ap+ygohGJM9iBkAWPPbYlg5Y29sCkZlZTq7johjjMC111TtIsSnfnaeJk8SH4+HB+MYuOkKqKHWzTaZWrcqIrOSy0Eg+VJJgpKzxfv93ghCtEEzKPu8LIa5VRmzJtm9JMpRzGsx8CFer9e2ELhsu61rsiSCdV1dwXb44T6obvfsAFNyvFwubVPya1oVmwHyQBcGDBSA1yG7dwVf2nQ/uuMpr5KrRtKlbmY7022IhHHvIT9egDBSD3I/l6QsoXUkdesQApBO6MAWo2YMUiyDI+BFNec16zRIRbZytPQuT3a9Oa737JCihlogGAF//wf0bMrezmmm5nbbEBkeuKrBMdyNWW8JQeHddcgr0AOo6I3TvPhuJO5lPEvJ4uv1cgLaUqo8pstOp5PLjCc6sjUW5WAnPZHSYn8+PrwccN6BAM/nyW63mxNM09nXKEANZuqj7MWW+dPe77d9AfgGiOKD9UqQAAAAAElFTkSuQmCC")

def get_snow():
    # Snow

    return ("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")

def get_night_snow():
    # Snow at night

    return ("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")

def get_sleet():
    # Sleet

    return ("")

def get_night_sleet():
    # Sleet at night

    return ("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")

def get_rain_snow():
    # Rain and snow

    return ("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dElEPmFkb2JlOmRvY2lkOnBob3Rvc2hvcDpjYjc5YmZiZi01MzBhLTExZGItODMxMi1hYWUzMDFiYjJkMTI8L3htcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkRlcml2ZWRGcm9tIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgPHN0UmVmOmluc3RhbmNlSUQ+eG1wLmlpZDo4RTU0NkM5MzQ4OTZFMzExODMzMkY3N0M3RDgxQkREMjwvc3RSZWY6aW5zdGFuY2VJRD4KICAgICAgICAgICAgPHN0UmVmOmRvY3VtZW50SUQ+eG1wLmRpZDo0M0Y2QTRFNjhGQ0JFMTExQTFFQkVDOTg5NjI3Rjg3MDwvc3RSZWY6ZG9jdW1lbnRJRD4KICAgICAgICAgPC94bXBNTTpEZXJpdmVkRnJvbT4KICAgICAgICAgPHhtcE1NOkRvY3VtZW50SUQ+eG1wLmRpZDpCMzI2Njk0Mjk2NjAxMUUzOUE1MEZGQjE0QjY2N0Q5ODwveG1wTU06RG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkluc3RhbmNlSUQ+eG1wLmlpZDpCMzI2Njk0MTk2NjAxMUUzOUE1MEZGQjE0QjY2N0Q5ODwveG1wTU06SW5zdGFuY2VJRD4KICAgICAgICAgPHRpZmY6WVJlc29sdXRpb24+NzI8L3RpZmY6WVJlc29sdXRpb24+CiAgICAgICAgIDx0aWZmOlhSZXNvbHV0aW9uPjcyPC90aWZmOlhSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8eG1wUmlnaHRzOk1hcmtlZD5GYWxzZTwveG1wUmlnaHRzOk1hcmtlZD4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5BZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKTwveG1wOkNyZWF0b3JUb29sPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KFMaNZAAAAxRJREFUOBEdk1lu21YUhj9Sl+IkStRsOXaBukHqFmndtOngIFGBbiDoe5+zjq6hD1lFn7uBrCBoGqNOE9iyBmuyY4kaSIpkj/TES+Ccc///O//VnrWfZHpO5/7RA0ajEYtlwM9Pn1KplEkynevBiPlshh6HPD49BUPnn7evubmdslot0WfzGYtFwMHBAdValTRNSJKYQsFD5RSZnLMo5PLdOf2rLiWvTNmvEccRaJBrt9u/V8plmfqGOIzwii7K0GjW9zAMk4pflCGb3ZDNKsDxK4Rxip23aDbuoZ4//1UOTV6+/IMkjckpnZOT72m1DghE3WgY0B9OuLm7w6/VKRY9XK9AVK2iaRpqtVyI9yEZidyc4/THZzw5beO6BS4u3ovXj2LHJa1VcIs2ppnHr1QYC6/1OkS9Pft756VQKHKwf4jrFIniGN9Q5POmNDsc7jdpPfqaeq1EmCmUMrAsUzjEKFdgNbZ+c474LzGZTjgTHiPZQrBYkjcMvEqVYrWG53vcdPsEcrMhmzOtPCpcxVxddsmyjPk8oCZS0zRiMhmJJRPH3UI1mM3u2KzmWLYjZjVSAZumKSoS8svlkoLn8UCyEK7nTG9nMlCjIM13As/zihwfP8TKG6yjiE7nw67ZECtqHYZsNokUFXBsQ9bZ4ex9B8exqZY8Hn9zwl5rn+ZeC9tx+Hh7KxcuuL7uE8swZdtSKFRrVZ/BYEiyWAhIG0vW+WWjgCleXQGs6TpZmgnYvPx7cmFpx0yv1+s0GhXxZgqDOf3JlM8//YRMovvmYsBlr8eg1yVaryWhm118O5cfJC85iiUf9d23j2TnLr3+FZY5IZ2N+e/fDEOTXCC01XadOr3uBaHYzZsWuqiZjMdcD6eoTCKUZukuVUeH+/zw4jf+/OsVx198xi8/HfH63UwaI26isShIpXpbrxFGiYRKR52fn8nBxC+V5KG48qiafPVwQqPVxC3dE6/bnGUSHEsGxbuQreXrurZAN1FBMJdk5eQdpERpjkxLqQvxLahNogs8JZK1Xag2oiBYrEVBJiu2RVHC/0DXZd23+GbZAAAAAElFTkSuQmCC")

def get_night_rain_snow():
    # Rain and snow at night

    return ("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dElEPmFkb2JlOmRvY2lkOnBob3Rvc2hvcDpjYjc5YmZiZi01MzBhLTExZGItODMxMi1hYWUzMDFiYjJkMTI8L3htcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkRlcml2ZWRGcm9tIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgPHN0UmVmOmluc3RhbmNlSUQ+eG1wLmlpZDo5MjU0NkM5MzQ4OTZFMzExODMzMkY3N0M3RDgxQkREMjwvc3RSZWY6aW5zdGFuY2VJRD4KICAgICAgICAgICAgPHN0UmVmOmRvY3VtZW50SUQ+eG1wLmRpZDo0M0Y2QTRFNjhGQ0JFMTExQTFFQkVDOTg5NjI3Rjg3MDwvc3RSZWY6ZG9jdW1lbnRJRD4KICAgICAgICAgPC94bXBNTTpEZXJpdmVkRnJvbT4KICAgICAgICAgPHhtcE1NOkRvY3VtZW50SUQ+eG1wLmRpZDo5NDEyNTM3Mjk2NjAxMUUzODVDN0JCNTI1MzUwMzk4QzwveG1wTU06RG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkluc3RhbmNlSUQ+eG1wLmlpZDo5NDEyNTM3MTk2NjAxMUUzODVDN0JCNTI1MzUwMzk4QzwveG1wTU06SW5zdGFuY2VJRD4KICAgICAgICAgPHRpZmY6WVJlc29sdXRpb24+NzI8L3RpZmY6WVJlc29sdXRpb24+CiAgICAgICAgIDx0aWZmOlhSZXNvbHV0aW9uPjcyPC90aWZmOlhSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8eG1wUmlnaHRzOk1hcmtlZD5GYWxzZTwveG1wUmlnaHRzOk1hcmtlZD4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5BZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKTwveG1wOkNyZWF0b3JUb29sPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4K1Th7IQAAAmpJREFUOBE9U9lO20AUPbZn7DgO2QkJqOK1Ev//D63U50rQt5YCKQkOTrxvPfcGYckae+YuZ7njzGazHnyappEFvu/rK9+O48Bai6qqUBQFgmAAY7zPWDk3Eui6LqbTmQaWZYG+7zEYhFrA81wJ0aSr9Qau4yFJDpC4pqlh6rpmIFhgrolVVWqiVG/bBnXdYbO5ZsEA4TBCesrw9rZjyV7jzHg84YeL/f5VN4RC13VI0yMhhxgyyRgDQZK8H3A8nog0V9SC3KzXN8rz4eGnBkrni4vJB/eSqFpqIhQjQg7535GC1VUamzxPycf7TBbuq9WanUeE+oosSzCZXGB5uUBV1kSQYTyecf+ompksS5WCCCVanFdX6YiYeZ7j6WlLxoYFSsTxgXQ8PZdY43lG+Uiw61pVd7fbalBR5AxxsN2+cr/lnsFut/vk77oOnOVy2YtoZ88NqZz5dV3/MROBuiNutW0Nn7PQ80wsVARt16KpG/Kc4upqTW4nLSYFBVWantjZYnP9BR5Vr1jo5ek3OoppbcCGhGXZ1VqDMAxwe3ujPMXOxWKO+/tfLORhMp4qOtFsvliRygtFLGCkk/jp+1Zhic8yNPLEcfxBY6guUQ54HGUZabFanHLFttFoxJ8hrO8x2fJwRESuei28yzJDw6ns2hYl78Tz8x+e4Xw3lssVoigi7waXl3Pc3X3F4+Nf6jFHxMLfv/3Qcd7TGdHDGJ+IPc7D4UxBHBCxzi5YDKMhBtRCUIXh+UIJ1yRJOBOFjrnEiluSa/b7fzw4EcUQ8SGgOHvEb++EWimtNM3YqdYZsNYnnVzhSxF5/wM5z0UqLS96NAAAAABJRU5ErkJggg==")

def get_smoke():
    # Smoke

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAAC7klEQVQ4ES2Ty04cVxCGv3Ppy0z3XCBjDDGM4whLlheRss3T5TXyMNlm4yySEEwCRmAuIwPjmZ5mpu/dJwXK4khHKlXVX99fpX759cotVylvv98jCj2qqsTTju/GYNNLrj/+xcnJJScXd8QmZxIrstrROOiURhurKeuK4/Nrbr+umSUFWitC3bHeZDg/JB5GDPsezotwJkApRVHU5OscXRQVvudRZDk3sy/km4KzWcqqsRhtub9bsakUQRhgrU9nfGzgo62lRaHTzYam6/B9CTYtiySVbgGBKPOCHllecv+wonSWUWyJo1Bke1Ls/wJZUcoIDWEYSkWEg+GnwyFRk3J2ds3jpsQEIZ71JGbpey093zyrVsLAWs+X7h6t61hWjoPdmEFguPp0zfnZOeuipd/zMH7DIn1EjS3bu1sQFhTSWEdRXwpYmqrgfVQTJVfczW4I+n3i7QlZVQmDmso15KLwoYtYMqYOBviSq4PAUlQNgYB57a+4PfqNo7//JXMhk/2pSNRs8ozWGHYmMY8lXMxr0tzJv8a27RNLx+uRqFgWpMMpeviC49ML5refZXaDE99VlUHb4Cr7DNa1awoBbEHTM4rk7AP/fJlR9/c4/eN3iuSBVp4n4LTRJGVLVuQ0Ir1sHevFAiVj2fE4xroeeTriNJlxaJbMPx1hByN2pwdUoq9VhlXlk9xdsRFVphVnqjnr9B4z2Xv1c4+Cly+3mb4YCIcEIx57e1PMcMz8seDy4pyb02PS64/kX68IukTegvtlJuXBvZLk/Xc/8mZ/l62epdMe3taExd0Np39+kBtICb2KnjeSHfBYygrnpdheKNQP79+4pq5JVgtm9yWDnR1GvsKWM95OoR9/yyD2aWtDlnUMbU5WOh42cDB22HdTCTaGujugaSqCp51wDu0OCWWhuk6RZ45V3pBsKuZKlg4jSmAhltqyNGh/S0grhtKp6So55w6rJVkoK7FOm5Zveo7tcSQTP11v+3w3bQf/ATNjgPu9t2TKAAAAAElFTkSuQmCC")

def get_night_smoke():
    # Smoke at night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAAB6klEQVQ4ETWTWa7CMAxF7bTMk+ADiR/WyF5ZAyDmeSpt83z82kpR09g+vnZcXSwW2efzCZPJRJrNpmRZJiEE6ff78nw+ZbfbyfF4lNPpJDytVkuKooj2qH0WqTkndhAOh4MMBgMpy9LfQGoYQcCxqRInkuc5IA22iZVzvF6v8ff7xcvlEjlPkiS+Xq9IRvbmFw3g+wpUBsuiJkfSNOWt7/dbLZtagHJmIDWI2zg3NUpCsyNEAZABgFQgmc1mvt/v92KKXDYBjUbD+8OehYpgGzJ6AHV1Oh2Hnc9nbx5n2FnWbOqWXq8n3W73H4gBSRg4pHEEkw0YAFRgrxdKiXFFSMfAm4Ptdivr9do7PhwOXSZQ5JIAX+uJQwGnXA0P2b7fr4O4Nuq/3W6eiWCUkJU3QFQ4gGAawhw8Hg8HbDYbhwEkqAYQwDdJUeFNb7fb7kCDOKRB9IDeMFg4ASAYoM2IA1DiCZfLZZxOp2L1xvl8rjgSQE9YlMEY3+93sRnxEugVYIAMRTEej4MtYVE/MnkTvFqtqNLLJJByDcSkMmSFWvbcaInRopWhlIQTjeIW+K4zIrvqRzQ7vkU6Go20ugmtr7P+aQDxIBcgJXBmEAWKX2r7ohqmWM+EBfAvRHNwuH1jU7tqfiafBXxslX+pGpy8wcBuQwAAAABJRU5ErkJggg==")

def get_haze():
    # Haze

    return ("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")

def get_dust():
    # Dust

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAACCElEQVQ4EU2T4W7bMAyEKVmJk67YCuyh91J7nQH70aEdltSxJVH7jk6BCEksWcfj8cikXz9/jDRlSymbJWPFjzYPO7Mxhn7M3c37sNG7td6sxEV3GwlALAjuHHH3SBSQwbU2wzK44rAkvZKCxxU8OxP5QoFOERxEHoqCwCwDkYp7cgDCdGRqMxWVSBr2CdznGsOt9KYXBN/fSqA+21rtev0IgvPT2Z7OMwhQ+KBAyde59NpiIwVSQqoAtXU1b9WcmHojb1GE0sjIHjupKq2uHD7zcy8IR4FoTsj20W2rGxcEQqrAaZriWW43EezsCWmIi+/eAbyRAqzoHzUI27pY2xY7lGKZBOVyazYkCWQYlSfSKnCXGw8hWYnD8XC2ZtX+vv0xvLVyXa4SbXkqxBFM0eoJcLYQ60w2LZFuWDbPX+3I++XfGwTUlssJdmrqmgiK8BpGOG1M1Co+mSlaGO2ybvb85dnmlxMm2tGSoyVaQ3iveLUxA5QGPpc5ak2UoVJj6MAu7+/27eW7hbbWmEYAlTlvBE942jQfcjs5CaoVSnRK0AwkJsp5vr7+Zg7IJNOSjCQ7gkNvMdoIwXDmIXOinMGoigQAHZGxzIFmW2bpn6U+F5rfIUoQnCIrnmOA3/9spIKIWH01SJeN3gOQ2zLwSFGtunXKWrg70KtMTYPmeZK+fWoyJWhS/wNK0V1WfzGvZQAAAABJRU5ErkJggg==")

def get_night_dust():
    # Dust at night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAAEgAAAABAAAASAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAADHbxzxAAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAABuUlEQVQ4EYWTW3LbMAxFwYcf7U66iO6h+19HMlEti+w5oJxMviqPSAi4uAAu6fLn969ZSkTkwv6fZ84Z+Y6199bM5oHgtNY36/y0CGvrwJizxCwvgoyw5P6V4efEudyCcVTjePIDkhHRq4iF+laRDgGCcKO7SvIJw1gWjUgAU8K+AIbbMWLb94zde496aTEc89QgOSTQYBzrJI1tV+zrGLETG3zfsY9oiSnOzs8iPl3GV7KO7AfXBr7VFpX4RpVuktUhM7vYjX4dzkL8tSR/CqgfkErsiKJex3HEOJ6Q15SiH8mqyqQATq9c0OBKXv1DHG/vl9jZt78bwjJuMo7jTHk1cqpP7ZknYT+LYKeD6+0etx8/s0B/Aii1f1YXmDo4mi2UmtUXpY3N+Hg84n67RqObarKgdZ9RHcCT5AeVdnZHPKQUkzcQQnjeP7YoFwicY1WVHDBJ6oCZ86tt6uOQimqHxAt5729vHKOOJKEayd3rShYnmKpPdVDbpHOV0iNep9MbCTqt0ipHZYBbKPQCm53kSVk9LxERCzBSaZzKTsfZLk4x/jkPznzwKrB/Fjtcj+OCo2grJFLoH0oGBpxWsphFAAAAAElFTkSuQmCC")

def get_fog():
    # Fog

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAASwAAAABAAABLAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAAChjGzaAAAACXBIWXMAAC4jAAAuIwF4pT92AAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAAB5klEQVQ4EV2TaW7UQBCFX9vOMIggIX4E5f4H4ACIQ/CPK0SRoohZ3F66m++VPYnAVi1u13u12en7j18tJcniq+2q4VRUbRXBRxVLqVprUS34a1GnHRjof1RQxUmDaCP+/6xB8H62wXl2dotVWL/ZfZPtL9WoaODpDbg57zryBpBWCHY7zYIfwrvBhNu1OdZbEmff5Qa23cG1ejZVg1WKm0FSTTWBg27WgQHaLUOsSOO8IINVxwo8zQCht/K8BYO24FvZHPC+sA0LBAuqDwJSeiOweH17H2ETz4m4tFIfBKSOCiokw8ouCwSxTZSDDbbt3BDBIbQB81v5zedghzlPgLkNdhHJYOmua/r6qdeX+0N8MC8vo/KflQj4lqJMJSfKHa5jpgXtkjTgd13Sx4P07b7X48NRE5mO11GP06w6zjr2Rae+08+TNFzOF/VdhwDe5QM2F+n5edF6vVJp1fg66/NlVHk9q6aq3B00TmAu10zZbMFzcHZKdEV3yNNL0wGbKLcywN95UZmLeoY31klPbGM4k8EEngCJ47KJ1cYwb2vElpV5LJqmrHnFh3gYc6bn/ZcA4E/1tkJ/Ga4oPpp51jrRwjKrEEMofyUE58s5ps9zTJ/waMURAVwZ3JzJjPXqTLgncgV/Aba7vTmF1yb5AAAAAElFTkSuQmCC")

def get_night_fog():
    # Fog at night

    return ("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAASwAAAABAAABLAAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAAChjGzaAAAACXBIWXMAAC4jAAAuIwF4pT92AAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgoZXuEHAAABi0lEQVQ4EX1Ty04CQRCs2dkFDnoBoxcTL3L0xJ/4d/6finhACUb2NTNWjWmybNBOlp7p7qrpF261WiXnHExSStBdevzFGLNN2s6l9z4DjMC0gS3QiHU30fksgYIlQ5ARGth0JtDFyhiC7Sy/znpRccOvLIriCLZA00OCIVgY85Vik8FEDnPKNnzNzubXvTSgLmcl2+mjVoweGzYyExjjmEDYyjPdwqHr1QOHyAw5N3D20DxKA48124YQEuq2zy9WpUPlWB5hnlrSi6DrupMmZg9/HFNdzBe4uZpngvXrG162n5gUFXaJi0T4peMeNE1z0iibivcT3F0v8HB/i7oPmB1aPO5rpBBw4QM20wme9rtfAgNJF2qU6madz+sNUn1A0/fYvn9gF3uE7xqR5XzFgKZp4ZbLZf4v2IiOJZCILUAbaGHKU9atmiMz6LKJ6Yf+nx5oBBT2m3sB1CSpI1tI3XAjPc8z+kvbMAWPJ5EpRJTXOKEiOBE8ZaxGGGgvA1P6S0SoT48cyRVMm8kP15omBrAUFqsAAAAASUVORK5CYII=")

def get_gust():
    # Gusts

    return ("")

def get_night_gust():
    # Night gusts

    return ("")

def get_tornado():
    # Tornado

    return ("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")

def get_night_tornado():
    # Tornado at night

    return ("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")
