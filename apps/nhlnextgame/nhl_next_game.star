"""
Applet: NHL Next Game
Summary: Gets Next Game Info
Description: Gets info on preferred NHL teams next game.
Author: AKKanMan
"""

load("cache.star", "cache")
load("encoding/base64.star", "base64")
load("encoding/json.star", "json")
load("http.star", "http")
load("humanize.star", "humanize")
load("render.star", "render")
load("schema.star", "schema")
load("time.star", "time")

def getTeamIconFromID(teamID):
    if teamID == 2:  #NYI
        return ("iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEqADAAQAAAABAAAAEgAAAACaqbJVAAABH0lEQVQ4EY2TvQ3CMBSEnYiObEIDs8AIdOwAgh2oYITsEho2CXXI5+isw7EiLCXv/3zPz67CwurP28HDze1Vue16MSCA5n3y3NBv7tEuAf4ACWB97WJBdXhGObTHBIhvCTBEkP1jCOPnK7eJyaeN2aXmhyNvA78vsXMfNQKLQB7MdW9LsZKvXmKTs3BbulittItLJeFzXTmfy2488BD8OFJrTELToMB1AeQtec6MkQdd50rARMvZ4JsBKdGl7hW+HEB5CSge2theKZF3wlkNbRekC0Cy5rp7CwqUJK15e+RQC0ZihFOsvBX8mpyzjQD2FuPU/mWVMxcbNkvjdzAY0AKSrwRAMTVIVlImc/rr/XgrRAToAKorAikoQNklAMW+p6Wwms73wcsAAAAASUVORK5CYII=")
    elif teamID == 24:  #ANA
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAAETElEQVRYCe1UaWxUVRT+7nuzQKEtVHBC2GIrkGCIROMSSQoxJiY1xg2iQYk/NIotkWBIrKDVFsUfokhjFMEfrA6mEPakGhuqRohoVYIxtSgmtFg6Xeg60zfb8TuPqco4Q0r4YUzmJN/Mfecu5zvfOfcCOfuPFTDXEH89904a5f4mrvsw09qrJVDDQ2YS3ncqzKPXTYCFZKZjUz4P8GMzsLFOQvTUp7wN/N+RGmM0BNZy8TzCIu7fUG7G3DAVeOguwOTRwyAZTegluYsdwGffcewFGk8Cmw9JG7/WEDuJKxKo5PydxN0bnjP5c0vIgAfeewc944kw0NcPLH9b0DfEb5rFdDwpQnOp0/oKOpSIUreBDurw2pa/SLxM7/Z0BVbRWUaoaXANhYU3A0UTOCABJwb4GWTzaoPCfKDh20s+wwDnme2KTRoRyPMDpfOB2+YANcsZJkonVejoBaq3Ah8ckHfpWZUu4Od0/kKo6Ra3wl+ccvNQsuSPEs104wrgerZg2SJ6mGFvJ7CkSmA4J+QQdlj0b4AvT+khgtef5QRPC8RsFMf1qBhT+XcFT9OnyGTv0RnwM4vdrxgEAqwvs3linaCX5XAYsKnl8preOptEn6dSY7lThQnZ2BW0UNsYz3R+Vp9W8COvB9FglZHvtxkZrDfyYCnkltkQTXhSIaT+LSPHtxjZsdaIbUHm3whp2W1EThDHiX227Frslyl5RqkEiekaUbXIZqyqtg7eJ5Ztf8n4ltwDjKUCSSZw+ncgnmBZfUA7m2vdTnGTnMayVC5l1uyeYg3BNdJlI7jHwgtHYtIRkTp6VxIXiKwE2EKoJRYSJYRn1jQGY8d4SenwmwbT+R2n7F0XgUdY+z+6gE9eNZhYCMyawR00p91CT5MPjWcTWHk4luyMyD662T0g5UuW3oQj/hoOHibY54gQyTNt7o2wC/KYFJspPMBHoVJcFWpZ58lFwAz2hRbFCRmETnhxsjWJ1Ued5FBMwp3D8ilnywlS/duylUCPorjuLSjgv7dgHD5mA95UV22wgNdSa3OO105t5hT+MHCMarR+5cNP7YLyQ9Gkk0B/V0S+5qwGHiR6iMssGwFdpL07htg6cTxu3/+GCcwphi9AOnrVEOWP/hPxAYOzjV78GhI8czAqkTi6e4blB84+SQwTpJbZ0kug2Y7TpVMnY5OxsCiZQNG2NcYunWdg9FXg6yDEzw0+xPgCWpSinS/iUwccDMZwoc+RZq56jNDAfcQVTXPQJhuxKg4eICT4opVftgC2BqP8aD7mxUC3gc2AQ/Q9fdBBZxjnuTaR5MXqj0orx4sJfZjZIaMzVWDvP5aOyO4/1+TBb70WorxyGqDiaBRnuqWN8jv8ZLaiQbRR+Qa6pvrwSbo6UwVcyVPb9Oxq4j4fnx+PPkEpC8fdhnycny0pl65Vma/JlEC6UWS3ydP9GtB9v9Mnct85BXIK5BTIKfC/VuBPKI1w7Rq79bwAAAAASUVORK5CYII=")
    elif teamID == 53:  #ARI
        return ("iVBORw0KGgoAAAANSUhEUgAAACQAAAAmCAYAAACsyDmTAAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAJKADAAQAAAABAAAAJgAAAABQzrCcAAACXUlEQVRYCe2WMVLDQAxFY4ZzUMIMLdyChoqTUFNQw0WoaDgGLQUlFzH+Sr7QaiVnN45T4ZnEWu1Kevlar7PZ/F+FAuM0wkevQa3TGwXIVF5Yzk/P8afIy+WNlH/8/lSMUwOJKgRRCmOcGXttM4R5eH9eu26VHyDjpIreacNvPhK4tkIAkUL4srY6nbEWENWQch6Ebfr5+nA4m80xNzUg5PIA9ONOGOuz9lIghRjHrTkM+dFmYaDOxfWdZRE7j66WFg6pDiVwhhDm9eq2WGQHhAkgCoZDFNKNChhAUZWsVYSxgJndu6krGEJlBfbAFOogR+XIEk9+hZlZIy3kvH2KglZhWVX/kJaxXnHn+8hCcEErDNa3tAwbuEkdJETxBADTc5c8KPsUagaxlSKV7Hxgb8+MaWJOIYFhK4IkoSuCgS/wE2I0c2ME1NUiS2USW3dlm3UKQ5/f5doiKpOdLbYK1jKh9c/Z3GfIj6NhNy7OeYHhuYEFa8FY0Lf7Jx4VIg4VqmAYNAcVKYMC/FHIQSWYL7mTQ972BUwSoG62Eo6ONmlBTZQYuqnxy6ILABYCinnVfKwfR3kzH86hYSq4fQR3UL6ghfJzPjHhH/xE45gHo0iqYEHwPhAfgr3T0VIN15btPACLPhrgjWTTSg4DxUPQh1djD1QtaHGwTcHaIQEOlm5drUDYZ0WSjnZQ8SI+G7QCZfH0dyvBQH/vAapU8smOMe4BQr05KFFp18rmTex/RC+QxieH3+LWHQI0p5KoqNQnNvAOxP8Z+f90rNp4JJdcdq8szbWEI4y1cOGCFucv6oDuAxz/QzkAAAAASUVORK5CYII=")
    elif teamID == 6:  #BOS
        return ("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")
    elif teamID == 7:  #BUF
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACGUlEQVRYCc2Xy1EDMRBEbWpDIAZIgzNnyINQyIO7z06DHAjBVUu17LfVnh191uaAqtYazae7NZLxst/dME6Hx7lWNr3+7GuxzD9lzsznpNPHS5ZSfKfDcRE3IqYrAGInnb+/FgH75/di42MtJ2JGhCyAbhTyp7d5d3nmzlCeD+rYhGN37a3kGTE+CdkkAnIA/mIeFuHktPAeAY6RiXjwsxB5dtn8Ynn+qK0LCobw/TiuBNQAueG1eMvv5K28s6rLLfa23dN+1QqL2W26sOqAWsWOZdM6V5/5PB5t8rNurASoWAWIYB1B8SvXH/KcVL6MvGDoI14++TRqRcQ0QyS7Nmo4p8/jLu0AQAL3TuDXzK7dl9k1cnKbApTUEgEIs8h45OuRK6f7Y6QkRGjOhog0PD5CrpohAYBnRMQ0a9RyztH1Z/cIvIQdQuIx2fjJi/FsvUmAAACHDFDWxPH35uX1qfZVbAGIVITMrdwY01dQLyqbOyAgFTPYudbuJ96bbxIgUIhpOeseYYwvR6DAyDGwS//ZBrQVI6fwXNove1MHIHCwzB7NU+3V3wFdCr3Jxt0BiJ91Rh5zWJOrWn9LXnWgiLBLBhlArAGMM/EsP5Kr9uoOOFi8DwArB3DPx67lZeSqqQpQMIqQ75ZRIxdWU4ASJEJza9eKZ4Nu+JnHvK4AChCidUsMpCVv4B/VYQEI0exi3C+7tduY+y/Wv1Uld6zJQKBSAAAAAElFTkSuQmCC")
    elif teamID == 20:  #CGY
        return ("iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAGaADAAQAAAABAAAAGQAAAABY85deAAABi0lEQVRIDb2UvVXEQAyEfTxycjqgDSJiCiUmog06IL8KDn+yRze7ln17BOx73h9pNKOVZU/TP4zToMZlxjmWczUck/7SmN5lczl/vU1Pr59p5lyNFbPh3BgsOLPtSb/ffwx23b58PCuZhrc5XOFTZG/naY/YMewroUokBEZJe5FKyEWiPKOlqcjd5jd6XB1ZHt0A0K3hGMVVMYgclgeiisAyDV4qUOFwqlybm0TkPCnbnsBENhyKVUurXGEXkYgxyqbAg/U0k2bbOy7LhbEix3aPkJNrn1eV4ai2wrAW5XJ3s39YT4hJMEx+qybiDweJENp0GS/tTiHeR/9ESi4S/x0nvkMoEqTUeoJ9nby7KFd2B2DGwEtvKkCMJ8pZIkmOkXGLHL8SWSL2Z4k0AWRyS2QkEck278SJEdIj8MhKjL504fMmMrgQNoJ8Zd9jAjBPlQA+3YRfQhJ6kPasYCocvj0BfM0HOJ/LH2VBkDhIGH2JFusy9yJYo9O8c3YI+o6suEJlzzFMsOR6PP8C1s+71KzrBKcAAAAASUVORK5CYII=")
    elif teamID == 12:  #CAR
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACRElEQVRYCa2XXW4bMQyEd4Ocpq/tSWrUb+3h2rcEzUnSM201sr/FrJYSVTcEbMr8myH1g2RdPkh+vvzeZkv9uF5WYp9ZPKId9Pu3r2mJX69vp5idyckzMAAM6Lr2y2zbbTCAe/eC6GcGBDJgwJT6pyH1uUNkagtmgVtQ70G+L6XhQnJjGvKnBATOqJXg46bjEbBykPdl2Up+JbGUutqOJ5yRdnABt+ACngWnPiT43T0DgDsoSepcwOwrdtcZMeVqK8IJZOACGoHjz2IUdyIwA67EMhlJ3ZZIK0aSkTgQmAW/lV6GL59Izch+CzJwtasrpKJenJvgYPilI7/H7gTc6GsVKIVO4BSODts9x8t015XAqHtlloKHzvUzAgZl5CMGfTgDGNF33PqTsWbg5M7q56x7L9SCl6d1l/LAnMQbODnvhuEESOIw+WgdnDg0V09nx3Pcr0cofYpJkPZCGTiEywSGV1V1pyYQjVfJCH51Dji+TKfXMCoAoPtacI2/xJ0moDjGr/ypCThQtP4X8DZ/ioAAIpG9BVdc1Dn53r1swy3w/eyRUBHOWm/silF+Cy57OgGRmJXeqe+BTxFQUEYCv19VSI/AiVn0Gt7Za7PrpxqSL4/VvvuHVNXegYJF9wzQVZCzmwpIXXvnnBXtt6T9P6Aa7etAgIIjcGJUIwKWPTpsskeynzBG5X+CtwkOiI+O9Xu2a3KldwIYIfLpesF00A4oB6BaZ+NWTCuHLcBZp9B5fBTzv6DgSIcEHMCDWT/SKbmt/gug7o5vfTv5jQAAAABJRU5ErkJggg==")
    elif teamID == 16:  #CHI
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACkklEQVRYCbWWzXEUMRCFNS6fIAScARReAnA8OAC4UcXBRxMApAMBYLsgAxwCHBn6087TtLStnVmz21WypFar3+uf0XpIK2Q0WTIbTJZsovPFS4Cv8Q3Hp5A4i1g9RQdJyB569/zQC/vsIxJLWdlLgIgePi1WqeKUSbx9sdV9/lVlZYlM5Qjw+9tESsvM+uBxczUmG0gFsG+D8f+Cj3cWvA0R7hHYaUIMlXYjkS7fp8TMOFSGjaXMymEuu19IRcCDC0wktF+avz97uWtyfVH1gjcoTShwIpYoas3S9+YQXMYTibYRqwzIVjNkPCHpo1ngb/78LMfWA2n48lj2KchESICaIUS+JvoK/OZqBoxWDYmQAN/yWhH4Wvts50hkAqq/nOCU8ffj3FBRKdaA75RBINO8kwGlfPP7R2KcTKYsnPnofZR3z18lRk/WRN+76/XlMwSc6Lfz3MkYe2L+sl/n7ncNmB8h+wqQXIbNY36Utpr5bymBUs9RBOjP5+udlSPSsSjqTOD1uzGDCliZKFbTwpPw33trF+17zXjOy0QfeOc4aPeR02PoSgmIXqN17DPiiSkLmtt77d7iTMn+R/BSmtA7hojfc6Hdy0kX3Ppg2HzLDZhtL+dfRDLOs4wUAmz08Nzf1l8BZ8cUlZ05l4AFjYjw+IjIMUFbX2CiKz3gDaIXUF8Idr1yeB/jh69sh2Sp3yflV4e66D8hf0HALaj03javpzcAAkSZ6z0ZKWp/p+oBlUEGZKkF1hn6LgkZ2SwSEThmpQQYeOGwB84ZQjNr2JZot/op+rzhwETrdu4eKHVRWXCibLXOda/Vt8DaVyWQkhkHcub1ApaNP9N6LXj2oUvRHBHIlwwhsj+JDhLISZyb03/c32bYF8vzlAAAAABJRU5ErkJggg==")
    elif teamID == 21:  #COL
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACiklEQVRYCcWVPW4UQRCF28i3IMTiAk5NTuAIyeEmdszPAZAsJA5gmdgkhJYcOSC2nHIAJAg5x3q+1rzmTW33TO8uEiWNuru66r1XNd0zKe1hL86v1zx7QKRn+yT/11wqf//yVX726cJOHXDCq58PuRH43N/bnZ0ERPBfN2+jq3t90B05BqrK08fbdH9y1pX+++u7Jk9zo4XsAjymR0xNyFYCWuQSsouIbgEiv3z9PP34eCXOyXj8+UP69P1Pqp2Jo4svJdY7sShAxGTPkQt9WxGztwBySP+VeWdUWFOAyNXSnupdqLfc/XFeFRDJe8EA53zMdc27QPyGgBr5ttXrkPYInwiAPCpE5S421wXHKwJE/u32bnKV5qrnxPPM2VIXDlvJSmxVoutG/mVDBLkcYrBiZ/UtyAKoXkJIcNP7dF9tvjp7U3On1fC7QIAKikGlA66QeStBAAg7HRerm4c8izlUuR4s4ql6koqAEWtj4PvOn69l7N+Pn1kvgvijlNaIwi8ReRz8ErEoAKCen0wmHIUwhwgSXu+ciKYAKQasZuy3DEIeyF1EKz4HEozpQObFuManffkZAfR1nMc8Yfi40YF8ddL1+mAwAGOl+AGAnJFKa0YeD/GcBWIiFr7yOxao7n28jgS7Kc59mitXhC4Sn6+LAJIRATBXzD80AhYpBALXnka+pJhEcAboJD6IyRuawhK+v9fQydlERPzCSRj7Mq9GPkbEIkKd1V6M3zgDCmSEsGURKMapA/gVO3SjhFE9lgXE6ktUmNReCyG0WaGx4nFf25ORvGoHlv5wTjhBHBdeaW2f6oWRr5QOl4K9ffL5qGT3+ZwutEQ4OTnlTjvAEoHHtua1V0FsxH4C0vnP3a5iN/UAAAAASUVORK5CYII=")
    elif teamID == 29:  #CBJ
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACn0lEQVRYCa2WXU4UQRSFe8xsABK3IIbEB2YpohgjC3ANJjy5lTFGQJcyPvAibIFElzD2ufRXOV1dU90zzU3gVt2/c+6tqoammSHrHz+3M9Ij9cXcAnNJHExAwJdX3+fyb5b7VNjV7S775YfzxVj90QAVAKDU8ebxroixevmmWX/9GD4nQi05ZK8SIBhgBwPg9POXRmsX4ohxn2qJGKSKRzAG7AVzcPkAXrdryJPj4MIZTEBGkuiEohSRVqFPF2+bxcl7N1fXgNOggnsTALwGXEUwp8By0dgB5ygSgUPBt/c3MYUckCliL4HLFgQAV7Hfx6+DuJ9tKlJ499+uf6XbriORcCzkyeada48sAceQaxWhG/lEUiJg/QAqG8BaO7jn4xu8gtq5ezEHFbj2EkCIZR91u2fKcUVC9yvdATfG+uE2LgyFKOwdD3JaA/HyCdyP0idEbpFAJL56F88RYBX28VNAOgfFJ/C8a+oRMyBw9vfP00VsJ9BkJJSkkQOIln3XEdK1E+H8ldcjoBcgAqt/94vN0cm26UYIEMVyQO2VJyFGgP6isEeQ/UoE6FxJ21aI2XTPkr1rQGVzAAePmO5rqfF798pLBOheGuZKdhAluOSgi1Z0bIqp5XmNREBGJ8Hegwdru2RBpgN3YuSUupev+B/RFPY8LwfT6BHWaOy5XupM9DVcXT25OPMxEumSdBVFxMmwRufA7NOfY/9W+5MisEaIO0Msminx9vMLqLhEQBsnoX2JiOwlAcx9AMtWApe9R0CGnIRsh8qui+f1eq9ADu4EQd4FtprWRyuAC3+6a3nJFxPQc2p/mEZyTliQ39OVvMEEiJ0yPmJdM0E+3+4bXU9lPVqoDTiolpIicQrChJi9STwnOPyeuynq7qVrjf0HqQC8E0+EKnEAAAAASUVORK5CYII=")
    elif teamID == 25:  #DAL
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAAB5klEQVRYCdVVW24CMQzMVr0bV+ET1B6jFXxyFU63eJLYcZ6bB1LVSIjgHY9nvE4wZnWdT7vBZ3J9TOa9LW1NAJw/nkti1gQslXbJ8wLe4B4S5gW8wf28AO9+36eHX+T/ww4o9/f7rziZ3fx5Bz67lMP10WLM47kdQceeO2IIiD40gPvt9hPFLIaFdFbZuu5xuu16Jn7bvPnzqbO8MS4Dqg+uVAhoDd31+r2hKyKiJYEF0usK70uJoNba9MvlS2haxQXkNzoPIRGlCnNOEIBIQQTCIBQSBJKVdoe6YdgE9sQbMg6H1A2RDBfailUcOD+YDuEwGQ58jjOIULv8HoBCrZjAI+23jrkA8zRcN+8BcsZUJiKWaNhkIlG8UZgz8w6oOQAoI+ZM/w2RjBGRncVBUe2Adg9g+hsxrJXiyK+eAu0MwNaKnAPY0XrmK3YAR4idMbD0LYXxsGPgShwhlhw/emCPInWieAQRx5Jj1zhqoUi+izvALoDz9z86IU7Vc1xMVD9mdAMcv9YY0fHLdyJyh24grl0qHLG6i0s/7yiVQxRp1NoascJbETVcXqkS8YSWjF1XoBLWOUsCUqIRMs4dyfEO4iFEcOAWky64/49kIuVpc+MmVisfuEQyZuYZ5uDEjHEiMMj1Akm6RJ0j+8mkAAAAAElFTkSuQmCC")
    elif teamID == 17:  #DET
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACB0lEQVRYCcWW0VHDQAxE4wwNQBPwC/3XAL/QBJQAPDPPrJU7J3YyiWYSnaTVrk5OILvdjez1/vEb6f0t9BVHe7jmAAo/f77v3h6eRumrDJDCqCrOefMAkkJyzLgxlsL2rB5AYUklWvIK5+o93y011hriCktaMa249hi3sN0c4hje85hY+WYvHrGTHgFgV0ZTnom32svXx9B9BE5YyVN8zSp9ZNkP98EGFO6R94haeLEIWc8cG5gN4KppSCBxWr1FK0685+REnPw0gOKCnNhmvXViMZkTt+QVnzCIY3o/2MS+sm6u4u0TKy7z1hQfNwCQRL2RsWBu2spZ1ycmt0OeODcwIG6h5SFVOMnIpxAxVjF/2f/3FCc7fg1ToJJKqO/Va15J8vRWYevjALV5+DWelSDrEPHKWIzemvExf/CHCAHEq5DEeojzDL4adfK924OffQaSIMkzX4VauMQsic8GIMhGYm+gN4dPq33WjomDm30ISdQbZewgevBYjcmdIg7u4Eept6lekfScMbCeiU8VBzsOYLO+EgLMgcAZZw+4NeLgpw1ISDItxTLv2T6E14rDcfA1VFBihfTWicVsEZZvTzNEScy5ZS3MOeJoTI9AQW9Vh0hxsZfw3d8DkOcQDmae+NzbwzUNQJD/GYmrOdClxCv/GDNEz6jxajZuTM42IEdP5BIrV0P/AzUQICLOu+NrAAAAAElFTkSuQmCC")
    elif teamID == 22:  #EDM
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAAB5klEQVRYCcWXW07DMBBFAyrbgL3ANyyWf9gL3QZIITf0WNeTceo0BSwF2zP3Zae8huGfx80W/8P94+j4z4+3eXv38OTl4ev43q3bBXRjmcpwNn850V/HUtsTpjqFNjLW46Psn4dx9GcCld6JAH8hbIVbW1dLkVXgmrWOp1MtDsfARStitU8DQEDAidXVe2N6HU38hEPTKVovAgDMxCK5d48W2s6rAgCA4MBqPX3oFiOrGQhNPGiVADQAAoizv+MtPWHRxqviq9gzhMuwrXqmKSzm8zcyBRLSbM2tW9jKLz+wshNlya9Z49CHeMp4Op1KNZ/hOJY+PW7DMepRB1c+hBT2zhi4sWrUo34zQIsQBTJcVhMvqy9eQTTo2buwn7yH27yBHrIwPYbC8ETdiwK4qZ8eca9pzUPf54sCuIDWHmhLT9jNAdbMonnPvgSIwnHfEuvBCeM4X88Byo/EycXfX8v0GnU8yw1I1JNdwyRq6HDRowoA4TduwTU5vfxKAIoxIaH2zJhn2iWADDwE6z3G4kbzqFsFEAGAfl1CVn3rcC4nR9u1FgHUBAjRxZycrSMWDTQjZ/U/I/5oiKKIIK59hqHfMhdvNYAAhNA6M1E9DoxVXzNX/2wAgTQ8yE9l/es543X2H3a/Afnc4Yiwj/o2AAAAAElFTkSuQmCC")
    elif teamID == 13:  #FLA
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACjUlEQVRYCaWXMW4UQRBF16slBVkicQInQIQkRFgi8RW4ADdAHADtDXwBrrCJJTtyQoh8AkhIkBCkRoJ9vf7tPzVdMz3Q0rirq37//7umd7U+WnWOzZNXfzqhBfb769VRD34EyoR27056+CrmbPutxh5EY9WAhDOhR+9vnKfEL358rrlPx89XrJkZPz88qzUPZExGNlE4CjlpFIRYwi5C/Prtx5qSKRK7O2Nn28Mr3ZTkvr0Slohvqkz7IAoK7xjFjnUceYzQjbXAvbMTsScz2uJrYUsHIjgCESUX81rHWXzRbFyDaxoQAfPF+ZvDMrlUjvVY+/RqqWE0mhgZKBtNTLfWyZfEunTiVbfEUQ3oY9MjyEd1Dhc/zsLL0MiAACpks4g1O04cqsU12JirHXCiLIbYP996z8JLmLWEVMvmLgNO/ODp6YDr9svl/UUdVA4L39so338PZEDPc6rrX9/LAxnijLnTxrpzrvlOjoDCuv/jQOVePny84tGIHVGeWfs1ew1NtNNvwtYmcjycnEfiGdYFWxjq6R1QV9RmkRXR7WkxkpGCZX+sxzW4QQccEIUBLxlw6RBT+4qBqXugNjuJG/V8K26ZIKffA4MOQCByhNUFYj0tkf/J1V9EkPDjxFsnAxJodYOaTAvH7Cf3up8eXPMSykQmyEYfLuZ5YhePNdaDV+B3YW5j7E6LPObi6UcGSPSaoDtuwmMJ+yFa4k0D/2IC8WhIJpgzcWqDS0jChy4luan3HE+PGZ1+ShzewR0g4WPudUjE9xArPycOdtIAgMyERDSDZeg3Qo84+FkDgDIT1HwsFWfv5B1wcmK/E7Gmde/JhV9kgE3xXzkRIcygW8r1zIvATigjyi0V1r6/l7NmHlx0YSoAAAAASUVORK5CYII=")
    elif teamID == 26:  #LAK
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAABnElEQVRYCd2X207EMAxEW8QXguANPg7eQPCLJRN6Ite5Nai7XREpm8Z2ZiaOe9l5mqYl9NPavZjfPr5OEfD6/DhFAWJ/eXq4qoj3z+/IlwRohvHSSuxmNwJErLRcsvnjzgSIfFl+63Ke511aiO8Fl/CKAnpANX+JQLEtgXc1sGvZD81Aa6e1Df2vDPylBppH0EtpjbCW7pL9No9gdGe9+JY/OwL/pCql7UjbRoB9Rh9J0sLaCDjjZXR7RTjyNuQ2bRWZT7+vsc0R+ODaHGKOjPmIELCHjwAyyAXENT7A94yZAJ8iCyICkanbO0bX2FsiStgbAYCWAq0QCLF5QdjtCCYc+PTJEz9/fIBA1WxRkoHoqPyIwNbCHlxBSUTsYcGiTtM1Po29ZmM9jscKsVlLZAoGoLAwxQWE4rVdW1ifEXtDAu0ApTiEKN6uwb6Onqc7jwQAKv0QOOBk54gUZ2KqRHu+uwWU/r5RxRQpyN5uirfJ0XQCHsYoQvOws2iGME7CD4IMsVxd/G4ABOuYCcE/Ssy6UQGsS0IwrOMw3g98+1Dm1kN41wAAAABJRU5ErkJggg==")
    elif teamID == 30:  #MIN
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAYCAYAAACbU/80AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAGAAAAAA915G0AAABrUlEQVRIDa2UPU4DQQxGkyjiCFyAEikVkTgABYegpURwAEoOAKKk5RAUHAApVJEouQBHoAF9i97KY+zZnWymiD0e2++bn818tuP43Dz/RKVH64t5FM9iy2yhFhf89PY+TNFai4gmtSJa+MfleyHi+Omkm7/d3RRxJpGw0QLskWv3Hg4EEcyxkSgJGrwCwNGRZzCg1tp6KyY9AQ9+2H7bfrOzx20xZ/J6tcIt7PXqoJtbuAL/BGRgGtD162WDOzs8X/e+dbxordk+ElMI8HCaWRgxQf07yHZPjSwCBNcbKAQoQSK4Lwu2u7Q74yp2gYtXCPBwC1WyhoX/Req/2jE18tk5VZ2A7OhJogFzaz1Aa+Rz3OR7uOJLu2sSsTTSHBBNtYZPfs1GcOWH/wMWXGs6di2DpwJo3LJDarytwZW70KegJDsEjuBRzNZ5n766Zt6Zz+m/guwt0MQW8pnaWM2vnUL/BnQSmQiat4JVV4NrvRegCSLk72MMwcXoryACDp1IVENsDFy5Cwr2acfCRwlQs5bRAlff6hUAzj4h1nmcrXDqJ1sJHBI5GVJrMAX+C1im31SVGBzzAAAAAElFTkSuQmCC")
    elif teamID == 8:  #MTL
        return ("iVBORw0KGgoAAAANSUhEUgAAACAAAAAYCAYAAACbU/80AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAGAAAAAA915G0AAABvUlEQVRIDb2W3VHDMBCEbQ9NkBeGFEAtlAEVQRmphQJgeAllmKyGT7OWT7IIY/QQSfezu7qTY4/DFeP2/mmupX19vI41X2TvDnbS8/vLCmu8DI/pFdIU4IBOerp7WAl4/HzLtsPxOa9Z1ATdEFDOIt8i9RwXdTYxxByOQ2pbKSSsAOQOCtC1sypEZVzEVALuQS4OHcYrCu+iBXuRQ5ZEpEoMM1XIAlrkfsEA65l7WphaIHIUlcCQq3/0UDHsIxsY5LL3WZzaTyzmy3DFSgZAJFH/ajbEiQAM1i5YttQCATm5HBoER0TuT8H2Q3zO/3ks2Xu18x2w/IVqwNyvdc3ucYoRKcTyObn2q8dQxv8cYQUQwAmi0/qpev3KKS98roBfFr8PiECUzzVixMlPjDBZO8aknpDgjh4RUZ4wnFh7sBDBkydfehfIgDqC5WR4dbBtzREOOcKTeB0+v4y2RJD81xly4SwEyLCnCKpI23gccwUkQMNFaN8qpfxbo0ZM3kqAHBKhmXuh9W+EQKq88sSy+QgFEBAJka8U44TkbhET1/wjok98TpEUf3ItvwPJJac2NytQS6Iy7u8l9BytvwEXAwvnwGYXKgAAAABJRU5ErkJggg==")
    elif teamID == 18:  #NSH
        return "iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEqADAAQAAAABAAAAEgAAAACaqbJVAAABJ0lEQVQ4EY2UyxHCMAxEk0zogs+NQuAClVATlYQLjXBjoAsOwavkBVk4DJoBWZ9dr2VDXf1hfbfsfVt9fNY+1rqNCWIPXpy2pM33XWXEnvCLCIIIhul1v1aLzb56nW+kzJtEwMp4AoEsl4AySCxQnMhQ1YrEg2mS187RjPyyyjZUz9fRAEbptlkiiCYhUtXoS6AI9IComBhvZACYE0WIidXHjKgpp7ri6WhSBhmNkMSh5/lhjhOR2L3RrFxp6DHfeHBco0QK+dBDjbis6PBI9f3n4VkMJD3G8X0pwxjKRGDwuvaMbDiuSHiQtJrXsNv1rsemdcrLiM2nnAdnv2JuzRpQMKrxAy8pyYj8Dp7U32CJRLhZIhV1BHlsjkT1n0RelTUX/tDY5A17ALI326eIJgAAAABJRU5ErkJggg=="
    elif teamID == 1:  #NJD
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAAB70lEQVRYCb1WQXLDIAy0O/1AX9F7//+G3PuKPoGyspcuIAGpk2jGAYSk3RXYk217naUMhaeyvVpdW3TFczmt3+7b3ts1TMsuym4fnxue0xQcLlvLvhG6lwDBdDQ8KXziW7s1zgCxKbGpZclkHUsinClVy23fdy2oedP518/39j6JMrQWdJKztA1w2PQIVsBZbAk5B0l87l9sGbtvN8N1D8egJmesbgWG35KiDtTIiD5BWJxrVAIZPlhPDMCFsUegO3eCEZwj/QRs1/RjlLZX4jwC3U1HAYJiDuO6BaX/iJr/tgQqdkhvAbQkwRAzioP66IhaAkvqPRLwkZDuB/MitCOgSnQeFJq6qT4KnH2IllTdobzj0XWgi7jgmKlH6ZDAqP3ySl2gd6SGBLA9au2jSLQEyhcqkrbSVuSuxrmXkO1vVWpH8F4jTn0RacdfhGoHyruJ4jT9gCih/4BTGGtjLEzy/A9VI4L5SHnU/pOAYpY/JAkFVeEIIOA0dHvqkVDdgUeAeuoFvFJPAm7rtRsqLSLJeL0/yBuBk8A9N3nPQC7hAbDxwI9n1RF4AdnHtgHYwFswzRPFcDNXQ6r5CgEqZrHUgFQFZcF4cflTU5bPlgp19DOOTmiczqMc10+WKECjj+unjvolBNBLwZ+qbLX4L0lJyGE6wCscAAAAAElFTkSuQmCC"
    elif teamID == 3:  #NYR
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAABw0lEQVRYCcWXQVLDMAxFE4a7sGcFJ4HbMNwGTkJX7DlNyS/zMh9bsRUTpl7UsizpP6lpZjpPD2/n6aprAegtQe5dmRzF3NL8/PiOWe3nj6epdV8lLI5eju615sunOhwQueQOfKxap+cffcbFzrj9jL21k6OdGHyc2YkR+02mga3xy792sxQq48qzx6IbAkSJJKhIdmViQ4BSoAQq77fOmbwUgHfSKupxEZRyy5ir/wpSE4i6Ocq3vohaBRmbj//z66WVEt7d371W/u4EXBxbVaJiVfWEIwRAiN0fHvnwHwERAghcIhJ2cfn9a9D5rxAVAMIqTqeyWe7DFsQoSAUgISDonq59JwYI5Y1AhABARCIO5eLYe6exCSAILSAQlo9JYCPOLn92Gl0AFaOwQ8jPWbtDEZ+BSAFEEIgAoTO24lk9iDSACrpoefYJAEJ867lIvYrpphQtz1tT8PzS3jUBT6Y7dUvHTKHcifV87N0TIFE7hR3C7zP28AS8uIPID5Bs7mRH6xAAFUZI4rL9zFfyrwAlhJ8jYXzVM9CiJSmzZ+v8AmBsGQHFILI3z+uvABTzy56N8Ehur3bufvlPqb9bueA46hsW3NDqP4+99QAAAABJRU5ErkJggg=="
    elif teamID == 9:  #OTT
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACHElEQVRYCe1US07DMBRMoBLX4ACwYonEmXqUcqUiluw4ANdggULm1eOOn5+dtEVsIFJrv+/MGzsZhr/+jD8kwNTp08XYdAqXQgXofndX5T9t3yufd5xLwMA96PXuxvp/bT89TtPuytOomhSYoMwleJp+sf+pCmRwD0wCWNdIz/xTCOQz74GzcVpzTbIrRSqHa6CmTb8EziPQQuxFlQKzMHyR2Kukf/x4k5LDVu9LROKqqug4etNH4GgFUAILmXw0uAPZEGxVJopL6jAouIAUOTBABPFEyPpuooI5oQCNcth9LTjzsbIfiGzICoHELCfAxyeS/xxwxUNvuwMeGLb+SKK1cqJWvOfHHcB5TxGJXmEvFvWapvlUt3q1Dh34FiBiUS2+ZDLWoh/Ax3G01RMngcKPIiVSBFcarGe6KUBD1upTTOaSY1t84fxFfL19sFcQYFpHMEwNf2t6NPYKjMoce/48IdoggUfrXp7vzQci6jen+/MEEM4kdCo0an3nl0hY01kNKOGf2nPMyN//o2uojkFj+l2An0cBRagEh0r2WN0BaQgl8heRhdFdkJpi6ydmD02KjkDjppAvjI7CT69N/J5qwN9TwNdlGREAKX0rlCQB1MdmjM22Dde7A6yxY4iaIYEkIlXYgKsHh38NAeTluwCDD1XogQsoywrMtUdQFKVORorgARABsUb1Fm8GtLqx96pc0qsB8e/+BQW+AaSH7DF3v/PKAAAAAElFTkSuQmCC"
    elif teamID == 4:  #PHI
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAABfklEQVRYCe1WSRLCMAwjwIGfwZP5GVyYEhlkVJOkGSi90M5AHFuWFLcsm816/fsEUh7AsNAQoPV2mYFh+K2HlEbao82elgKI6VlWHvCpgdO6ie0sChMkEMaLRjIcJmzsixhQfzChRhY1wEnAEE34M8CEum3Fz/vZgnTV3MAchKVDlHiRI9YNdNltgECYidPluPXP9OF8M6GSCVLN8gyUxCFwPe1Mh6elqK5fGyC5nlwFaEJzGvstIJEWY9waZcT27s3Ap8Q0jX7EpdPiOWhddgtI1ALWamo+inGvmMjjtyAWpvYwrcSM9TDMtbg+NlAj7RHVXjegzhXAWImnsOyprTo9N6ACtUbktVnjVg9rNC5a6avvARCRlCKlFRjiVBxYn0CpMeZAEggGNSE1FySH1nLO/5AgsO/uQM4+X8MJnID9ABKDOAgihUv7Ronc+/gNqTQaudTeiDKb/wgZ8+OthJPyy5E308gIlTcT4hHevY8O3UiFIeIrsDW9TqB/AndXUpDGQKFTggAAAABJRU5ErkJggg=="
    elif teamID == 5:  #PIT
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACVklEQVRYCbWWAY4TMRAECXdPgEfBg+FR8ATQ4fJtOW3HTrw5MVJkz0xPd9u7iXL5dCfeSqzalxL0Zhh7q9msv2aSe4kPnWwh2uWJoRez1WQHHpIpIAgG+DXVRIpfu/VmWnrvRpYGJEbIfWM8sdGoI6OZi6cV4PoRUTnGNc1opL4D/0NsFCdXJ410L+GfH1/q3Ov337P5VpNAQhvOkycH+L8/v3Y1Zz6zkZA9gxKx+qFHJJZ95in6ju7x4zx5+y5zGoUdzhXyFMse+7wNeF6+/WqQ7MFR8vbyNwOSzEx4snsGnFcVLNdu5AHSQH0EWXDgmVWDM3H5Rq1qwCarp83a7p6bRZzVkE9z1l07A4IcErSzKi42OeSlV/YtyK9Wj2YtTl5ICcs0kBae1rpGrB9AdLpB8AVz6W6AgswKms9W4QdZvXqNuJa5xjnj6AwIcDhN+O1A1A94xd3LsVrByw/mxkAhr44TJJkmzBOTe/oHDVuuvl6/GDQImjcGKNpkn7dAngHHwdNuJWtgEfVDntzkyyhDNQqgnqCc3pPcrPRm/eBY6kxvAPTM6fgIwI21InrqxNWATscVAQgJH4U5tVGcmsEBCPPV6gv3toFtZvI3XmINkmtyx0D3f4DBlRFJR/EU1gwc4q2t1uU7kAOSjeKJeXZ/6hEgsnru3oRmwe48gmaAgUfh4xlNIH5WWC3/lD58W4sAsXxHINw5scKuW+/ASO51Ux9PL/Huum1AQm5hFs+cHp6HVz+K1efA4PEbo6FnDZy+gZnQrDYaX+XdD9EKNKt/9ORy/gPTnJHiQ42PaQAAAABJRU5ErkJggg=="
    elif teamID == 28:  #SJS
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACX0lEQVRYCa2UUY7bMAxE7UWu0L1lP/qxp1ig/egt9wwFWj5Zo4wpyVGCCnAsUsOZoSxl2xbG3xgBK0+dL1StQd7WYHfUvu8bJhj37OuzZQOuh4n/NZaZ1LHEk6Flnmx8eQdC+CRCmFKZeyleNnDFpt25wszWTl3NQMpLKHeuzxH5jk814uDtuFYwAqrIC8ANdLgZgndvx4NzvtMnAJgf2BDV6NhTItcTM75+JGANb54Oke5gicBxo7njRmLvv0ZV29YMBMFOl2NYzX7/OCa/P4cwCb//qbiK+rodeNGjg15HwgIjFl5+Dob7b5jquO6rYSS7YHFkLuNmcZSfljIX6547HUJVZhLlV95O7vNcq8/VzoAAUfT4LAisM0Fs5wLhqyYkTln3CUgygmDtU7gJCs0IoQ9MYQ4DuhU3hBzkcxV47uHcDV2YgQf+cgZwNXseCl6JuJkgUvfOOTyEDliaP2ECPrZfG18MKFgSc5B3uGDCDx80sSP7Gz8EmNBD/NSQkSsTldC7J6UzgI8ySMrIsztTOsTExIiLI4bW9BpWI6cbUmtYmg6/Ypt2RugwRlMSJ939EQnL24FRWMyMdsWN6X47z9X8cgcolDBzhPJBIu/j289j05op34W6A+DV3NI1hIyH7iXgoszp3NfaTqXz0IxlglFM94xYOz2xC8dC/SXOGAeM1kZ6p5wIVJxjmXDxjFFtfoM7iY2CCuo6c7IsDo9MPHpLc3gLqnjBxFzYdg5I+LcEE/Fxr32hVc4nw1uAAeMRpjiRIVsvhzNi4eZqg5XhDiRc2wJ1isEYCfZa+A9iYOTkztiBKAAAAABJRU5ErkJggg=="
    elif teamID == 55:  #SEA
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACeUlEQVRYCZ2WPZbTMBSFE06mpoOWknYqKtbAMqCjYRk0dLCMWcNUVLSUtNBRTwH+bN/n6yfJUvLOcSy9v/tJcpycT7fai9f/dqV/fp5388HJeFEWrAncANEHMOEPn78UsvdvXp3ev323918B0gboCKOIuFsBQrADUwdYxbViCf34/uv09dPHWTPHHIRxFYZAAioBTFzCNJOgAOiF4Vfe4tk+mxBbymkPkMTVQOIIyWc9Ag5fC8bzvcclAklcfheXj/vvv3fz9OXzp92xcExuDpRjHMezOdnEvdjHRfEaFAjTfDz4qNNVy9l2gOiAfXt8mI+Blbu4SmsQisXdHsRlByJSDmoNgcCA4BoyRHVZwfIQpiPwc9MDo2eB2lo8etrqwncwqAKQ3xJpgVAjWMazDcA0AWjQgiB2BEI8YDoQ23sgHQNNMIdgHo2ZrHYEE/kNkAKAnt5QIj0QrznMTSAbgJTWndDUG+PLzfHFKqfxUX7kGUQJQMcEgeuoMXEsBKax5zt05KwQdYC53fQxAEKqCzAPkWksEM+J+ARxDEA3NwNSYw+7CH4JKVdx+XkxXQdAV4NgiklgmW07EkKWA0T4J4D6qxiR1iUVu9de14T1yrbUYrj/MbLV9YpjFWtLQbAb/PppuwvF5Nh+jldxhHvi9BjNk54ANdf94mcqegXzvbYqQPJu5Dqf59yzA3gi4/xwKZ5B1FT5HldMtfN9fQcwvuR/qZE4HYlvm5oT178jF4o6G/TESe1/De3BVG+HAUJAxJlXhQnayplifYAlb/lMMBlEqQVARVi51wFQVYHwo9iJHwjfDlCBULPdfUCc/Ot3wFV8NwYFvZzxf5xYIRsfnppcAAAAAElFTkSuQmCC"
    elif teamID == 19:  #STL
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAABo0lEQVRYCe2WsXHDMAxF5ZwKt1kgI2QIT+M+VSZI5d7TeIiMkClS6M7JV+7BEAWeRJF3Lhw2oEDw/w+ApN11/+POFdj1L4drqmH4uoT+NK7F90j0ff40rP3x1eaa+LXJQoMPcfXg9O9v3fBxGgm14KugtZZDPIwnJrKeKGqNj906h9ySVKb74+E6nE8mIFd2Nm8lZ59v805OshWxrwIbWlolQfbCHVugKrQkyWFFFbQz8NeK38PnDkgOqMbvsxfOJPOlVtSKo/e+4hMBUrQkQjElg56zx5PLZ++AD0AEvi02rVZKDOasAlpAQOmt8KSUG6IiAYjgPeBqegKAvV1L6veEFUAAgVEl0t4SK5vL1scwn50BFgChHeYPrimxxJTYmYCUUGBjaZ9vsGmpbyvls0kLRE7fl6AQUZO9OEwA5By4JQH+DNSIGAWUkiOuhQj7LQC0xKpaa1uWw60SkAMt8VcJWHqY1gipEiACbsMasijG3gEB+b9lUTC+NPPqWyBgHqDo2YVYFnKfeRMBAvci9B2NVsRg20OEAxF8R7Ym4wjvsX0/ptrJoSfKbl4AAAAASUVORK5CYII="
    elif teamID == 14:  #TBL
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAABnklEQVRYCeWXWXbDIAxF7Z4sptlZu6J0Z+1uUuTyQCOWE9yf+AfQdJ+AYyfr8p/P+8dd4H6+1lUYzlo4YKDOEaCBoNFYuuZLseCO3fkIEiUrOIXlBTjA+/dtQ63XzwjZ7Q6cnJceEcwYGMAg0jVTziaQ6jgiYgFJ8Kh7Ixg1mRD/CGqgKaB6PAIXsUMBE+BK57ZsRwFnFfGG9TaeCBccWlSWFFDsz2y7hlAtXo/PEdsvYVUEhx7FGWqns/ZgJqww/y5hYuuzAjJgXqsdwSiRJ1BcFBvZTefMcMFlYDYz1YW5IATrGNj3xn4H9iKLfyYYuHYEMBwZH+laN5HeAZ1IQrXtEUG7AjQk2qEM3NQqb8OhAJPg0DNgJ62ZwjswG27qud+CqssEN719cqRzU898DQdvQpNcNMyCUzviCDRMrykhC6dcL59q8Kf/IGEfI4Lo5CyYiuvcBmRbD1sXQBYmAgE0juAhjBdwwHBLAWRlIjg4BUJVPg7gFCbfAwyOGmeBUV8KgLWqXq+L/C8H/2jc6ThOpe6dHYgTZnpeF74sv0V0uU3khkadAAAAAElFTkSuQmCC"
    elif teamID == 10:  #TOR
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAABTUlEQVRYCe1TAQ7CIAxkiw/Rd+nz9F36k5nO3VZKC5S5EBNJFmhHr3dtCWHPOl+nQN+ONTTFWklfDzeeO6Co2EnCR8BSLsvoIFEmUJtUkoBdIDPiXq+9XAFi1lqFgnqC/pEKtFShQr1dASp5a9kJVa4MXjwDVlJSY/2TyWDnYlh1/MBI8KW9+xB2J3CyKjk978mv4XIL8FtnCpL/EiDmGAMbCOafQcgmsJqFe9hrYih39xZsz9D7zKokZi4tlTdngIei7+Tj/ZU2/qENiIPNMXH+tOBA9WbyJWf1DEignA3lpJKfoZrv2wyQ98BK8KT85cUEcEshQkqgGqrIxplCNRuQ8648eb0FysUIaEkmfdwG2dVnYOoE1qj4wNXys0wm7RgltqpbEIc1WkoVUgJK/xvT6WGCREpAD0u9kqgATgN0j2sGdIh93j+B7hV4AxxbeodQMrgrAAAAAElFTkSuQmCC"
    elif teamID == 23:  #VAN
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAABZUlEQVRYCe1XwW3DMAyMjQzSTJJBkk367ibtIJkk2cTxuT37RIiWYsl2HjUQUCEp3ulIG1Bz8J6PS+eFFvkfP01sX+isDRpDhE/ITAQEvLt/e1uL/M3pOu3/I/FLYANwIlsSRwZg9eTN11lDxevu8zbUAIaSaFl5TXBg6IEUqz2I/DaR5GpZJTHU7LFHBdYG5yEsiWAGmATLnqmvZG2BWStQgM4t7e4E3BZQBX1ldHoZL7Xvr4CeEGosVcEb6mQLlADWJSS0naybbEHsxLFCLGgtcvmzMfxPEkCSR8IjQkAvrvWyW4BNsYIxH0jro4DqxzqbAJJZKAXKPOxJPS8RYDGrRg6gfor1jVhEAERyQEl4zmYN4VyB0tg/gd0VCIYQ08lppS3tsd2vbwBirV4SbPLq//u7wagAPy7dfVKhNoFBYb2c9AC734yiQ0g1airg1ZwUAJq5I9QkENSKXk41Yy0iAky4J2YFdT7xOyEDAAAAAElFTkSuQmCC"
    elif teamID == 54:  #VGK
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAAB40lEQVRYCbWV0U0EMQxEd9EVQR8UgMQvFICgAagCUQU0AKIA+EWiAPqgiyWzygQryTjZzZEf5xzb8+Ike9M0MN6fbpaz84tloMR0sjcZ4swdgTjYQiy4x+6tc6DY1f0rp4UNxQtf7nh4+1ldj9enaamnZvMIesSTYpgAhDA9uR7AvCzpmK3GOqdIsRAdXG9BSIAgvnw836r6Xf4eCAUwdyl0BLUgqgDH2H0H2xpSBehNPkZceoa1YmyfXbPPzPrzeW+cC/D99TnZWwygGhTFa6L4FtgajKV1ARBkPyaqUC5scyikrAsAQVuMc3wf8ifKtVxIQTNOXkKv1UyGzXdv1zj3akkAJv+3dQFA3mqhB4hcb/fIlQBea+cwLu9ekrY6/xTgTCQAc0QX9L9UTOzZPULdV4AuqBaGJpBxyDY7gOqiC1J4y71pAnh3QRJEaG+da1UAp73NvtfOHptQF7UKADokMIldCMWbl487o8X/CevQZ+26Ixb2Au25qjjG4M5AWA3GhTp/V5kQSFICWDPJ+JmG8qeAMGEMfBCHLc6UIB4EErcOilOY+QUAFgiB+SgIhWOtQq9wIJBjBKQlTA0XgEEWBD7VFSsa45r1mwGEoLUwBLHC+RkzT9nNACxkQeDbKsw6v/nH0yqi5m3IAAAAAElFTkSuQmCC"
    elif teamID == 15:  #WSH
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAAB8UlEQVRYCcWWsU7DQBBEkyi0VNTwI1Tw3VDxI6GmogUJNEbvNDdZX5woIZbMrndnZ+bO54jV6srXenv/9CMP3++v6//0gu4GUQo8XzK61mTg7fPjknolN5pb7+LsUq8DftdsrwBHalZAHzolh1M6rjUZeLy9mzi9wcApYjlTcaG5ye0+t4lKHIPSbp+hiojjDqBiGvVelVfCFX/3FVTCkFeE9DKOsGhgpjyEScizEyvnpq/oGK8jqJrn3SFkwAHUqvi1e1nproxUeFavHnl3CCWsBs2KJFd48/A8mRA2e9W8L07nqr2CBDswey6kHZCJ0QUX0RfYDFAEJELPU0DCS64Rh+YnA/mJaagylIKsfM4M4nApkqPZdkDkNJUfa0IzfqU4Peo8dwZcFACmcpB+FcH6LHni2z8hOlg56OBR7xiceGRm+AoQc+K5FThGuXCJFR934tsOqOG7ADDJqC+NuRjxsXpxdGdAhRSccy7soasSz5nOAM7SRA7xLDwz1BQx7Tzkie8MaBgAA6rpytX8Vff/gtO850LC7VN7BhyICSKETlDlS8U12x3CJPPf/OzpmRVVOJnFOLiKo9wBgKNBMHNxibhmhzsAebXCNLcEA5/H4Q4ATDHqo3jKzIhv6mmV1UoZPNQH53HRDvjAufOrG/gFmFcsY0U3t40AAAAASUVORK5CYII="
    elif teamID == 52:  #WPG
        return "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAIKADAAQAAAABAAAAIAAAAACshmLzAAACeklEQVRYCa2Wv0pdQRDGj5f4ACFFIAh2dgn4BAbsU0TQIo3gA2gsUoillYV/HiKFgo29hY1CGsHSzhACqfIAKRK+xd9h7tzZ2XMwCzKzOzPf9+3sXvfMdSPH0cnJ36xkd2dnLov72KBkT/rl6NLjlPnh7oep9SFiUgGWOCL983hVCOcXV6eINbFiMiGhgBYxbJkAclpCZgRAHu0YUOwQAeQixHdjQoLsGHJbN8RnQ3BQ8wIHSyJza9kxa8enp93tzbfOr0d3QjXCphNg9B3wykiQFYEnsXHvt/ItVxHAQrZ7SPaXV3BnbBYjGQ44+w6Q4G2084vX7zr9Mfyc9aiWGHaCEpQRkI0ADu6uu7s3L21a8bWmmB8RBlzirnYgKrS7/r631XOdvX/b+9ExRFgUFAEoYtFaAVpi69s8+ZZceXbuc+EMOxApzogt+PLP30WwP6YIU3WhAAuoc7XtVuzV5kebUvyHpYV+TeSaR3eiT3pyUgHaNTtHBNYDaS5Su3MdQXYMqkkFrP26nwLMyAWmIRG2G60upAIE2AJQTjTOz74Oqm0KEPjn7e3yFxE9d23mMRKgHpPo1kqI7oTO2V/EpYcfRUutY7UHqnTAv1C1XelCiVw/tdpoXTrq4Aw7QJK37E7PsB+6eDr3sWPiv1AAqLUsIqdmfeMT7pStYYm7fJKNfZBA5z7QGdatjchpvwSUO0AXCLQAbDzzW+Sq7X+GiIgABRSBRblaa+Vbrl4AYFEXiHlg/ae07fdx6rAR9rM+ywEeYiG3u1fdjAAtZpdS8bGjRi6cUIAC/0tERp4KsCLkM/iSYe4thHbdt93Gqh2wSfh0hXnNZoS+5h/N+xo/e4UpBgAAAABJRU5ErkJggg=="
    else:
        return ""

def getTeamAbbFromID(teamID):
    if teamID == 2:  #NYI
        return ("NYI")
    elif teamID == 24:  #ANA
        return ("ANA")
    elif teamID == 53:  #ARI
        return ("ARI")
    elif teamID == 6:  #BOS
        return ("BOS")
    elif teamID == 7:  #BUF
        return ("BUF")
    elif teamID == 20:  #CGY
        return ("CGY")
    elif teamID == 12:  #CAR
        return ("CAR")
    elif teamID == 16:  #CHI
        return ("CHI")
    elif teamID == 21:  #COL
        return ("COL")
    elif teamID == 29:  #CBJ
        return ("CBJ")
    elif teamID == 25:  #DAL
        return ("DAL")
    elif teamID == 17:  #DET
        return ("DET")
    elif teamID == 22:  #EDM
        return ("EDM")
    elif teamID == 13:  #FLA
        return ("FLA")
    elif teamID == 26:  #LAK
        return ("LAK")
    elif teamID == 30:  #MIN
        return ("MIN")
    elif teamID == 8:  #MTL
        return ("MTL")
    elif teamID == 18:  #NSH
        return "NSH"
    elif teamID == 1:  #NJD
        return "NJD"
    elif teamID == 3:  #NYR
        return "NYR"
    elif teamID == 9:  #OTT
        return "OTT"
    elif teamID == 4:  #PHI
        return "PHI"
    elif teamID == 5:  #PIT
        return "PIT"
    elif teamID == 28:  #SJS
        return "SJS"
    elif teamID == 55:  #SEA
        return "SEA"
    elif teamID == 19:  #STL
        return "STL"
    elif teamID == 14:  #TBL
        return "TBL"
    elif teamID == 10:  #TOR
        return "TOR"
    elif teamID == 23:  #VAN
        return "VAN"
    elif teamID == 54:  #VGK
        return "VGK"
    elif teamID == 15:  #WSH
        return "WSH"
    elif teamID == 52:  #WPG
        return "WPG"
    else:
        return ""

def main(config):
    # Get data out of config
    main_team_id = config.str("main_team") or "24"
    time_zone_str = config.str("time_zone") or "America/New_York"
    #---------------------------------------

    TEAM_NEXT_GAME_JSON = "https://statsapi.web.nhl.com/api/v1/teams/" + str(main_team_id) + "?expand=team.schedule.next"

    nhldata_cached = cache.get("nhl_data/%s" % main_team_id)
    if nhldata_cached != None:
        nhldata = json.decode(nhldata_cached)
    else:
        print("Miss! Calling NHL API.")
        rep = http.get(TEAM_NEXT_GAME_JSON)
        if rep.status_code != 200:
            fail("NHL API request failed with status %d", rep.status_code)
        nhldata = rep.json()

        # TODO: Determine if this cache call can be converted to the new HTTP cache.
        cache.set("nhl_data/%s" % main_team_id, json.encode(nhldata), ttl_seconds = 3600)
    homeTeamID = nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["teams"]["home"]["team"]["id"]
    awayTeamID = nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["teams"]["away"]["team"]["id"]
    homeTeamRecord = str(int(nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["teams"]["home"]["leagueRecord"]["wins"])) + "-" + str(int(nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["teams"]["home"]["leagueRecord"]["losses"])) + "-" + str(int(nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["teams"]["home"]["leagueRecord"]["ot"]))
    awayTeamRecord = str(int(nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["teams"]["away"]["leagueRecord"]["wins"])) + "-" + str(int(nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["teams"]["away"]["leagueRecord"]["losses"])) + "-" + str(int(nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["teams"]["away"]["leagueRecord"]["ot"]))
    homeTeamIcon = base64.decode(getTeamIconFromID(homeTeamID))
    awayTeamIcon = base64.decode(getTeamIconFromID(awayTeamID))
    homeTeamAbb = getTeamAbbFromID(homeTeamID)
    awayTeamAbb = getTeamAbbFromID(awayTeamID)

    gameDate = nhldata["teams"][0]["nextGameSchedule"]["dates"][0]["games"][0]["gameDate"]
    displayDate = ""

    date_key = humanize.time_format("yyyy-MM-dd", time.parse_time(gameDate).in_location(time_zone_str))
    time_key = humanize.time_format("KK:mm aa", time.parse_time(gameDate).in_location(time_zone_str))

    todaysDate = time.now()
    todaysDateFormatted = humanize.time_format("yyyy-MM-dd", todaysDate)

    if date_key == todaysDateFormatted:
        displayDate = "Today"
    else:
        displayDate = humanize.time_format("EEE, MMM d", time.parse_time(gameDate).in_location(time_zone_str))

    return render.Root(
        delay = 2000,
        child = render.Box(
            child = render.Animation(
                children = [
                    render.Box(
                        child = render.Column(
                            expanded = True,
                            #main_align="space_between",
                            cross_align = "center",
                            children = [
                                render.Row(
                                    expanded = True,
                                    main_align = "center",
                                    cross_align = "center",
                                    children = [
                                        render.Text(displayDate, font = "tom-thumb"),
                                    ],
                                ),
                                render.Row(
                                    expanded = True,
                                    main_align = "space_between",
                                    cross_align = "center",
                                    children = [
                                        render.Padding(
                                            pad = (5, 0, 0, 0),
                                            child = render.Image(awayTeamIcon, width = 18, height = 18),
                                        ),
                                        render.Padding(
                                            pad = (0, 0, 5, 0),
                                            child = render.Image(homeTeamIcon, width = 18, height = 18),
                                        ),
                                    ],
                                ),
                                render.Row(
                                    expanded = True,
                                    main_align = "space_evenly",
                                    cross_align = "center",
                                    children = [
                                        render.Text(awayTeamAbb, font = "tom-thumb"),
                                        render.Text("@"),
                                        render.Text(homeTeamAbb, font = "tom-thumb"),
                                    ],
                                ),
                            ],
                        ),
                    ),
                    render.Box(
                        child = render.Column(
                            expanded = True,
                            #main_align="space_between",
                            cross_align = "center",
                            children = [
                                render.Row(
                                    expanded = True,
                                    main_align = "center",
                                    cross_align = "center",
                                    children = [
                                        render.Text(time_key, font = "tom-thumb"),
                                    ],
                                ),
                                render.Row(
                                    expanded = True,
                                    main_align = "space_between",
                                    cross_align = "center",
                                    children = [
                                        render.Padding(
                                            pad = (5, 0, 0, 0),
                                            child = render.Image(awayTeamIcon, width = 18, height = 18),
                                        ),
                                        render.Padding(
                                            pad = (0, 0, 5, 0),
                                            child = render.Image(homeTeamIcon, width = 18, height = 18),
                                        ),
                                    ],
                                ),
                                render.Row(
                                    expanded = True,
                                    main_align = "space_between",
                                    cross_align = "center",
                                    children = [
                                        render.Text(awayTeamRecord, font = "tom-thumb"),
                                        render.Text("", font = "tom-thumb"),
                                        render.Text("", font = "tom-thumb"),
                                    ],
                                ),
                            ],
                        ),
                    ),
                    render.Box(
                        child = render.Column(
                            expanded = True,
                            #main_align="space_between",
                            cross_align = "center",
                            children = [
                                render.Row(
                                    expanded = True,
                                    main_align = "center",
                                    cross_align = "center",
                                    children = [
                                        render.Text(time_key, font = "tom-thumb"),
                                    ],
                                ),
                                render.Row(
                                    expanded = True,
                                    main_align = "space_between",
                                    cross_align = "center",
                                    children = [
                                        render.Padding(
                                            pad = (5, 0, 0, 0),
                                            child = render.Image(awayTeamIcon, width = 18, height = 18),
                                        ),
                                        render.Padding(
                                            pad = (0, 0, 5, 0),
                                            child = render.Image(homeTeamIcon, width = 18, height = 18),
                                        ),
                                    ],
                                ),
                                render.Row(
                                    expanded = True,
                                    main_align = "space_between",
                                    cross_align = "center",
                                    children = [
                                        render.Text("", font = "tom-thumb"),
                                        render.Text("", font = "tom-thumb"),
                                        render.Text(homeTeamRecord, font = "tom-thumb"),
                                    ],
                                ),
                            ],
                        ),
                    ),
                ],
            ),
        ),
    )

TEAM_LIST = [
    schema.Option(display = "Anaheim Ducks", value = "24"),
    schema.Option(display = "Arizona Coyotes", value = "53"),
    schema.Option(display = "Boston Bruins", value = "6"),
    schema.Option(display = "Buffalo Sabres", value = "7"),
    schema.Option(display = "Calgary Flames", value = "20"),
    schema.Option(display = "Carolina Hurricanes", value = "12"),
    schema.Option(display = "Chicago Blackhawks", value = "16"),
    schema.Option(display = "Colorado Avalanche", value = "21"),
    schema.Option(display = "Columbus Blue Jackets", value = "29"),
    schema.Option(display = "Dallas Stars", value = "25"),
    schema.Option(display = "Detroit Red Wings", value = "17"),
    schema.Option(display = "Edmonton Oilers", value = "22"),
    schema.Option(display = "Florida Panthers", value = "13"),
    schema.Option(display = "Los Angeles Kings", value = "26"),
    schema.Option(display = "Minnesota Wild", value = "30"),
    schema.Option(display = "Montreal Canadiens", value = "8"),
    schema.Option(display = "Nashville Predators", value = "18"),
    schema.Option(display = "New Jersey Devils", value = "1"),
    schema.Option(display = "New York Islanders", value = "2"),
    schema.Option(display = "New York Rangers", value = "3"),
    schema.Option(display = "Ottawa Senators", value = "9"),
    schema.Option(display = "Philadelphia Flyers", value = "4"),
    schema.Option(display = "Pittsburgh Penguins", value = "5"),
    schema.Option(display = "San Jose Sharks", value = "28"),
    schema.Option(display = "Seattle Kraken", value = "55"),
    schema.Option(display = "St. Louis Blues", value = "19"),
    schema.Option(display = "Tampa Bay Lightning", value = "14"),
    schema.Option(display = "Toronto Maple Leafs", value = "10"),
    schema.Option(display = "Vancouver Canucks", value = "23"),
    schema.Option(display = "Vegas Golden Knights", value = "54"),
    schema.Option(display = "Washington Capitals", value = "15"),
    schema.Option(display = "Winnipeg Jets", value = "52"),
]

TIME_ZONES = [
    schema.Option(display = "Eastern", value = "America/New_York"),
    schema.Option(display = "Central", value = "America/Chicago"),
    schema.Option(display = "Mountain", value = "America/Denver"),
    schema.Option(display = "Pacific", value = "America/Los_Angeles"),
]

def get_schema():
    return schema.Schema(
        version = "1",
        fields = [
            schema.Dropdown(
                id = "main_team",
                name = "Team",
                desc = "Pick a team to follow",
                icon = "hockeyPuck",
                default = TEAM_LIST[0].value,
                options = TEAM_LIST,
            ),
            schema.Dropdown(
                id = "time_zone",
                name = "Time Zone",
                desc = "Pick a time zone.",
                icon = "earthAmericas",
                default = TIME_ZONES[0].value,
                options = TIME_ZONES,
            ),
        ],
    )
