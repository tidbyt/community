"""
Applet: Nixel Clock
Summary: Pixel Nixie Clock
Description: It's a Nixie Clock made from Pixels!
Author: Olly Stedall @saltedlolly
Thanks: Joey Hoer, whose "Big Number Clock" code this is based on.
Notes: Numbers are 15 pixels wide. Seperator is 4 pixels wide. This is the widest you can effectively make a digital clock to fill all 64 pixels while maintaining numbers of equal width with space for a seperator.
"""

print(" ---------------------------------- NIXEL CLOCK ----------------------------------------")

load("render.star", "render")
load("schema.star", "schema")
load("time.star", "time")
load("encoding/base64.star", "base64")
load("encoding/json.star", "json")

DEFAULT_TIMEZONE = "Europe/London"
DEFAULT_IS_24_HOUR_FORMAT = False
DEFAULT_HAS_LEADING_ZERO = True
DEFAULT_HAS_FLASHING_SEPERATOR = False
DEFAULT_CLOCK_STYLE = "round_brighter"

# Constants
NUMBER_IMGS_ROUND_BRIGHTER = [
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACj0lEQVQokVWTO2iddQDFf//H98h9N7e5ITVeIkmKLUmK0UFQRBwVxLGTi9RFKIiLHTp3cXQQBGeHYgWLSEFwUAQHl5bS1lIqaNI0bXOf33189/8dB41tfsOZzuEs5xhAPENqDTVvaduEg3HGnwZi55jOAjOOYg7D1hiakacfzTEbD1mZS2k+v8r44Am3BjllMyWMe/Ty8H+bB7AYFqsxo15g3k+4sBrR3Mvolh3tlQUmDLm067l+J6JlHrM3DU+bW9UEkxVUU/j6dMLpYsTs7BKsO3Rln9GNjE6txvkbjmu9iFJ4TDYLEDmrtVpDbZyubpU02US9yysKD19XuHpCxeg13Xq7qvvL6PdXnDaPNRT7VM4gfBKpYVKdrXk9OoWGH5Q16mxr/JHVZAuFmysa/3BSv1XR3TPoi82K4mRe1jnZd2PDssasR44wBXduEX+vT/ZrwX7D0vlsF7/Rp/Uy3O96unGTbZ9TtwF78YTlrcjy1xAeBjDzHmU5hYVhgAfXJ9hpTvpSQm8HftwZ0k4LlgPY25OAx5DF0OtA/qSCqTYIA2hEhudWLfRjurdF4me8afoMckMPh/3078BXWPanM9opjL7ZQe2CY1uWub1A+mELs7TE/s9TmgsJp+qeX3oDdk0BGCtXjhXj9eVxr/Eayr5rK9xZly7Fkra1e6Gpn0B3X63pjcWKwMiYf7eimneqR7FeNE5XjsfKNqzybxfU+X5Djz6e1701pwefvKdzq3WBUeScAJlDqSQJpVBQDwXvVwzvpOLy8klanQEvuC6fx3Wu3TygZCeMihw9u20MlKzFGE88yzljLXHV0514/hiPOKCgbCOG/wWPHOMQi6WIDLVQMFeILobcWgoVSEes/AN+GTO8WTDhkgAAAABJRU5ErkJggg==
""",  # 0
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACaElEQVQokVWTv24cVRyFv/u7987MznjZ9Tq2EwmMQhSEogglipCgACQaiqTIa6ThzxukoeUZkKgiIaVLl7xAKgpAio2wAwmbWNmN17vjmblz7y8FMphTneKc7vsMoJxJ6YQqs6iBsApI7lCFpk80KZ2dIqfFirBdeLz1NLWlMgPOvX+Zqtqiw6HWsJnnOGP+PRtALYadYcXsRBlL4JsLsIbh+fmPuVQdoOT8MBUe7u6xbpWjticpWODuTjXkdRLOact3FzNu9ImrN4Qvbq145/cp9uUJ18YZL5Ly67xj7B1NjIh3ghGPbxu+2hLKVw1/auDdTwcMv/6ErZuOv6dLZj/v8+2g59qoYB4TuQiS5Y6DuODLQtnoEr9p4uKaErwHNlBreW8MT73j1XHLzfWcEosag7wdE5s95IXwIgS2x44sGLrjltTuE3aVwhm2h8Ify455WTGs1qg04q6L8iwI+5qxkSuTBE0GhQGNjiRCWMKg70lGOJwdE7sTRsYgiyS0AsugSAIXhPXeYIaKLT1uQ3GZUovFR7iqNdb2NFjkcUj8QsTIiutdYn4UeLlSTOkBj7c9xcQxnScmPjEqPUcnkYUm5DBBq54nbca0MFwIhr3nSlwq8Axs4MluhC5yZTLi/gwa4wkoFvRuhhCi8DQlPhzDB7kwer0iLRsOH0F9EPjo9mf82Obc2/uLynma2P9DmAEGViii53yp3Nk0XFq0/DS5wudVx85sn++Z8OCwZqAdddeRTvE8pbwUw1bvqUmUPqMuHAMM87pmEQNvkbE0gaT6H9tnTcmNoAaMWlQDAbDWQlJ6/b9VbwDGohaC0uHb4wAAAABJRU5ErkJggg==
""",  # 1
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACjElEQVQokV2Tu28cVRyFv/uaO55dr9f2Im1sb2xHdoQlIAVYoqChQNAE0SFRgOiAliiiQuIPgAqalAhRICo6UiAhUaIUkRVpCQqQbB62Yzmz8Tx2Zu78KIJF4BRfdY5Oc44ChKfUMYbEGGrXYrKGExNhrIamIg/t01bUadhoTd8oUpPQNAWb1rO1MSIrT7h2WNCGmr7MOK4qannSZ59A0YstR1ozMi0fDw3nDzN+m9dsri2hdgo+n1h+vnGbgYHjMCPIP80DH5GKYxA1fLvRsjvUqItr2FVHfTfF//iQ48eLvD8pufpHoOdKjuqAdlZTmpguDV+uwPBeTf6Kw79zBnEzOq8lVJf7dNQBX51puLBgSGvBG4PqxVZmleLtJccH84q/yoyz24ZVCQw01CksfH+OfK/m8Yd3+Lq7wCe3CiLVYneMxVlNIjPGdcB6y/Rey1xHo+IWl0KvF+F04DCDeNhhORbIp9h15ZjXLXui2MCy6RQDI6waIbngCCONyjOKbw552Df8/ugEWxU8o8Hep6YQg0eznSiSoubslrB85XnYSlA/jJm+e4ebtyMKD91ZgW9hTjvsOG/I9IzXa8X2XExxd8bi5XXMKKK4tEd5LWd/opikFWsL4G2XNEwJSmMPBKyFXzO48WfJxZc94dUB+ovr+F9qwqomsvDsUZdSYr4bpzwyjlICAOKtliXn5E2c3Nw1Ivu7IuOX5OCzZZH9F0Umz0nz0Qvy1nBFAEliL4CoU3ivWAmWNxrDpZ2S4/N9rhbneG/9PvrBCZ/+VHAla+hGmrwSWuTfbaNBG8dIFDuNIqFlMVH4XHOdklvA1HqKtiK08t9jnMpqRas0iy2sSeABhgPbokUR/veqvwFrJxmvGzVx2AAAAABJRU5ErkJggg==
""",  # 2
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACgklEQVQokU2TzWucVRTGf+fe+35kPjLJYEyso5EGta2IASuIoIuIIGKFLgR3hS7dKbgU/BMEF65cuejKhbarggiCpepKEEVqS6y0lHSImU4yM+87772PiyTaZ3FW53c4h+c5BoiH1AqO0jtyPItVhULGPyGjairGTXy4FTuGvXMseiPLAmFSMcDorwxY3HvArfmEXSC1YGeWmKTDIeGwGJ0QGFnG2WnNJ1sdXjjhmW6cZGl4iz9/83xxu8Pl7Tv08oymTtTpcGF1Q1Dmcg3KUt+umHTttKR3pPq8NHtVqs5r9/2nteVL4ZwGeRAgy7xJllPkkc/XPKdSTXvD8dRzJUWsmF8YEF7aZPzyZX64W/DBfeN2PWXBO1zpjCZF3iwDy9OGn0awexd2rhwwGjbkzy8TvvqOP7YjS77i3GpGLUfbBVyBsWqJR9Sw23haZUYK4Dx0PjyDK9eJl0YUPjC1xKDboeWNx5VwJPEExo5f4IbBahHJC2iWoLm6jcb30Geb9Bca4tzYm+yRC1ZNuOiMkSA2NY+2HTNBnMGEjNnXE+qPrhMeW6b13jorw8SgmSA17JvHzZO4oYTVczZm4sE+rBHpj+dY7rHroJ0D8vU2bQdDl3OQHH9HESbJgMCPc+O1cc0pDye+PEv5+5DJ93dw756EXgt35VfqtRaX7s2JznM/NYc+FxaEy/RiXupa30ufrkv7b0vakvbfkC72dPDWaV145kmBqZcVOk6mDBS8V+kKvd4t9Y2hm88G/fLxpv56pa2roHP9nnBB/RDkMR1xR4/hoGWeJhmLipzB6FqbriI/+yk3o+i6korqv2j+Dx/JO8M5T9aIRCQCyQU8UB/deax/AT5oKTnBEMfCAAAAAElFTkSuQmCC
""",  # 3
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACf0lEQVQokVWTO4ucZRzFf8//ubzvOzPZmV0ymR012YguQkLYpFBIiBCwEUQt/ATqF1AkkC9gZWetFlb2SR0shCDYbLEJIUFzWTbi3rJze+/P32Ijiac41Tlwit8xgPKKUmsILsNrpK4KnDGYkFG3BZMmvhrF/Fe2IgyMJXcJSVXyZmbpDE4jzQEP8xmzhdLzhqO6Yd62ALhjM2QdT154Rs7z5ajifKWM323QRcbm5BS/LAx37j6h66ElUrTHg3UQrAY70LVeqr+es/rgXNDJNVQfXdL65ro+fqenv71/Rq+dXlWs6MnEKqDirVDFjBWZ8eMYzjiws4oT3wyJax9jx32SbIa7/4Svujnr/R5HZWQpeKRjgKbis5HjwkqkfNoy+jQhfvAWzfwWZnePEGA3MYSDKR8tQSsZURR33gWGRrhIDUVDf1UI321Qb21hq5SYW8oS8IZ8oaz2+vQ6z+nnLbKWpnzSDezPlf0dZfjDOpJXyPUpxitxUGIm4AoolyzPF1PacsbYWuSvWPFQa44OleGNMe7KmOrWn5jLJ+DCWexoCb8MLhhs2eDmU9rWEMXi7s5ytiN87oWTCcRHh7j3xvChhfAGurmLGjioWrSEw56nji3bGnFTNRRO+F0MW9/u8fZPz5iuCFkZ6d60sOHZfwzapOgw5fZOjjPCtG0Q1UgkslkLX/8Dt/9OmN8XDraBB3PinT0Oj2B8dYOfZZl784rUw7xpj/E0QHCOoI7lJPKFhY2QsnPpdV7besp0UfO9WP6YFHStUNYtjepLthHw1mFrS20r1jJLWga6wDNp2C4rOl5oolK9QPNl+YVEBGcsMdY4FSJClIhTQ6Ht/171Lx9pIkpIaNRnAAAAAElFTkSuQmCC
""",  # 4
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACfklEQVQokVWTTWtdVRiFn/fd+5z7lZjbfBKtTWyljVK04EDBIoJjceCgIxGE4sCBYysI/glFUHTYiToVFDqXUqWltolYlaSpaNO0N8n9OOfsvRyUartGa7DWYMGzDBAPqYhOKzoLCVYa2G05fzqkpmaveiSKPzDRnUMtY4HAU2NjpYbeyjILuUs5zFSNs9ArmI7xv7IBihjtVgey8XpR8dFzic7iNN/H47za3mS41+XjDfh2fZPHSlHnzLDJAKhbBuFBL5dd7ZxuSz8fk64sa/TBtPTdnHTrBW2fWdLzRVfgmm0FAbIYTAYseeT8UefUoii+OUnz1Q38wl1G7cggGdV6zaU0xfu3jJ3RAVPRcTeokzgzZyylxOWfKvzqPdrvrKJ5xzcadn+suTIxns4j3pwLNBboILwjZzUE+rni96HxTz9y59xvUDXYJ6/Q+/IwJ04bT07Etoz5rtNS4FnAPTtrBK5XBVeVqHqJre3A7TfW0blLpN0x7c9WOfpMi/YoM97fp5NqnmiBV57ZVkOIRrcduLcrNvfF3b1Mc3HA5K3b5BuJ1tlFlqvMiSQMGOB4TeJyFnUFx3PBuHZmZgpmlTjYd1IfQr9ENcwW8OvEGJK5OBGYmcxdc1bo0/mgC7gGX/elm0eUzpbSL4+rGZ/UnRe7unakrbXCNW1R3eBySQRgxzJfDIx6MdI6P0J/OfW7h0mhA29fI5TH+NAPsVVDEQLDlO8TZkAMzlQqONUX72WwKrP50hqvXf+DrYMJn/d6/PD3AAvGfpNpdH+7HlAeLdJWZjnDTHTK2GG1SGzs1dxEjELDEKNK+p/th59ibpRETDWlwAySO02GsfIjr/oXZDwq6SomrP0AAAAASUVORK5CYII=
""",  # 5
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACfUlEQVQokVWTT6tVVRiHn/dda++zzz735NXr6W4tPdlNOxVIiVQgSQ2iL9CgDxBJsxw6cZIDJw6aGEIT8SsE0USIJkFFaUESohFkngzvPf/PPmvt9TqQUn/j55k9PwGMx5Y7JXPgGqVoEkEgZgpiTOrmcRT5T3aqlE6o8awCbEhi8+AmcRm5NbxHwniqcFhjjEJ8JHuE3OfMG6ic8UmlPEPNTxuvcojEqr3g8r+R6zdvsytzNBjT0OABvFMWTeJwqVzazKn8ku3aeOvITVh3DK8mqm6H83tLfrm/oOccUxrUqRKAva3IxSqnM6/54V7kxQNC/8qAg+8UjIdj/O2/eb/j6ZVdJiGwu8hQw9E0yke9Fr1JzbVp4Nga7D67D1gQPr9LbyNjJxNensx4rxCWXtEUUbGG1zXgF4FfZ8aWefpv5ti7x1iNA/pxyeAkvKHgM6Pak5Nbm0MIapJ4STKuzRN/ENhaa+ic3o+MhugX/xC2wZ3aw5ETOW0nhPGMtWbJSc1RZ55vzeh32rzWcmQnHLZvSjrzPcsvt5lcmBP+jLhT6/TryGacA8bMG5rEuJUiXoTjpWflQMyR5o7FAloOXNkmrBdUCe4mzwjP1zGAqFhXsAPq7JtB13a2sOGlntlvldlptfhZaavxwOzT/Xb9udJe8M66TqzlxB5GIkrbPEc7wsXDwiurwPTtDpPjBc8OFL5aMPu5zwc//sXVO/fJMscoxIeFCULpwJKjnzvObQRuhKcZPV/x4fAGd0ZLztU5380DPvNMYySaPWobhRaKS0JCWW8ZR4uC1jTye+PYoWaaRVZJCI09eYz/nyKKqGCS2BWNIErIFGLDKj2B8gDhqBrpBld5swAAAABJRU5ErkJggg==
""",  # 6
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACcUlEQVQokVWTT2sddRSGn3N+M3Ond+bepA1JDCLEWirUtpQsdFm34kZ3LoXSleAH0I0IfgU3Ct0q3SkILkVKobS0lFAKWkOt2qRpTHr/zGTm9+e4CGp7Fmd1Xt6zeB4BjOcmc8qxTFkDVmLkQJRtUQ4lMuvS86fIv2GnyijLWULIeuNMBpwYM2hatmYtDyWnHyrR9zzrw1HR0RLKHDIpWI+eT1Y6Xl5x3Fhe4q3lhvjkT766t8C3z+akAqI5Zj4CYOOssLqsrVJnP53C7P6G2dOL1tw5aeHJGbPmHYtfvG4fgDlxdqLMDbBMnWCDIa4NfL4Kp5zw99UtqtWSgfUE/wg+Oo4btXy8XHBtXrDrWxYHOa5Q+azxkYujnvcr4fYUwp0WuzFjcKslWxuTvTngj09/QRqlP6b8vA+lGPqSyzgNlArbLUxF2a0Vv1YRMnAf1vD7lP1NmETP6miBYlgwxNBxrmyUyqxTNjMHJBajIvOO/Kwir5V03+/gG/grh98mc4a+5RVRdBoSj2LARCgTSAJnieNNYHhpEXE10x87dsaO1CpLYY4GqMShj0Pkujd6jHPe8A3EJFRDkI2KeHOH9p6x7RMLKUfyAROFB2Jon4yUKfcPjU2EJeewg0j53jKM38Bd2WUrgfcOyozv9hxBhG3vUTMjT8aeE75ujYNCqSYOW63h18c8/CGwF+DCu2/zpRtzt5lRIXQpHeEpCJoLUR3rGJdz5eTYmJxfx92c0B7u8k054tr+ITWBLiW82f9si0IhAzqBmp7FkNMXNa+Wngddx9OuZyhCUOijvSjGf6aIA2dYOHoLB5XleCJdetGqfwAyLSEmweXYhgAAAABJRU5ErkJggg==
""",  # 7
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACiklEQVQokVWTTWtcZQCFn/fr3ul4ZyaZTIepBFKalohWQcGibop0oXajIi5FaBFc+i/cdOnGhRvFTUT/QBE3gkJAEWu0arSBaU1q06bNzHjv3Pu+x0X9aM7irM45q/MYQDygzFsK7xg5obJh1wcShpqaaXUoivm37K1lKWTMnbDzxBMxJy0NIM3YLitu4yjilGlquFtHAPx9MwxbGfsRjlvxtok8e6ykerNPbxPGV3Pe8wtc/v03ulVDERyTfwY0bGdq5ZlOeqPPh7n0RlvaflJp94x052lN3ir0/YmOXhotCd9RL+QChPNWR3sd9YLTR8uFxiNU/rKquPm47r3oVX82ULW/pqur6IuTmU53e7IuaDFksh1g7+Avns8tp0PFTgCzFNDGFvlXDdWnt3C9NvdGD7GwX3NxJHCGJgp/vgU/l9Cx4FKDq8F+8ie68Cj0b5GfMejyNcLWjLsLhio/wikSf5gJ9pmu49WOxcwN37UMRRfMXgl+gDk3wg0XiZsVdk9E6/jx5oR2rBgYi70yNYzrxM0MVuYW+gbeWcGufwuvf0368CfchQJ/tsWR64a1rObAJspksOvThvVp5E41Z9U47NEOWEf18S7phqe8NMPTpvNYRjGfU7Q8201iYgFjrIo8U9d4vbtotTPM1fzwsMpfl1VeDKo2+tJsTdceybWxEvRUkQvnlFsjAIXMqZu1NMic3vdBk+eM9M0xNTdOKW4d1+TlQuNXzun8yqLAqhWcAJn7ZihcAGdYMInXqshZk5i/sEb3yh4749t8sNzny/GMwlZUStTS/982Fto4aixKhhM2MTQ5BzRcjxX7QGY9tYnMow6D8R8pxuKtJUZhiQgIziElqnSYqr8BOGQyY0M+wDoAAAAASUVORK5CYII=
""",  # 8
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAACk0lEQVQokVWTu4vcVRzFP/cx9/f7zWN33J1lXRMS3VViHqCSBbWxShTsxcIqKgGxEJs0/gGxstDC3kK0UFEQK0lAEIIW0cLdwBpWQ2Z3x0yc9/we996vxRqSnOJU55zicI4ChAdQs4amM7SjZrP0dGuBG6aGj5FB7h+Uou6ZndYs1TKiEkzu2bCa8UqHapbz73DMxEA7q5iWirtlAMAekmaxqYlFybpxvPNI4KQu2XrpUTZu99ndh09J+eXmkNUs4CkY/R8gy6mTdj2VZxMtW08pkXdrItvPy/zHUxJurYt8vCa9UwtybnVZIJGjiRVA0EZJp6FkQ6fyw7qT6rwWyU9Kvrsp+fup+K/WJEzOiL/YkN9OWFlvOFnASSdxolvAYG443xFOT0tGL64isUn1xq+EbmB6aQ+1NWXy3nHW9j1vr2SMbCREjz6RZbxsE9p5xYFXzPrlYesvGORWQNWBIxF2RuwDy+1FUm04Ihq9oBXnHMxD5HpbMf62DzenmMtnsa93yD7soJYd/pN9potwY9xnqSo4bg161+dczXNyo2kBe1rRu7CNunqAeS2FVx8nfDOhf92TGzhazDHKMhJBdwv4zmtuW8eTpaE7Mvw5sVRv/kX8uosNU/LP/+H3CMkcSBx3RbHjI7qIkUQZro0iP1eaLCp2ep7JExZ34Rh832P7igfboP5Yhy/vaKbAUAI6iCCmYODh8sBwUHcsjIWhU8hPM7Y+6NOzis1XnuOj+jGuDec0jWIW5XCeCkViNJXAilO8lUYy5Wiffppn9v7mj/GAL8Rx5Y6nZQ25L6lE7m9baWigmKAhJiyZwNlWyhlT8Fk/0KeibhVeFGWIDx/jHowyiIYYoSWBGYamrRFCwUQekvIfk1A8AQ/Pu/YAAAAASUVORK5CYII=
""",  # 9
]

SEP_ROUND_BRIGHTER = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAAAQAAAAPCAIAAABMVPnqAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAc0lEQVQImWNgIAowe7EzTTYQcmL89/vXf5Z4EU7LdSEMDAyaSZuZtF3lIWp4ZQUYvdiZQoRZpSR5ljxmRDVBlolxnyLP+z49PUZmloXy3MYHohkYGA4yMDDpJWhClPz9zM6gx8i8w1j4TaNpjJgIcU5jAAAZ1xd6tVu1oAAAAABJRU5ErkJggg==
""")

# Round (Darker) Images
NUMBER_IMGS_ROUND_DARKER = [
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAAB00lEQVQokXXTTUuUURQH8N888+hYarPQwUm0skJdhCBBRLtWQQuJCBfSpjbRwiBoEa3rG0TSy7Z9gZ8gqEULI4wgwRahRWaWlePL6JwW86RT0oHDvefe///cc849J4fQKDkk2bqZnSWo2SXJX1YeTRkwQQ+KSFHYhZZu71qwVgecLVP+xuIeBrup4O4XzGURbe0EGQrYqL86cYiRGpURHCUmWZxhrpXR91jNIquRyG27cGM/o+tUxum9RW9K32PmOih+4EEZzY055+vhtrQwtkVliPbz/LjK6h3SeU5fYaZCV5VzpZ2CJmm+7mUgT7VK4TJdC3ye4tU+pm/SeYL+AaZWWGpqIE90cDDhwzrvavxcYXmWasK3LaZniBXaj/F1iWeLNDfV00xeVuslX01Z+EVTK8UjVCv0pAz3svWdT7PsTTiVYyOrdvLwK7NY22S4mS9PWO5koJ/OJUqXSPt4/5ruIsdbsy/NJDQLxIU2sVAW8/dFvBFxTUSI55fEbeLpoLCvjs1USDIlxtvExwPi5z3x9pGYGhOTZfHiYneUujJSrpFMSHccnCyIh+1i6LA4UxLXy0LvLmLkNA7Gn4apZWtBfTg2G+4bxugfc7t1GrL6L8pviIKwhVKRtO0AAAAASUVORK5CYII=
""",  # 0
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAABrklEQVQokX3TzWoTURQH8N/MZPJhmoZipVWqqLiQLqpuSl0ILvyA4lP4DG4Fd4pv4NbHENzpRhDpRkTtorXaSom1SZu26STjYqaZ2IoHLpx77v9/vm+A1KiEiBCgh1KOGJxACodakANDHOa2s6gcex+RYOivkpMC7k7QxMppZmsZ4GUL33PnSUbOfJXztAIeTjHf49IsV27y8zXvNpke53kXv/Ky+oTCPH7C/XHG2nxMubfA5WczFu6wvMXGVx5VUCsChUrZpREz3ed9yvVTbMdwThJxo86XEut7zI2NNmyQkcsx3xLOj1FLaHc4aC/5vUyzxEyNT3u0qkUTw2qQkVv4ERMO2ImYDEh7ZYch3S71fpbtZqdoWLifFjUHKaWEC33CBtXJqvoElZgdxAOupcWAQ/1iaLcO2ezyeZ9yDWqaEY1xVneZKjFxNFKEw61JWClnUT9ssbsLq0S8Xcve5xu86hQNi/CEbFWWB1ysMx9xZouDNZbe0FrnwW2eHrC9kaedjm7YkRaz2GSuy4sGi1WutnkMnRzTP76eQX4GwyES53rPiU/xN/l/1n+j/AHRo4j4aidAOgAAAABJRU5ErkJggg==
""",  # 1
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAABzklEQVQokW3STUvUURQG8N//ZXSmaRwMoaSsiAhGLSJy4yJauS5qFUTbaNEHiHZ9gHZBXyBw1SYI2hS9bTQhkuyFWjSF2iRmvqDj5G3x/5uTeeBw7z2c5+Hc5zwRgvaIECNBM38n+P1fp+hvKWoDbuTn3pxgIa9BaydwYQs8UuHUAhOH6d9NlHJ7Fl/yno12cJpTJNzax5UeohF29bI8Tfdj3i0zNItG23RiQUGQCNd6hdGyMHZVWPkohPks6/eE+nHhYU1QFBBEQirO/tFV5miLRwVqL/jxnIGYxUX6J6j/pOsGZ7p5OpPNnIED5cB4i7TAXIN6kaST0hJrDSoxH1Yp7cn1aZJ2oBIxnevRn9IXczKhp0bxLJ1rfB6lXubtYq54RNrEXC79iSLVNU73MXgHw5QmmbrEkxmWOuhq5uJGpNbzS4uhThbnOHad0iDTl/n0hslZppaplSkmW+BYyKRvNXk5w/kBVi+wepOeMcpVyn0M91Ko8Gr+H3cI4jwJ948J4b0QngnhgRCmhPBaWLkoxNV8TWl2bnGk2eL3b3D3AF8PUfnFwSMkDc6N873Z5vMdvS0jSVEtUFzn26aZ87Vujtw2fZvbbatuA23GH0H1rEYfhg45AAAAAElFTkSuQmCC
""",  # 2
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAABw0lEQVQokX3TO2tVURAF4O+c+9C8JInBEE1CCGjjAwvBTrBVEQRL/4GVlVaSQlsFwcJfYKXYioIgYhpBIYUi6YxJzFvjzcPcc8fi7puX4MAUA2vWXjNrdoawO/KUUN9VN1LugzYjS1UpNdXRRbVF0kAl4VKU99Bk2OLOWS71szzC0BJvv3J/lvm5RF7s6A25kAllMdYl4pmI6I/4PRjxU8SvwZi4njCZUBKIksyYrKnhRi/Hy0x+oudNTeXFL0uHiDOdft5d1d5gfCuNkJPLmhLKVfr/8LLG1DwTb5hcpPcCXY+mvZ7hSInR7iQ537Www8FsQWeVokS5xKmHVLqPWn9OR4lVjLSn/QR5a/CFnImM4QptVTa6+P6EmJlWPGaoSlFncSO9nLVkoyg4doDfQX2TFSy9YvEmnSfpu8LwKqPFbp+jyZTVOb3FyjonMFIjL5N/JL7QMURvxmySrEF526+CD2ucy7k6Tjxl6j3Vaxig8opaD+PL6R62fbbj34MOEbdFzPVFRB7xoy3iivh2XnQPJGzSu8PROrsqtza5eJSFywy+4+1n7nVgLeEaOxe9t3nvN3EQGy3UPkz2Dzzby/4/4r8FU7Qqc6XUHwAAAABJRU5ErkJggg==
""",  # 3
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAABzUlEQVQokWXTP0jVURQH8M/v+nvPfP7NaMgUsoYWKcsCcW0ImiVaWluC5oagpS2oqaGgzcGttqCtIRocJKjBwRKNUEtFTX3v+d67De+mT7twOYfD+Z5z7vd8b4ao9WRoS9F6iuVopNty8iMgCVhDAT2pQCXZPNl4CGm6xQTKGe/meo0LI8QyH/7wtozFVLylQNQmykRF8cmQ+GZInL8kxhlx66X4fkB8OiLqT3m5iBgOemc8PsVooLDL+fvsX7uja4CudgqLPOhAKU3YRhPcYLCXWz1s/+LyDSqT7KxOy1bpLrCUU9pmuJQemxEEssC4JjGD/fS9YusT+RyVXbaqTS626pztSGTWCR0FbrezXGF+jdHntG9SfNQkZP8k2Q7Ffcol1spp7EDYi3yJbOxy8R5dk6xPE8ZoG6XzDJ095Dl5jUL5kKOgwtcyeeDqCSozdE6QPUT3gOos9YyVGrHKevFwTU3SA58DUy+4Oc1SL6erDL37yRW+LxPrNPr4sZbE1CAcKKzO3U2erfN7gbkVzFL5yNIuw6O8zlBNQmm0KiwkL2csMJGzcJFz39goMxWwl/Lqx+WZdqeRbCGx+q9wraXBf9o+/kHisdjRLPAXy9+izfOkj3UAAAAASUVORK5CYII=
""",  # 4
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAAByUlEQVQokXXTTWtTURAG4Ofmpon9pLSWCAUVWxUUFfoT/AGKbrVLBUEQ/4EguOnOjQvBrRsRdKUgbsSFCAopVZAWq1Qt9NPSNk1zc4+LexNTPwaGmQPvO2fmzHsiBJ1WyD3NvYgoz5v+gmYW5UBIcvBIXrqRn0t7GKL2zcUM0B3zYIyhYd4knBpgbYur8yTfEeeMNCsQxIIoi9WTQngmfJsRlh5mMcwIr84KCgKCYhaL7XkipioMRqyPkd6j+ZrVMtUmtXmuVLi/ko9RpNBq/Gg/4ymPPlF8S+U66RDxPAszvNhlImV0IB82n+CWiPESPSlLJQ68o3KR+iX2n+bgZ5Z/MFtgqcziRvZwbfJ6gUJMfw82iZ7Q/54wyvBNys+ZW6GasFxjoNRqG3FMXxerm3yosbDNTpW1GyTTDE5yrMGZXBWb7a0FGgkTgVrCSC+HA4vb1PtYPUKzwaEi1d2MnCatVUXZ05/rE24T5u4KoSrsnBfCS6H2U5g+Ljwc7lhXJOxR2NMa9QEGHxO+snKHWhfhAuUuJluyLWTd/lZYK+vmWiBKmD3B5S983GFqH8lGh879SW5Z0P4gvTFb9Q4xazM6yP4N+A8K/AK/2boAr+nBDgAAAABJRU5ErkJggg==
""",  # 5
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAABz0lEQVQokWXTz29MURQH8M978zoZU9NOpU1DQxskRRgTIY0QCxsW2FixEEuaWEgsbEQiwsZOWNK/wFLEQlKJDRsbFStBquhPQqfTNnMt3pvpqJPc3Hu/55z7/eaecyIE7RYhRqPNk8vwVf+FhtYpytBGtvdiGb+ye5L5GuuTm2wxR7vZjlfdDGOpwIsFfMviMoKk9UQDeW6V2Znj6wp3L1OqMnaBbUXGNuLPmsK4JTXhRg/lOk9/cryfLZd4c4/pefJTHCqgIyNKmiIClS6GaozXOFFgz7UUr04x1MV0woEapXwmPRALqYxkmZdL7MORCuFir7kfFB9y+iCnYvI5NpfWqhCLKONtnQ8YKbD1CrkvMzruM/ec0gNO7qcrR30xTd4RkQgsRAwWONags8pqlZWrzEwwPUtUZtMYeysMRHzC77j5YYF8xNl8CiYzrNSYrVPKsaGYyqwEJjPJ3xtpmQKCSLgzIEz0C69vCkvjQjgvLF4XFiaFMCo87hPEaaxIWGsSaZ0fDXBulY8j7D6DTjzj8zsG32O+raGy5NBSkAijPcLhkrBrWHjSJ9wuCjoyf5zt2pmbzdLUkWSr3obFLap1vd1uzSFpDkjOv1OW2V8O4Jw17eaE3gAAAABJRU5ErkJggg==
""",  # 6
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAABuUlEQVQokWXTPU9UQRgF4Ofevesu4CISwFUbCzWRRDujhsIYE639AxbWVtYWFob/YGujNSTGyqiFhXRakIAhGwoKBUyAZdmvOxY7l13wbebN5Jz348yZBMFoJCjFPB+5S9A7gZT+R0oHoFJO6SzVDP1IPDNSGNlxNtLt1STzUyyd58k07R1eNtg4jLgwnCpIBZkgERbrQvgqhF/Cnz2htSaEncnQeS5UB7QBlpBJYv8uj8+xkPLzPfU5JgPNHl7vqdZYrPHiKK6RFWN3UeFuxpsDbr3jRpWbZaYfUt3i0zIXKlwrs75bCFZIltLo8Beb4xzO0Cox/gyrbG7wu8+lCZQLSikq2uV7FG0up9Sidp3kNttLtDusZ6wdxLGRyjkKg6caz0kCWeDKERefklXY/ExjjH6H2TwqnZDqDyvd6dFu08upV8nu01pmt0Gjx2yIT5UU5BCN0WUF9ZTQZOYRLteMvWUlp90f7PpjP5L7hcNigZUO2xlTLXpz+Lbv4xe2+jxYqFiMTQpOovB2OjTrvZT5CXavkq3S7PDhDJpDYuHocJyNnnncr2zg657TjNF0JFInf1QRp5D/ALlym/tLcsmtAAAAAElFTkSuQmCC
""",  # 7
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAABwklEQVQokW3Sv2uTcRAG8M/75jVpbdrQRK0gDi7ij8XFoajdBIWKiqv4L7iKIAoOHVyETk6Kg5OTgm46uHTpZEErCm1BtC01aFtr0zTnkLdtUj04vtzd89wd3+cShE5LO3wDhY5aswsp2SYnOTDBJloo59VGjo4832qH2XabLC8mXMSlQVavMPSJDzOMFfA9J6Y7DcIeIRNScW9AxAURk6I1LWJWzF0WTw8IlTZGKhCpNF+3xY0KIwmLd1j/yZfrLL+gf5y+hPu9KOYbpu0FWCfNOJcxXaBwiJig+p76S0qHma9xcIXzg/naQdaXsdqknJIF2SbFxzRvkdaojrD5hNJX5susFTuEGeljuKctw9si+/eS/SB6+iXX6DnG2kfSZZoJU/X8sxLSyTVmmvzKOLGBCnGXnofLjLIxRu9NSqfoX+JEtiNwutDgW6M9eTihUG3LtvicxgKLjygHQ0epNamUOiZr5Ro3ub1CZYpkkuIDkpMMjKNE4x0rVV4vdZ2WUNjxq6mYPS7ilfg9Jf5MiLkz4s3ZYtjX1ndL5+7zTNvvkSajWD9N7TOzdZ4Not49tZu8ZfGfuBPzD7nTdmd3kbbsL10FpcHoOOuuAAAAAElFTkSuQmCC
""",  # 8
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAACXBIWXMAAAsTAAALEwEAmpwYAAAByklEQVQokV3SO2tUURQF4O/eO5OnMYkEJYr4qhVJGgnY6A/QxkYllZUgqJ29Ym8lCIJVEBFBEUGMhYUEDAQkVRSjGNE8fMU8hslMtsXceSQbNufsfdZZ67DPShBaI0VW67ZVKWdIclRlC7LRru2yvFvJSXailGeCIqp5otCgaW9eutDFiYSJIY7PM/2TBzCfE2gShIJQrK0PB0WcE/FGLC6L8pSIG+LdfmGnaOAJEqFNSMSN3WJ5WMRfsTApFs+L9TuitCDWzor7e3NsTpCCDQZ7OFVidpjYYGWU0g++3iKb4PMVjv5ipDefxyapYq3oK/OhytJvqgk9Q8R3sg4cJpthGnt25MNDQcppfNzkdS99r8im6LhL3KT/CIUDrI7yp5v3a/mwCqSqjFcopfRjJmXiMtkjOi/iEqV7zM6wknKw3FROVWrvn88Y2uDTGm/XWL5OZYwdZRYf8zLoLqMtd0aVtOGvdZ5W6Q6mfvNtH31XcZ/nkzUD9Q4w/nerGRvTe7HKXDu7SswVqTxj7DZfMs6McK0jd1ta/+VWe6opHCvSlTBwiJNLTKzzJPCvKVSP2qcnLVmvO8Xh7rqbhLTlnGgqt8b27ja1evwHvw29kK3B2ZsAAAAASUVORK5CYII=
""",  # 9
]

SEP_ROUND_DARKER = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAAAQAAAAPCAIAAABMVPnqAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAc0lEQVQImWNgIAowe7EzTTYQcmL89/vXf5Z4EU7LdSEMDAyaSZuZtF3lIWp4ZQUYvdiZQoRZpSR5ljxmRDVBlolxnyLP+z49PUZmloXy3MYHohkYGA4yMDDpJWhClPz9zM6gx8i8w1j4TaNpjJgIcU5jAAAZ1xd6tVu1oAAAAABJRU5ErkJggg==
""")

# Tall (Brighter) Numbers Images
NUMBER_IMGS_TALL_BRIGHTER = [
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAIAAABCTrX+AAAACXBIWXMAABuvAAAbrwFeGpEcAAAEW0lEQVQ4jSXKTWtcVRgH8P/znHPu60xmMtM2aZK2aaiVQEUrQpWKUl8X6kawLvwC4sYv4MKF38KFgopLRUHRhaBFFyqVRqVWbamNTfM2k8wkc+/ce895Hhf+1j/KjTUiCjUEB1hQAFcqpJoyLLEQV6KWaKpinUpORiEgyQArOFQoGJBIJCYRZlIkEFa1BPRVZ8g0QgZkiVJopXBkM1YvgVSJyEDvQq1R9KGnCFOghKiVDIqAUqBAbgGPnG0D2gFZBjJCj8KEwrGMnrgwu7jo3Nj6JB3sH359bXt9WzT4BgSwaRNfSJL7U+22w+tvPbR6cU6u3muFMBNh8Uzr+VeW6z93dYoq8FBhHTQzIdjm8Qez2Q4+eftHvyn9yIxkb8h4+snZy5eXv3z/9ngjuACOodaGlXn3yLPLa+/dCNvwpdk4wLggmeDqt3tm3JxfbS8ksKQ2ASLW/lw+ulXs/l2nwewgbAkCsRNp1bx1q+AjEaVMh4EDoc5p5fyR3TuHk1o3aj+EbqvuqRaEEvzLLyMVWjmV11BuiCYpug/Mbm5MSsUBFCBV1KqetIQOxr6Tt08sdwLDGsLKXBbKZmtQVYEaUAk0IAEKxX4tlWC4OXEp2hGxI1qYSw+3J8NC9yv1SmNFQzQFCkUZaOL17vpg8XSnGzNHzEf7GUEHlWZsBOwBDxKQAgGAYjCR7mI7ccSWZTIpZo7lJ3OOVIOIKv5/DGJoIVo2mvVbnchYBjGcGCsCqKZASlQCAAzARBZIHUktERFDbTW10wFSa7qRc4QYSEExEEFToGe5qpWtlaDWUXxlbdA9OOjnydZB02EzCVoCBDIKBrrWOCFUIgIuidaH1dx981GGNmmbGEAEVRUi6hrXJkRe6vVKPPPY173YrlxaTXuGIATyhAaqBCEYgmPtpebeb8Nxpawi5bRhhk9MbbhQ9QARBAhAYpWdzB5Nf1i7U9aBWZEq1dOqatvCUsTcVeoqzYB6RKK+3bXpSuvQBwMwVHPiJoRzL67Gue07d8qYjuqcYoXNfEJHl6POmcwZKpvAFuRrHl7fbp/ozJ5wtqV5TCeNPctmycLl1Hu4tVPu+6IhAQvMkmtf/+YOabL82Dz1KWvxTIKZWIOTZClbuLi6caPM1AFk2pQ8lh2/ubXTF7/62qXp3uZ4dFBKTYmmfffoG89Ug3rts9tN6a4V3nqYv8r4CHqff3p7/uzSA2++uvT7d82t9bSVJcdPT+6aL975Pq2w67UmMhnn21Ux8h7BXv95d3p1Q7emCc1Y0/31w1+vfLTWrSLy0T+1/i7eAlENapAY6bjpzNdXbo38JjMWLNd1c860RoFGQAPr1NgYyQtHn3t58anjrdliWv6x+9W7/3xQ+XAiWXhp7nTXs1VujPlpdCc7uG1jxKVHb/5MUeLm4cbHm3/dVFi4sVnal5VhvX8s73IW/3u43ZiI5vh4S1sxYofEcHuodwvdcbBdJEc0SdiUOtnXoiA/4fAfOVpT1sto1boAAAAASUVORK5CYII=
""",  # 0
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAIAAABCTrX+AAAACXBIWXMAABuvAAAbrwFeGpEcAAADtElEQVQ4jT2Su25cVRhGv+/fe59zZubMxPYYnBsUUaSIIISo01GTlgrE4/ASvALiHejSICERiQgJAY7i2LHHnovnXPf/UQTRr2JJa3FCmmRgJA0gAEACiSIEl1ySMEAdPJZkAIKQhP9pQBJS9iw5UJB7wIU4Ew4tUhpdiTYHDLmHChHQNdlDB4YaPM2ISVrSErDhWEInZAjygLm4GWDkyjUF3nuGY/LYGD1H6Ih6lPDkpPz6m6cf7Lury7bPclBAT964hxPjJ2W1BJPrYcAXNb/86sHn339bv/6r++1GmZ1As1thLY8FWEDR8zF0l6pJTgy+QRjuRe4N56NHcg0QMILMoOcF/STGGJLVC4wz5ZToU/NDYyE/CoyABXCEBAQA0KyK9Z0SzILv3INxHigXHARshAJZkFMzUikqlg5td7sdU6hSlDABKBG0QT5KjZSlwVUVpjwCA5mLZJ2rzZ7ARAKyDIzSwsyBMvDtttmeXre/vuzftuYwQEA0ZslIk/7LPUiNa1GmRJbL48PltO3yeTPspUCCMNAcyi4AATBg1QzNtttfri7e7MbsE+OhWRayRCAaSbIgK3AWrMt5JDTmsZeASM4DR6EAAJmBkaGgCSgDHy0ndx8v60+ffvzkaJZslG6zd+4OGGAu7vI4sZDIypiixbqEZx89Zy1TKAiHDHDIIrnPuXNPZO/at0O779AO16u2y14aD4IVAACCEbBEGJGFwliEEC0gVdOqNJLE6BoFvv9klM9DmsU0MSNIIc0mKOtyWhyUsTQb3UG4IMAciAxQHDwos+kzpwXycHPRALFzGZlFY4BkBW0ayi6jyewcqYx5yGq6ZtO1g/fugztECQRiYCpDNTeXNC1RzpgWtbfdhAGT8nZopmaFmCwIsCwMDkMcRNGy0QW/7RYpARokUEaQRsDIkKxajW6h2in22SyPDD3qsO0Hkr3jDgPkDpjTOsYz1xrlrSbb1nTdx6Logjb9uB/ROpQldwGWEd4M/dvRr71Y9SFy3pwJ69n4Dvsem0GNmBWkSISQkDZjC4SSdUlbBL9a3VTr4eyXi9dX7WVmRoisLhDfyCMUHVGoRxzc5N3Lq/XNZv3ij3ezbc5ugM2QegWHGWK8Zx89v/f82f1nB+Whdq9+/vuHn65fLJm+O/rscfwQuZ9Opmt0V+/+/L29jCOLrafZvYf/nJ69ujj9cX12hXqP8Co+GHQnqVugugn7c0JmXOJ+xXrCWYES1NbPW20LC0s7mHuA945hhX2D4ZbDv1u0Qf7HJzhqAAAAAElFTkSuQmCC
""",  # 1
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAFFUlEQVQ4jTWUWW9dVxmGn2+ttfc+PrPPiZ3jIU7dZmobHJW2LhBUBIRwgUTEcNHpruo1fwDxF/gDSJUQF6gqFRRfUFFSoFQkBJCb0ZFTHMc4TupBPoPPsPfa6+PC5b1+pffmeR8pGlFRiBBiBCOQq+IBj5IYQ9laVJU8KAr0gzJCcUbBISRABDiFDA7LKBICqCKqRIAAKpag4IpAxSglBKtgxZJrYF89KVAGyqogkGDQIByIJcPjqhjmrVAXpesVMcp0weFzWB14xq3QtNAxMMygjGNfLLua4caMw+eB1ARmSoZTzZgz9Yj0IONPW4EzjZhWxXK7m7LyuUd8hiNgA8iCE12sR5xrCN/7zixzz06x8YfPWLm1y1NnqnSCkovj6W8fZ311m1/+Zo1bXcPNkeJEYK6e8+pbT7J/r80/3t7hL9e7mAB73S7LgxE2MaTZgLMXGrz2gyP89Fc7RCI4Vbh4fpxaw7F0eZfVTWWQKUWE5b2MbaCcKleudoj9iNM/bLEwvcfdtYDxQKV+lFtLHf6+oTxODSOgQ6ATAHWkmeCHwsqdEds3ulx6eQofwHngF+8+oLs/JM0TRkEJBBzKSAx9FVAYBstuP/BwDVoLVYpmE9cP8LdHfWoqJOQ4FIsQYegqeAI1gQTH58MReS4UmiUKVnBeoY8QASqBRJUMIQOGBEpACcFZBQvjjQK+kwFgRBUVCEbIFDIFr5ADDigi1IxhM88oF4XTL87y4F6bXBWnX/AaK8RA2UREqkDAaQCEHspAAs/PlxkNe/zz9g4+BweCBRKFooKVQCQwpooTSCx4l3OyYXj6uQpX/rjOp1sDvApOgMNLQkEhkkAsSgWlhKIxjFWFlxfrjLyy/J8+naEAghMsggMCkQSaQVEJTI4JkyWhNRPz1Qtz+IcZ7yxtsNpWsuDw6nEWg1UoilA1UDdKIzGMV4SvfLfFE9+c4/7vVrlxrcujHvS9IYgQAIcosQZa1tE0gYmCoVkzvPD9Y5y4dIrln3/Chx+3mXCObqqkKvhDbjBBc8oiTIrQiiz1WoHFS1/ixCvf4tHlFW5f72BSYb+vJCJ4DWQhEFCcQSiKoWocaRx48oWjzP/oJbZ//Wc++f0G221hkAsDoG9ADIgKimCKYqiIoxRH+KrhudcX2L32L66+v8rejrLTBzj0WjcPHBpJyBFMIhFThZhKw/LjN79OUhnns6VV+gNoZ4EYqCGMi6EmhuIXhlXAxOLAZMycqTJ38SxbH/2bg4cp+IjIOiIR/p9claCQqCPBYhyGE+Ui0+emyXyPtasbFEeGsk0Y5UrNGDLAijlcEzASDvFNJPBE/QjDx30Obq2T7BtcbolszmzBUUwDQQUTx8SpMlBYw3KXFGcTw/TZ44SxfT549xrnphrYJGUwPODERJP1O1uURXnsh1T7OS0T0RsIsQe3KynXupu88ZPXGL3Xp1Euc+TcSY7trBMfSTjmZ+nd32R0fZevfWOBfGXAp2/fJB3luDCIWPrrf5n42WUWWqe5cWeZ9tJ9SHtMHo1IfaDXFxaef5b8Xp3OSh9NHbEa3IxM81IyR2nrGdLhFKdmXuT9m+/xzvoVqneUxeo4Xx4/zt0PhlR1i8FwSE3rFCXDJVGT88+8yuL5i2SZ52H7AR/v/5b7GtNQw1tPXWA2niFWoTHWpNvd5qOVDxFzgJyUeZ11TSajCcQUaOd7rI/W6Ycujoz5uEFdixgRRIWeDtkKB2zpkP8BxO9qw/NXAWwAAAAASUVORK5CYII=
""",  # 2
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAFDUlEQVQ4jS2UXW9cVxmFn/fd+5wzX/4aO45J7LiuS0pIE1ALqkMDSFHbqBQQvUMVSEhcIJD4D/wEfgAXFahXiAsqECpFSC1UpJVMqEqShkStHXDs2JOxPTOeOWfO2fvlwv4BS1pL61lLMsG8QSZC03mcCBEjDwEQvECK4BEqjBGRwiCPhkyLWguhJYITKC0SzAhAMCMToSFKCgjCGDgE+mL4hsCCU1pm1ATq3pGHwO44AjDjhAmnJChmRmGRDspGVeEnFc43lJ+srdKQMY/7ffJxzt5BznAUeeJUnTJJSeotOp0Dbj3sM1EIe5Xgq2jkeUkxHHDucp3V5UVUxjze2ONod8jyhTmKqQblbIPWeBH3y3/x1v0RwQzvgWlR3vnwAXv3Up5dbXN/q8v2oOTF52Z5740N5s9kzL4wx9S1y9RrDjCcCD4BJEScCZ1948/rHbpVRdMJ+bYwOIDHwxEvfneK5rklRqMxwaAy8JUJhmcYSvox0BOhVKGIxt3NfQYaufBcm7PXr/HZm+/yeLegpo5AQCugQKkQMoQmio/QVgGJzM0nfOH1L9H5+8d8+Lt7jAowhIigAWEgxkCgUAEzZkSpK8iE49oPvsiUeNZ/fZPN7ZzdwiijIICWZhzEwIHCA2f0xKhEqNU8F19bYXJthQ9+9QH7W0PCGLy5E7GgJRxbdo4KGKmhDaV9psHK9Yv854/rbHw6ICkEb0omx7Aghj/m1/E5wFeBsQMmlCs/ugKDIXdu7LCfG80ykgLBKrw4xAw1wAzG0SAKU+qY9ilzi8u4s8u88vMXePXlJfJaYJAEEgcVBoBr4n7RFqUO5BgRGI9Kun+7jf5zg/3tLkvfeZLJU8rmf3tQKTul0DFB5vH2lHMsCogZLSJtMabEWG0qA1eRzClf/+l57KHxhzc+4/0D4+bY0AD0LJADZo7CHKPo2A+Oe4NIdwh3tyOP/vqI5dU5XGqUMeAFNJ5YLQVyESqEEsFMaEqCBEdaQu/+CD8Szp1p0vCKAh4Ag9IMMHIMj2EYPVOqAHVR9jsV+SFMzDVROULspKoISITUDDsh7kghmpChQGQQhHxkHEVQgeR4VUKCoggOQUWpRIgScWKUwSgRYoQiljCVUAAOPRbXxQORSGTGZeQx4K0i2JhoEYej5kBTCE7I3ElmkeOHbKiSRiMxyBDEIoKRijKhgk+VrJkyJY40CpUFvEOpeccTjRrTZmz1j5gVTwY0xbMfI5lztFopzflp/PAhWkUUQb0In59u87PXvsdXnjzNRKLUxZhTR0uEmgiN1DN7ZgL1jsONQ5Tjb/eJQuY9i1e+TDbf4+b/tojDCkSYTur0xgXDJLK0tkT3ziMebg6pzDNijIJyUER+/5vfsvTKS7z67ec5vZAxmqy4dOU0rbZy9WsrLF19hr+8dYuDXBgFxVBkWSdtXjNWmyk/vH6el378OsXeOrt33mPhwgLlsEHm53n/zbe59VGHg36N26XyUSyQszJjdYMpcVxstHjmVJvn1xZYeTpHJ4VP3u3w7xtbjAZj8nFkPzg2TfmEEnlWnrJL9Ut8dXKNmWaDXrjLP7rv8PHgPk/XGlxOZ1nxSzASZrXOfujzdrHDjdDFt/0s35x/mW994/t0el3WP61x+8Gf6McGj4qUyytX8aOUVmuG2WSGbLiBdPtkYYis6KK19TRz2TkSHL1yh8NqhyL2qUnBSjpNZimZJOShYs+G7JGzZyP+DykXWt5ADi+XAAAAAElFTkSuQmCC
""",  # 3
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAEz0lEQVQ4jU2VSY8kZxGGn4jvy8yqzNq6q3qZrWnPuBvGZmQQwpYlWyBuyEKAxNUHS1w58xs48BO4cuDikw+2kZBAMCCBhEBq7Gncox5m6ZneqmvLyu0LDjVYxPVVxBvLGxGSCOYNEhEy53EiBIxl0wCCF4gRPEKNkRMoDJbBkBQ1D2QIiKFmCIqIkGCUFggKAlhYYUGEJeAdEAGZCILhRVAMI9AyI3VQOMEZLBAcQolyaQHvMTqiDETwovRFGCgE17Dbj/jJuzucXOZ88tfnHC8CeRDmKLPG8B5IBVpixAYbAnccjEae7763xZ1vZnxDtpg9nnL2xQSCsQAUUIfQE2OkgW0N7GrgRtzw/R9s8/Wf7nF8cYzfidi/2eOmV/oCmaxKVYeQKvQV1sRIJbA5dOx87wZWT2DTUw3anC9ytr2jK0IqAhgaiZCIkonQFSFJ4Na9Ndygx9PfPiace5rSwBoiDGcQBMIqdUEFCDB0xs7IcfuHe5wePuXhx+fExxDXLZKmITHwgANq4aWfCT4YHSf0thLSuxsc/fEJcmL45+AsI+QNBENZzRxAzYS8gTVxKMru69cIkwte/HOCFRGpz2DZYOqoAVXBixDbS2aAQqGdKjtv3+HZ7x8zPmuYLGpm04KqLGkQGvkfIytB6UtlVZGxth1h9ZwHvzslKh0qcHY5R//9hItpSWOGWwkVWzXMCIBrC+mWR7QkzhUKoQ6BmztDru1/hc1+QuD/zdBYhEiFtb7jzff3eHrwkGKc02qMojaWoWYxfsG0WNBWYSBK2yBCURGh7ZRv7Q/pbHS5OJwznlTUIYAK5hUvUJeB1AldpyQInhVM5oWv3r1O8WDC2cMKqUFFwXmWdUPSHTBQTyxCMPsycfUiNKGmqksOPn1EfWFcjxIi56k1ojPqUV4VhFyow2q/G1YBfOKNrUyJpsLsuEIaR4XgnbDTa5M0NcXRCR5h5DyFBLwZEeBbCbz/7i7ROUwujcIrjTM6KBt9wadLVALtDPLZ6tKkqngD73Dsv3GPZvmCDboEbVjfaFGcLRm9sUH1WiDH6B0PiR8qZ5+NuRwvqRvwZQV//9MR3/n5O/Te28UsJ04dFA20jOfRM1qdNb72yjYctzj9xUfUk6cEDH9R1Pz6/iHTn03IUs+w3yKEErMCGTS03ulx+827fPGrA84On3B0fIFDqMzwVUg4WUT87WjKjchxolMiGlQD4yjnrc0e/tXA+cF/ePD5GaFWskpo4/CFCUjGPCRc1Y6rpsAjRFJAOxBFYDpmnk9o1VBWQhYciRm+BgqUc4N5VTN0Ec6UssrpqABtrHRMFxVlA2UDmCAovgHGTQ0WWFOHdxGpCrVEdLyAKXHqyFqOZ1YyNiXHUWJogXESKk7MOLeMBeugfbyDdqtieK1NNZlhGJmLKU2ZodSrV+QJJCxpcxkyorJN6WpuxREkBdPThmae8/gCpmUAizGJEAK+T4c9f5vX19/itdHbLOeXHF5+zP3JIVdO+eDbHzD9xwHXszFaGZGu84fpKZ/lj/Btiehomx/d+zEuHvHnf/2Fz/PnnAP3pzM+/OVv2B++SuTukq47RLrk8zmp7yDX2LSuDOjKECEl1piaU2bhEZCzl/S55QYsS+HKSk7rBWOrmGjBfwFB2zeiqhURdQAAAABJRU5ErkJggg==
""",  # 4
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAFKElEQVQ4jS2US2+dVxmFn/fd+/vOzef4ouPUduw4ImmQklSqHFCThpQCgg64KKrEiGEGDGCABEOQMkHwGxh1xKiDFiSkFqiURgUlgaoJQUpCYzd2fKlv5xzb5/Jd9n4ZxL9gLa31rCV1xFIRGqrUVEkFwBiGQGFGqg4FIkIWjRGRzIzcDD8pCS0Rqhapm0EIZDHSUiU38DHiRAjAkUGCUBEYAr6JMAuMJUaz7pipJGShZG2QM54qM80K6pVhELoD49lRwWZeUprgp1Q55SNvXZnmzd99hzEpCARG+Q51ApWJJoUDySLkM/zp17f4/a01ymh4iLgk8Or1OWYuzGLPV5AsUM1LODhCioLKeMrgyxFheZ/N1V2CBVQUX1Gh5gwfB/D8CWvv3OXxJx0qQ6OK8nh7yNKlKQzl7t0u693ItDn2ouGdQILRGKtxsNbh1rubHO3CSU1YqFYZ7Y348IMOtZrjKDeGuQAOI+AFRVWpVVscPjugPlRqhdCLgVHWJ0PYjnDYD6QoAxU6IZAT8SpKLUlx6RhjiaMolLqk7McME+UwGpm+qEpFUZRASRTBY2BArCj72wcED6UYVVEmxCEqVE3YskCiShKFGg6P4bFI1IhvFWRbPSYmFF9AWlMaYpAZFo1RHvHiGJjhYkDN8CMgJA5qSn02pfW1OmfmTlFZqKLB6D7Y5/6dTbY3ClxRkKC4CCbgM4yikiK1l5g+12DuNxcpt46ojtXI85yJNy4w88NdFv54j49vb5McCmkBDsVLNCZcharNo2WPzkf3+Oc7n7FQSxmbaXBQd5z90RKXfnmdQ97n9sd7pMNAwxR3StzNGTPmtnvs/vUh/3nvCeNdYW9jxM7agMOtIYdPtxk/02Th2llW7qzwdKegFxQ3J+7mpAkrn2/yeGUfN4K1XsZqbhyMAgwCZSejJTnTlxfZ+3yDe0+O6AXFH8TITilQKs6Mrh2nKlAnICFSGQhf3H7O4vc3mVsYp+q+JGJoFCFDGEZhZMoApR8FTMhF6IvSLY1Pt3M2VnZYWFqk7ZU6oOXxKxyacWQvBp8BEg0DtgxWS9gPwvZyj/pUhfFUAMOXYhQY2TFpKkowIyHSC8ZADS+OsWjkuyXeBxo1ZWglCkIeIyCAYKbAC4ZTFG+GF3Bi9PtDpC7gABSf4PGSgpVEoCoeD2AlNYlEhNQMMFqTKQxLQgmK4MGTiKcqxkxSpQwlIQRMlICgQP3YV7U5Riyb5LnwQhsjEWG+0qSd1glmiAimjgxoqNASYcop04sn6T7L2RoEBNBmqvz02mUuLc6yF/ok6ijN8Gq0vaNxfLXtsZTpV77K6v11eqOAImgtiVz9ydf57o3XqTQi6o2GV2aTktdbCbOJ0E0ii1cWkfE2y/9apRIFQ9FRCX9/9wNmv/U9rn/zVebbCa6W8VKz5OX5KifaCacvtrjwi+vsLe/y9PEhTUsoEFzL6jeXNzqcLT1Xf3aD2faAce0wP+foVwMvf+MrXPn527hhyt9++z6P1o/YCwnPADnNCatjzDWq/OrHb/HtG2+QTPWJvYeU6kmTeToffsZ///AR/1jvsVZ6Vi3hgWXIm3LVztcvcm7uHJP1Ie3xPlsHD1jf/5QfLC1R6aZsP1rD9UtSbfKFRf58tMZDO8CLSzk//RqXX7nGo6d3+Mv997jX+zeODo82PuHtE6/hypO0ag0ajTY7vf/R1RSJFeSMnLa2m2G6OouzDIuHDMtdDsp1Jn3K+foigwyUyHrRYccKulawz4j/A4H8g+q9bTlBAAAAAElFTkSuQmCC
""",  # 5
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAFLUlEQVQ4jT2Uy29cZxnGf+93vnOZOcfjsSeO4xLHcWIKIaiWnZaLapVSgdQFSIBQVYkNYseGPay65i9AYlMJdVMEUqVIqGXDpahCLY2ruMSY1phcHMf2zHg8M2dmzjnf97KYiu0rvY+ei55HYhG1qgQIoQgAAjhVPKDTEwCq4EXxCE7BWiAWEIVAFVBCMTigRFGdggFTMAUvYAAbAakIiRhC9YQixAF4VawIfQcTP30uECqBAigErFVIMDQkoGaEhUSYSz0/enGJ1ZtX+PWvdvjLkxETDCNgwpRliccECHUCGmpo2YDSVLx0a4aXfnGLRtZmkuc0jRDwmSyvoIoA1oowi9ASjzWO5ZWI7//8eYbb/+Hemw+oq6BeqWHwIjigAgSHDUSpmZIMIUs8r7x6BZzwh19+gnsMFAGR8fipl3iBAsUoGAGCANJI2LxSY/M7m+y+cYejR57xKCJyEKsjEU8dT4InRAmmtGMgoB57NjYuMz44YefPR4xLBVcw8J4YmUoFrELwWXbWAtYaVpfqPPPC07z/+ntUbUfohFIcqQgzBHiFSKZR5YCowxp1SOB47oVrjPtnnO71qVeCF+irRzBYhUwEr0KJEMnUMNMMQhayhGvfXmXYPiJURTDUA2GpJmSxY9YqRh1poCQKcxoQIthmELC52CR7apadN54QxoZ4JmA2siy0Yhq9nCdDT23oOCkrEi+kgEWxCZ6Nq3NEIVROWVidYf1nW9QWZknSkBvq6W7vc+/2XT641+V4oBRFReoguFGLXnv+W5e4tDVHMl9w9eUtXFLn0fsfUZ0eM+p2ubh8gZWt61zwOYPDnM5YOakEG8YhzZsr5FHG3PoGD975hLu/+ZhRe8ysEYwX9loJ6z/8Mms/+Abtg3fY750SjRUTmoC0doFGc5PBxx0evXXA8KjC96HX9vTP4OR+yXtv3qN/OGDt618kiwJEdFqMtFaHMey8tcuT/T7ZWEhLqDvBOmE08uweDLj7+23m19ZYbNQxopjQK6lkTPbuM9nLqZ8byn6Jjj1BBY/zgmLiqTsh7w1xRY/FuZCaAVt6Tzkeke8f0+tMmFFDYC155Rg6pSdC5h2u8PQHfbye0GhO58kOnUOHIzg5p8xLzr3iqBioYKkR+glWSqzxVNWE0fCU6EKIEcFgoHDnYB1IQBI2ULX/X61IoEIwEuBLQ0BGWpvBYjDtsuSs38FknmYzRaVG4UMsBpEKpxUVBglihIhatojkAV4V0yk9hw9H1BcbXLxcpzCOyltACI0nMmADQ2WUZiPCxgHHh20cYEofcbA/IZlf4MwPOXTn5FFMPwzIrSeMIY0dBCXXv3AZhnUOj0ZUqhhI+Nv2MZ1/Dbj+laepz4UUNcN9KVlebvD5lYwyqlh5qsbai8/S/fshJ22HqiFoycxrdZcwczzma997mcU0pnvaJgzGXFtJyWYj5pdqPPPddezIcuf2NgftMXsVyFVp6SIhrcjw060NvvnKBhJ3KPMDpDynPJswd/MG7Q8esP/HB3y42+ZRYXi3KrFGlZiQyDd5+06b3vmHrG/GiO2gVc7Vz63yz9d3+XT3hMPjEadFwsBblBy7YFp8NbvFq8/9hPn5JfYPdvnT7d/x9uMdMlPx42vLNPyXaOQ9Li3MkqYt3n14h92zf2MrG/KpG/CP4/9iTzsc9Y746+l9xibjcdXltw8PeDYLoSyw7pzxsMtHow5jo8hlc1EXaRGZlNTOEZkI1TbD6iFWJywnCyQmZeAntIsh3WrIuU7oMuF/3Zx2hIu3On4AAAAASUVORK5CYII=
""",  # 6
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAEwklEQVQ4jTWVTW9cWRGGn6pz7r395W63P5J4HNtJHAYlgCKEGGkkJFixgCVLVvwTFrNmNRv+xyxYAAJphAYmJBlQgh1mwmQcjx13t9tud/e9fe89p1i0s6tVVemp931LOqKWAYkIiRNaogSLVNGIZgiCEwFARTCMeYjkGL6LsCpKKiDRyCRQxkhtACAY/rqBABYNECbq8E2MHedoEUAMr4KaUkVjFiKrqSdRwYJhBg3vKM34Mhi+74Rf3Ftnr68MFhNOypoN9ex2mqTNlDITvjkaI9OARcM5mFWRyTjik3bCrz/6Des/vMl8/BTtpzSSNnE2Rdc3gUA9uURmC6qwIEwr8qcF84//gWtiv22/+prWi6dMnh+wdX+No7/8nS//9AWbW47z1y8ZHR6SNiPNrudyMmbz4Ye8+et/8VYK/35+SutlzY+3M/756R948nqKJLD66jGRis8/H7C9esCdH/SJd1ZY+9VDptUcHwzGBYwq4clXBXkV8Qapg6PPzml6R/tCmE8jJ/WUhx+8T5lPOTw9x9fiuDLlbYQiGJkpKxgxwNtJzWpqxCCoEy4XkG1tUZxNOZ9X+IAxBQYmzFBaGikipGbMqkgeIm0gqNDdbNK4cZOzPz/nMo9oZTVTqxgSOCUyRDhHyEUogMn1fX3i2Hu0C50bnD4+owqKrzFKIgFHBHKMBHAIXhVvkRpDU8fmj+4ThhccvRpgUfAgmCkrktGSikiNqVIY5AY1UDrwaynZe2uc/+0Zo0lOiIbqUsJEDAxShBqYA7VBJdBsOm7t9yjnQ45fHHGxqKgt4uVa8MEiEUMw4rWLHJAoNFcc+798wORqxPHxkHkIGIKCETEMMAy/tBL1dZ06odFPiStCfjXl7dkMWA5UAyqgliXVEAWLhpqRiOCc0Npu07izx+DTE8YXNaPSqN4BCwaVGZVBJUJiRibLlXudjO//9AHzoyFHhxNiEEogAAoCCHWEgBJwZDi6IrRTodfP6O3vcvFqxGBcoeYIS7Yo6HVeKIojojiEjgiJM7L1FO33OH1yTF0IMToMCNgS2JKbEk3weNZQeiIkDWX3J7tU+YyTwxHUyqgyyqjvJgsqihMHKA1xrEmCIOzs9dj5+SOuvh2Qj2ouFjWLKCyiu6ZtgqAkkuAlQUkoVJknjs7tDdLuNsPHb5jMKjAhIgSMAHhDERxOEjriaKowc0azrWR3tyA0GP1nwGVeMw1GgbCw+E4TguLwkuFNAWMuNd1ug50PHlF89ZrRyRyNihMh2DK7I4JGDJGE2jIibRaWIj5l82aP/t27nLx4w+CiYlwbOcIUAzyYosjSCJMYuTJYGASB3VsbpI0uk/8NGRUV4xC5MqOIEUwRFG+m5BYZUuBEeK+zyu12wv7992EwZXhwQh6EzGWUBh6hwl1/EoQKKBBGVvIyH9LOlH7S4PKTPzI4mTCuas6CAIpDl/LAIeuyYWuywS3d40Hre2z6kkIOgK8Zzt+yQ4aWnjS26WmDzLd4XhU8syG+rSvcS7/LRz/7HQ23zpODx3zy7e/51/wZGcrN9m0+XPkOad2in/bo9baZnn3GF/kUuaXb1qPHDX+PrtvGW8U35VMu4jEJgV3XYV83sSgsWDCh5DjOGJHzfwwjcwTLL1e1AAAAAElFTkSuQmCC
""",  # 7
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAFQUlEQVQ4jS2UTW9cZxmGr+d533POnPHYM/bE4/irdZxUcdykoUhtECAECFS6AKRWFbBlC/wCFuUXsOMPsCsEsUIIpNJFSGmaQpzQhsatk7SOP+t47JnxfJyP92Hh3tK9uxeXrsUtHjGH4YBEBQ9E6iiDMAoBlUCkQgCCnXZkUCBIVdUiwAcjEiMWIRgUBsZpvAgqhgEByEwpULw3qImjKgYWyA3AiL4cKoogiBlGwItRUxgY+BiYdBEtE6TMCBrwKhQWKDilKb8kcThEjEzgi9LwCcJEyJnAiH2gVTVemElYPBPxaKfHxdmErYOC93cKtvtQmNAToaqKLInaRYXFyJhuCL/69fPU6ykfvPUhU7WYqWnPsFfSXF3mL3/c4Pp/jzjMhRMXo4koqRfOTzp+/toi09M1/vzbO/z93T4Hn1a4807GH/56RO+gzU/fXOXbKx5VwyhRAcY8vPRijeVrM/zjzTV2PimIu8Leeo/PNwZkR8b13z+k+2ibH7+2QD2BwkqUALVIufK9edZufsKHWwOaqkwrnIz6SGlEJgyG8Onbe0ykEcs1RQGtOOVMLaE2NcagkzEeQRECXqEXTo0XJtRE6Gwbsp3z1ckEDeBzK2lnGVoaVXVMOscAIxFlTKAfAlPOiBQ6VkLFEYknGGghsD8oeHhjm9mpcao1TxwLtdThPKjA2cRxZsyxtJQSxpSdoxERggYc/Vy4/d4hjcV5zr3U4KRS8kRGFFWjUlOOXWB5scrK6hn2Pthnr1+gKN4MfCnosXD3rXWee3WOH31tnsc3P6M/yslLo5J4li7NcP/GFmvrJ5zkggE+FsVLwMrAx1vHLBzXmP/BCs2rLY7ahzgV0kJ58vZjbv2vizfFq+IALwiFGJYaK0sp1XMVyq0degcZ3hwWIMuGVFC+8fw499ZPSIYKGD5gxJGwcmmCK99pkg0K3v3dXfr7xpjEVCynYznPvFBn8bstNrtbaOdUpI+cpxoJC6uzZO0+/7n+OYMOUHp6UjKioJ0X7Nw85KoYl65O82j7EOnlqEOYiBIePXjK++/s0D4Q7MRTDuEky9keBR6fQNFV1v/VwR2VXLvcIHGGb8SOVy/P0KgO2djLSIgog3Bc5PSloG0BNWFQQGUobD48orUyS+IVTbWk1SiYm60RCsfTPNAJwsiUL0rompAhpOoZl4h+t0QTQ9TwkQZmFiIGnR7DDDq5kQRjEIxMhMwgRugXgSwTxp3DRUKk4Dt5RnUyRl1BM4kRK0mJ2Qe8GLkVCIoXYVjkNCdqOB+TFwHtFoHDvYJ4vEqrGTMWO4IEqurIQsCbECsMQslIA2ndo4VwPCzRQans7CvpbIu55TGGcc5IS0wCdfUkIqcf7I2ZpmdiIaXTzjBAe8G49aDN4X6P899/hvMLY4w0pxI5JpxjNkpAYDx1PPeVBvF8xJ2PdukHcHWi39SpMtgbsrA8x4UrLWz3kM1el7MzEaUvKXzBT352gWgMNv99zHsPRmyOBDlLahcqdea88Mr5KV7/5VXqLc/Tj9bYPXpKczKlnsZ02xm3/7TFwY5wryPcKgLSkgmrmtJEuBinTDeEr6/OsLxcEo33OOsT7v7tM+5tjgijiGHhWS+NBwaySNMu+nleTM9zYWKRSjrOxmCNW09vUhRdVlzKZddiWuoMiwwXee6NetzIu/g5rfPK+Mu88a1fIDNTbD3ZZe1+m4+H/yTC882pa7w880Py7i71RonzGYON+9w+foCsypK1ZIrJ+FmiaJrMTtjo3+EwbIFknNMGz+oUCZ4gJcdhyFEo2aPH/wERf3R2sWzNtAAAAABJRU5ErkJggg==
""",  # 8
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAFDUlEQVQ4jS2Uy25kVxlG17/3Ptcql10uu9t9sU2M7QQigdI05DZKCwQREQOkHmTGCIk5QwaZ8wDwAhEDBgwiBEICCaJISTpKaNOkadJtp+O2Xb6X63aqzjl7/wzMA3yjtdYnCaIAIpAKzAEBoY/iVRExxCZGQkCpKTXgEbyCi0VwgAUyhRyhBiYoXgGU1CsGQTAkogSBQsHFKG0MiQiqSoRgJNBQpQaMQkRNBAiAGDxKQHGRKl+PYmZQCq2ZWPBG6QQYV8JM5KiDpwlMg1ATURIoqHGpCEmoMeppxIF2S/juapOrVcL7T3pszCe4uGLnZMpXIxgGISfiOHjsFWPf2Yggjzyvbeb86tevsNxQuvd7vLrQYmPJsLqs/PitFdJ+zaPjAlVhgGASVeYS+NE3m7z9s00GDw/407s7bD0b4QdTth/3uffZGHzB3V9s8NZmhjU1loDJUTpZ4Hs/WKCajPnjb7c52vfMBfjPwYCjc0/vXPndu3uM+gVv/nSNNFJAMQmw1DHcfHWRT/6yx/jCsGlzqA2jCnxtKabCcCDsfXxE3jR8e97RkEt8LK5lSEMoz2vaYgnek3LJpqcer7CuwvC/A8Z7PV7qZLQVTCnQWpqlPK/o9StQpQoBJ0KlMFIlESEVy9F5Rbo4w8JSCw+YygguaTAdp/QLiIwQmUthgkBqhMQYErEENZjFDnWrQRJFuInAZCiUfQ9Arco0BFAhkf9rpUoIgoilcf06Zd4nWIsRFYpuTUJKKwUTKtrGkIkhAzKBzAg99aSLGa5znagxRxzFmEiEL59cYGiwsZIzkwkTPNPgKTRQhoCYQNa0zD/XhDyB2pMag6mC8vDwAi2E1e9cY5iAS4VmLDQjaGdCbQMae1Zvd2C8Q+YKDB7jg+LU8uHvP0Ybwkvfv8F827E0a1mZc8zlsNy2rK3nhGRAf/8RxekhNtS4SoVhFfjwcY/lW3Nsvv0GN6884uSLLj6aUhOYaTW48vwV9rpP2X10xunTCrzHtiV5JwuBWSzT3QnpwQUzr3+NxR+uMXfnOs31Fs8eHHP2z2OiNGWyW7L7uODzgeICwlBhGiyHA89f39/l6tYe6zdz8hnH/v6AvW7BymLC6p3nONsrORkPmHrBKUoJDBVOp0qv9NTTmvKwxITLb4siQ5bHpGtXKT7osj0OlOpwHvAIUzWMQoAgqFemKI1gMQbyWEjnM0yesdsd4tVSqcHVQKURpY8ZqScgeFVKrVkSS249kivXXr9Bsd+ne1CQY/AhYCqEyKQ4k1MTEySlxpFJRGxgpBUrSzGdV17g6T++YjLweB9QFKcKqUsJRFRUiECCwRKwDtIEXrizxOTwhCcf7SMTAwolHqNAwFGqpUIIRBQIxI6Bg1u3F1h68wZbf/iE05MptjZ4FUr0clwiXGhNH6FQQyWOfSpe/NYiL//yDg8++pIH9y7oj2qmQRl5CGovUZ37CQWWpjgMEQs2ZqmpvPHz1/CDCX/+zQF0DVoH+gSc5KgqTnGX/WJJiKklw9eeZdPh5O+n/Puzf3HWhbSK8BqoxDAMgsEibRZ0Vpq0mGFWWlyzNzDhkFof4uwFucKsb7AoMwQqRijbqnyhAZfbFi/O3uLu83dZn/0Gu9sHfNB9j7/1t4gVftJZ5+XsNmZc004dSavBe3v32Rnu4KZacTg65Xgw5ODsHg+PPuf+6FPOsSSa8OkwUFbnzFaerBLOR8/Ymp7Sk5L/Aa9xjztczeecAAAAAElFTkSuQmCC
""",  # 9
]

SEP_TALL_BRIGHTER = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAAAQAAAAPCAIAAABMVPnqAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE4GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuZWRhMmIzZmFjLCAyMDIxLzExLzE3LTE3OjIzOjE5ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDItMjdUMTA6NTY6MjhaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMi0wMy0wM1QxODo0MjoyN1oiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjItMDMtMDNUMTg6NDI6MjdaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpjZjY4Njg0MC00N2EyLTQzODktYjQzNy0yYjZkNzVkMmQzMTAiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6Y2Y2ODY4NDAtNDdhMi00Mzg5LWI0MzctMmI2ZDc1ZDJkMzEwIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6Y2Y2ODY4NDAtNDdhMi00Mzg5LWI0MzctMmI2ZDc1ZDJkMzEwIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpjZjY4Njg0MC00N2EyLTQzODktYjQzNy0yYjZkNzVkMmQzMTAiIHN0RXZ0OndoZW49IjIwMjItMDItMjdUMTA6NTY6MjhaIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjMuMSAoTWFjaW50b3NoKSIvPiA8L3JkZjpTZXE+IDwveG1wTU06SGlzdG9yeT4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz7IgAk6AAAAc0lEQVQImWNgwAWYvdiZJhsIOTH++/3rP0u8CKfluhAGBgbNpM1M2q7yEDW8sgKMXuxMIcKsUpI8Sx4z4jQMDcgyMe5T5Hnfp6fHyMyyUJ7b+EA0AwPDQQYGJr0ETYiSv5/ZGfQYmXcYC79pNI0RE8FtGAAYEBd6O0HlJAAAAABJRU5ErkJggg==
""")

# Tall (Brighter) Numbers Images
NUMBER_IMGS_TALL_DARKER = [
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAIAAABCTrX+AAAACXBIWXMAABuvAAAbrwFeGpEcAAAECUlEQVQ4jSXOT49kVRkG8Od5zzn33vrf1T09TTP0ZEZnkHEg0biDEAyBDbCHBXHDnoVLd34DEz+FiXvZaKLGxGAymEhCR2aGRGT+2d3TVd1Vt+qee96Hhb9P8GMEIwDIiAAYKFiWE0iEkQJ7iUAPxEQ0DIIArwATOwEwwKMUAdEMiEQnRUpDqCZdRjCQW6gXAkMiXA6JJOEFigYMoR2wJzIcQQlCQRYAVAEoTAgOrolIMAEDqkMZ1bxzNLoxDfXWckxPNtt7jy8WFy4vBQYwNOBRVR9Uahr/5dsvvXNr3P73Yl86CLqz23z4k93jk5X3KG6tEA1I5h7KG4f1K0P8+rP/lKXPoy3lS+L9m6Nfvbr3m3unX2U3wCJkwV+axE9v7f7u82d+ib6zpxusOmqLv3yzarblravNNMGgGIFAHYzrL8/yo7O+djuHXzhEmtD0/OKsi8PIRG5kDpSKrx+OjhfbdY+TvqyhFdRKGehgf3zcunAwrwtkTnQJd64N7i+3LbCBAEgogFMddL7xo1Rf3xm4IZLcG1frrjxa97mwgBl0QFAW26Je+OayqxPqQAvE3rj6dpkXWateLm6FQvZgFrKjKzperF6bN02iBfLqIBl0mVXTBDrggEAREgGcZr+5U8dAI3WZ8+1ptV9bhNwlAIBDBEFlV1twfVo1wSJBg23MJEBIRAJ6AIBBBpIYBHS9AmmQbXs7uUBtNo0hABGIYACCEMFBsK5HFUyuGJiOn6x+v93uV+nxpgzMOlcGCBIiNDILAjpJsAws1v3NvUmTMKEGIIAASSI5tDgkKtfpaS+nbb0fRHv37v5kaP+POlAkAAKMSNR+ss+fttsMg5SzJ0MXbWvcQAUgKcKJZGLQC6PqD0+f5+IGIQHnm7KurDVG2gBsgBoYgEKZDGwyr9dFBhiECrZy/+C1q1Vl82BXzBphLFwxXok8msejvRQNubgFoBTc/251+6jencXYYBh51exFswNjqnn9sPl3bksudJiDs9D8/eF58PjT62MbctRgkjCLKMEH0+rNH+/fP8mNAoDQIN2oZ08uLttWn7z3g4fPVqfbTYueSYNR/MUbt04X/uevzvocHnUeKqSRjZPzwdnywOqPPv7hXqNXdvjz27P3fnbt+UX47Z++brZY9HxcxAmHY1VTahY1acKrh+NbM90chcNh9dnX//vyu9Xco2QPih+XzAknA4Up05XQTGPd9mcbX5KYBJZcjkIDx6W4JB94FwPSj6YvvzW9+3I1X/Tre+t//u30i959lmZv7s4PnLXYmv11c/5t+zxGhFxwbXJ3kfGv7uE/lqdngiFsbHai+bOyuVY1IcWz7rJY4Iw7FeqIEBBpdatlp8uAMEAcKkVjr65Vziwd/Xt0ASUqKSj4aAAAAABJRU5ErkJggg==
""",  # 0
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAIAAABCTrX+AAAACXBIWXMAABuvAAAbrwFeGpEcAAADXUlEQVQ4jUWTvY4cVRCFv1P3dvfM7O54jTEGhESGIUDGESEhEW/C4/AqpERIBKQYCQkH/NgI27C7nln3THffOgRroOJT0neqzlEvhS1UhAAE2JZUIrDTBhqe7dqJQDLF0o0W3yyUzDSBi2LGCbW31grhZhfFAKI1XCxgFA2t5KZYWqvF3oQKOtAqPpUUOBisY7OI0dlLCwjKqbSRwg7YwBuVu9v6+Sdv90teXc/thto0abTLmfRW161RsbfB+yt9cf/8y68etu8vnjwbM7UghSY42LVKBcK5wWfiBKIT8wHlveAo7Z0ROhhBYEiUOci3I2rU2q8Y+3T08iCvg2KvQwEhKbFxAGJb496qEJl4ly6il7AxQNgOqUidJNyH153J4/PjpBJDLUAF2ULRcJrF2Mz2SVVmQoayL5rsJV0gJHDYJB5Cxn3ol8P89HJ88vWzcT8XIzCEdJOFMK+nwTF9u5aV9Pa7m/fW/bjkxbTMdkgIQZjXuQkQPF/a5XF5/GR8vDsudq9YR6RJI6iSJBWronXElDlBWzw1bIoYpISCgZAVqEqGIbi/6R/c2Xz02d2Hb25Oipo92YvTvCZhyuwUVVqF1qH1qrLkkm72eYmC/Z/dkObMxS5iSl8u7a/jwsv8bZyP6V7aRJR/LxGgkAQJvbSO2ESwqrdqDZBodmKBUKQ9RB1K6RVCYU6HyrbfduVOVwep3WTWGIchFDiaZWvXsgyVqT25nnEcTUD6piPUUHRR50yljslQ49CyXbaXx3adnpzNhrgxWkNRVNdh2yeVk05np/2r3bJFdPV6mXupSCXCjfDrP0UzlmYxJ9NVu1cKMGNEAEgQqIS6fVrR7RyjtcospdHHxbIILemVAt8AoSbtzEgd6S5mTbt2vi57+arlIb1YTv+v3rW2bzm6vFyi0/DsCp53x1ccFl41ZisdJkSU6nJsi4jCUKSh+PF4mC/ypz/2T/fzPjER6q4pO7tCMWGG1OqQ0y/Xh3Ecf3ix7w+ZGaCeslgmRKlncf7hrfsPth/fLfc8Pfr28rsf979uVD49eeeDzQnZzrvuT9o3+7/rlNWUo8v27P7PV49/3794dL17xTATT8t29tDRTqlXMV+DQzrjvGro1BcKcPR+8aEoNrEeLLKZHJlm2qT2D5R0KksVeKBxAAAAAElFTkSuQmCC
""",  # 1
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAEvklEQVQ4jT2UzW9d1RXFf3ufc++77/p92I6N7cQKAQcaOqmECq0QTaOKVKgqqlR1UkVl0mHHHfM38DFhVgkmiCntIFGligZaqQFKGleJqEwCKU78kWc/v+f33rn3nM3gWkyP9lpLW/u3juSCqQlOwCGoQDKIGAnwKrREMSAlAyCYUZvhlUboERygJkQMMzAMSYBExMABAtiJmc+BlkAOKCAIBkwsEYEWkFujciZgQhAlEfEFwoITCoyQmqFu5kgJ9kOkrUKpxkyFuobcHFOEYyI+E0dKRpREt6UslY5zbU8IyubQeKz0LLaUr2c1e6MIsUZRNIKccWLrpeN0Kfx2Y56X17pcvfOI6w/HPLtcsGNQi/LLjXn+vjfmvc09dqbCwwq8CMy3E398bpm7exNevzHm428miMFgNuVeVSFemcbAKxtzhO93efuzI1QENTMunZ3jmY7wwZcj/vZgyjjCLAn3xpFxgDA1bnw14doXh1xcy1ntK4KhCeFUu8u7mzO2BsaoFmpgRmJqgDlihFgLt3YrNrdnXD7XJxn4ZPDOrQHhuCKmnNqMnIQCNUJlQo5QJ2EYjNsDOL/aIlPwlcFXw0Bh4IgooAiKEIB0YuRxHFUV0WC+zPEq+GRGZQ0gGYbHiAjRoMbIxMgRVJuh1XbGdJrgBCoacIQERBOSNW8qRkbD9jDVtHLhlTN9/vNoipnhAcTAS8NuLg6HgRmKAEIQoxLjwmKLQR34fGdESpyIAWeQWZPWJFqzq0LSxNKccnGt4J3/PWJ7WJFM8E0VmlRv4DThxMgFcgyckbWFF9dLhgnuPArM6ibSg4I5wHCSKA3MEp1c6LeElZ7nysYCk6PI67cH7E+MaI5oqemzApk09SvUmPNKt4DLT/X5xffm+cvNPa7fn3I4gyopdlJbD4Yzo6NKqUY3g14hvHRhgSsvLPHGn+9y7ctjes4RamuuIUCDZ7NfR4S+Kp0i4+Vn1rjy8ye59skunz6YILUwDuBESGYksya5gUMpRKm98dSZLr+5tM6HV+/y/p0BBxOhSlBhVCrNaRAMQTMRWqoU3hEL4dUfr/KPf3/D+7d3OBwZo9B8ehFhlgys0SdAvXi6macsld//8BxnegXX7+wzqYTj2FDURmiLUCBk0pwWQB0KEnl8ueBXl1a4+uk2B8MakuJUG8pOphOGmeFQPIoqwnIr58Jql/0w41/3D+jVQkcyqgSlKtFApXGQ77wM78U4W5QMRxX3bh3SngqtpAw0sZwp7dpIoqj3+BqCwQBhD8OrV86vzBOzKW/dvM9PuiXe1QzrwPNzc3y+O6SP8XUKlCGxKJ5QCS4Kfiw1H4Yhb/76B4z/WvFEnvPCk6fYHRywuOC5HPtsbR/ywYNjfnd+jdmDitc+2SZWETmtpS1ljouPr/NSp+Dj3W0OCBADpzvKJBlHlfCz00ustEr+vzPk7a1dbk9n+L70WPfzdIfLjKoeL/bW+dPDTW7u36Ulxnq7w9PlPB99UbPIEaOqprA2mUS8cyU/WnmWP5x9lYMY+OfsM7Ym/2VgGW0Rfnpqg6ddjzbCE1nJ9mzEjZ0tRAKyIkvWcyVzbg4RzzRNOKgPqNIMJbLgSwoy5KT3wWqOLDC0mm8B+FE+cLO/lKcAAAAASUVORK5CYII=
""",  # 2
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAEpklEQVQ4jT2UuY9dVx3HP9/fOffet8x7bzZ7HCYeYyCLTQgmWCBkFIJQirCkQDT0SIg/gSJSWlokqlSUgAQSDX2ChIwSIzkIYRsHy5HtzIxnfftdzo/ijqlOc37bd1MGHoAokVvABA5UKQFgiHj2JpwKpwaq5MRcRgHkEobTJCe5kwPJnSiRSQRAQINYAGYiZoIVMwp3oiAGo/bEtGondw1yMwLCcRp3poi6ScSOYDMX3985x1ANT5ZLFk3F4aJiWTmf6+dUFsiygsPZnMenc/LKmDUQkzt11bCoSq5tZbyxNiJTw53DCQfTkm+f63PczZgOMrbrIb/64DH/fFq2J5lDR+LDhwfsP834zkafW6dT9pY1P9le4b1/HPD8IGPnUp8vXrtANxo4mEQMApIjFycz58/zMdOmITdxOhaTuXO7XPLKlQ1efHnEvKpJQOMQGxdgVKlh4YmFoJGo3fnwaMpcztXtFX7w5hf4w+8fMJ7WRBlOwhyoMdIZnzlGcOhJIGdtJfLm9ef46/u7/OVf+1QVgHDAElDilIJaAne6iFygwvjFtQtckfHHW4/ZPamY1E7jbQNrnP+ve2zOUpAk8jxw4+oGr35ljV//7SFHJyVeg7mRklA72UmIYEYCKjnKxWiY8/bXz/Pbm4+4f7gga86kqlYsyImOMBkDwJpEExw6xo9fuwSTipufnjKuoKqdCCRPmM7oAsChcQeHjgI9i1zfHDHYWeXd1y/z0xfWKbPEMiSCtZoHCAX2bldGBtRtH+qy4eYn++zfPeLe8YzvvrpBKoz7pwtIYtyImYOGBN8wY6S2MifRk9MRXCjEXA1hRbz9zS3SCfzu1lMezOBJ7S3PSxI1LfyNG5UH5sl4snDGFXx24ty7P+atcz0sPrsbzFvsaAQ1Ikk0gLvIFVAKhAYODypWS3huUJCFlqoIbXQkb5ETjtECsnAjJciCcTRteDSHUT9HLJG36HNWR/C2vBSUctxFQADMk9itYOwgnbnKaD/IhdGukxCuhOSk5DRAAo69gSJQP8u2gIgK4I6T6IScOiUMx1ONu2MYhSAGaAyind3crgCZQUgiOERag8ghSBQSIYjVPLCOEVzPEBeZidWi4Hy3g3tNV84AWDcjQ0Qz+kXG5VGXrHLUpNYYJrHe6/PzL1/lyvoKRRTPErUjkSGKaGwNC3pRHBwv0JmfYxBEM964vM2wv+TOyQleJhAMQ868rlgG56vPj/j7owm7RyWJQEWNgVjUzjsf3eZHN17irZd3GA4jZSfxrZ0Bnb5xY2eDH76yxXv/3mVaQZUECG1Y11eUsV4EXn9xk3e+9xp7+w+5/egB17cHjBcZ66HPbz66x90nE2aLjL1GfJZqtKa+Zy46Eufzgq1Bl69dHPCNzRrrwPv/nXHn4QnlsqGuE/NkHLvxlBpd1HnfyrfY6VxkkBdMfY8Hs/vszvfZzHMuxD5bNoJSbFrkKC35uJ7waTMjdkOPFwYv8bPP/5L/LO/xweGf2Du8y9JzJnXgSxuXiFVgtehyMXT5pDzi42lJVIU2te49W6GXjQhuLJsxizShTkuiatZil0ggEKhTYuYlU2qmlPwPQzs5fGvU1D8AAAAASUVORK5CYII=
""",  # 3
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAEeklEQVQ4jVWUO69dVxWFvzHX2vvs87jvh69kE9sgwJFJmkgpEAogICAkCoSoafMLoKDh71BRIQFFAIGShkimskhQHrbxJb73+j7PPmfvvdaaFOcgxGxmsTSmxhxjzKUKPABRoraACRwYSgHAEHHdC86Ak4ChOBphHnBqBHLkIARagbIX3FhVcUC4RAKiAQFRSwiQHAOcQnSnCpDXbwPCMDKidScaTi3RSBjQyGgEHgo7TeQH93Z4shx49OyKy94ZCvSIzp0YgEoi4kRgCuwazKaBt7+6wffv1Ew14+eXS/5+ugAXAyDADNHImZozk7MtZycWfvpgk3d+ss+fbs7ZuB14uDVmKxgjoAZWIgOVYCSocWo5e9PA2w83ycMStoyLw8hx37NhRq9Cj8ALMUhEQS0Y4cQIX741YbIz4nd/PiYFo10AOAFHgK/ttLUx4M5UcGtmfPO1fd7/+Jq/fTRnci72hsikFCqH4Kt9ywoM7sIKNCa2ZhV3vjblvU8u0Y3TzGGjVKRUwFdIrW03HIYCYxlCvHa4yfBywfPPF3iK7FkFS8dlZMAkDK0EW81xkqCpxbfv7/LeozMu54U6ZT7vMmddJiNWgXW03t20plGCs7URyLnn/Y9vqLIhwaeLnr88u+KsSxT+R9lxbNVAtZjOArVlmiQYRCqF17cnfP2VbW41Eef/y4KEGYwb42dv7vPX5+csFj0jd7riXHnh2dWcq9RTa6VN9NU9mBCVGQ/3p7y6N+LJy46LLpPdwUQxMRGkXBjZ6gbi2iYTTmXwjYNNjj9d8vw8o/zfswxcl8LBtGFHgUpaL7mmbRLuhbZkfv3RBal1vhAqKgskBQ4mDWdXiTKIVJzkvlYdYgjOdCQmHZxfZFSMDogmvtjUzErm4sUNFbAXAkMumK9/mCrCj+7t0bRwvoDOjGzOBnC/gXGViIJZLdp+BaxslcgojO8c3aJLc24zIsu5PY3M24FXj2bcvOKc4hxcTBmfi7OTlmW78jzmDL958pJf/fguX2m2yT5wuGkwLzCDd5trdg/GfOvBDD6M/PL3/+Dx4nIV8yOLfrepeGN7g1ll3G4i2TPFE9Y4s3sjfvjGHd797Qs+O7vi0VnLZ4vM8ZCJxStuusCHZx07Jv5tosKRCtdh4K3piOkL5+mLSx6f3ODFqLOIGDG5QDVDibQYbUoECkEFqsI4QLYll2nJqIiUoHYRXcQCJETr0OfMxAJykdPASAIqci+u+rz2WeBCrMHLXABnbIYhKhlFxihU4OJwYswq48QTrTsDRkJYwrn2zI1D6zUDY1CDGdQx86XNirPrHscZWyS50SMKIoqAE0lULEpFSBXZOrZigJg5nhe6Twb+1cIiOXjAFRBObKjZD7scTu9wNH3A0F9y0j7m6eKUpcR377/JP58856heEiZOrQkfdHNOuwtipUCtireOvkcId/ng5A+cDnNa4Omy4xd/fMTrk11qO2BjIkwjhr6nCjXaZtNHGjPSBKgIChTm9OUCNLBXjdlSQ8pi6Zk29yw80ynxHyzwGsJqZcJlAAAAAElFTkSuQmCC
""",  # 4
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAE2klEQVQ4jTWUzY+ddRXHP+f8fs/z3LlzX+bOzO2UqdOUIk0QMbGgEkOEmPgSibIAEyEu+A9YsGQBC7b+DbrQxIW6UjRiTDQakJKQTixFi6bTzkxph87c9/u8/X6HxTOck7M8OW/f85EMMS9CKkKiisMAqGIkmuFUEcAQajMqjNqMYIZviyMTIcFIzMAidYxkKgRAzVAgAqWBA2qgFsFnCD0gdUaaKV2fUMfIuKhoeaXTShAV6gjLyhjngWkdWRj4FVH6LvLohS4vvfwQX9BAgXG8nLNFZLiVMUrAzQ3yDm/+4iZ/+d8xMYCHiLjIt77U4zvPdQnvnuDmkTvLCCclroicGTpu3a4pbi05Hs2IFhEE71VI1EithHc/5fe/3Ocftxa0KqODcG1e8tR2h4jwt/0F44WxirIww6uAAputhN3rOb+9NmIxgy31bCQJxaziD7M5aaLkwagCYM0KPQgqwjBrcft2TqtSsiBM68i/64IKmJpQlBGHUImwtEiN4QXBO0/mU845oQpCWzzjWGEm5FGoVTAERRAUI2Bi+FNNUGXCjfsF0UGNkYnSwyEqJCZMLOJU0Sh4UxTDg2FitPuB2ac5/ZbgA6QIXTGoDDOjCo1YSjHUImKGr4HoBDrC+tAxOJfxZHeNtYHHR7h5Z8Ff9yeMxiUaDIciBiBNcvAe1+vwlQdSnv7GFpOPS86ve+4tA5fbZ3jiPwt+984+f9+b4HLDB1ARvJixop6d2CMtCq68tc+v3j/kUuIZdlLuJsp3L2/z6k8e4eTXH/H+zRmujCQmuIHoG12D6qDgg/fu8faHR6zncDipuDWuOJ5V7N2bsd7J+Npj6/zzxgn354E8Kt7MyMvAb64f4oisq7BfBHIgxegVQlkEPto94vkf7bCz2eLDuwUqoLkZiyjMK2FWCge5cWLKGGWMMI2Rsox8cHNE2JvyxX4Lr4JhKCLUCLVBbUJlQmmANf9ciDCJsDur+NOdOU9eWKOtQgJoOKVCYVDSRI0gZpgIUxOOAyyicOM4Z2fD0/INW3wUIwLh9HYigpmhGEUwKjVUlNQgX0TWfCRNGiQpp2z63MwEEBTFIQ2GBFRgVFa4noCcisTROAQM8KKo0bycGEbEmQHGxoqDWSRGGhiAouLwQMd5YoxEixiC0RRJT7vqphnLKiUEARoO4AR6SUbbp0SzZm5VaiAVYUWEjiiXBj12bwemZWySMy88ffE8FwZdFrHEqTa8FmPVKQmQAIOW56mHNvnX/oSiahim3kVevHyOnz5xHp8ZokbihJ4PfLnlWPPC3EUu7Qxw622uHYxwp5fROsLPr97ge898lWcefIB+x6NJzaAVebyfsL7qOHu2zY+fe4R3Pl5wcJSTmScguLZlbxxNl4xOal5/4dtQz6g152JPOfGRr1/Y4JUfPsrq3POzP17ncFywCI4RIJv0LAF6Lc8PHnuY1569xMb2kuXdQ6becSbrc+XtQ9668n/eGy8ZB8fYlE+sRh6WizbMzjDsD+kmFRutkrv5J5wsD/n+9jaruWPvaIwrIiuS8V8zrhZj7lmORx1nOw/yza1n2T3+M1cOr3KwOEBZcDTa4/HuDi706Ccpa2mbUX6fXBzgkaFs2qp2WE26CAFiQRXnFGHCinMM0wFVDYIxCUvmFsgtsKTiM5zvdFSkD9RKAAAAAElFTkSuQmCC
""",  # 5
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAE3ElEQVQ4jU2Uz29cVxXHP+fc++578yP22LFN7DhOnVaAhAgSQQoRpahFbECCRcUGlmy6qfgPWCPxD3RZ1CVCQhR1UahQED+ihFBoIErTtCTkx7h2bI9nPG9m3nv3ni7GKr3S0ZWO9L3f7znne65kIubMEAQngjA/ZkYCPk0AZpDEMAQz8A7wAmIgZoDhREmAYJj9H2+AGiSBBHgPBBEyEdQMJ4LTObOKUCVo0hwcgShCBBoxvBpkKDmKl0QnCK1gvHihx6W1Hq9d3+H+sKJBaIDGoAYihipyAhbaTkkS+eLZgp//5CybeUlTzShkLlfsRLuBIHgVoQDaYqhEFpc8P/vhee7+7ZC3bx2SIWCQybxJdlIvGF7E8BIJQAjGdy8uQxR+8cc94hBoFCcJ+0zTIoYaqACqkHlhqxf46ffW+e0fnrB/ZMxqj0/gLOFJZCS8JRRDAK94QAmZ8fX1Hg9vl/zj/pA6GqSGWUr4k7magTIP5qSCqnL6VM4rz63wqz8/oRlHXDIiiSBCEMWf3EEUjyIYKiRwNZefWeDhZMKTp1OKKBQCyFyeAwIyf+jEiQBaqKMTMl748hKPj48JJ2MoFJYzyH0iV0NIZGJ4oGWKQ9CWCpunWmyfL7i5OyJ4IS88G92cyysdtnsZqx3HYi6Ii3iJZJLQuT2Nr/ZarOVQJWNrqeAH33yGtdM5W6ccZTL+dfuQ39/Z4Z97Y0ZTI8ZISOBxwLJjcCZy5Wun+cb2Ge4MlT/d6rMRFJc5Xlrv8vz5C7xx/TFv3TuiOk4EwKt3rG/0+F83cPH5dX735j7vvPsxk7KmJ4IaXG1nvPylM/zoyjYPBx+wNx3jakOdKCt5m4vb5/jo2oRbtw8pRxGbwmCcGE5gZxB5/d+7/Gen4oVzawSniBgqCGutDA7gzXf3eHwwo9sI7QidJPgkTCvjo8MZv3mvz6XPLdMrMgTDOzO2JNC/ekD5tKIzFcqqwZmhKvSbBqeOXITRtKJspqy1HF4FH80YzBo+vnfMYNKwgOJUmSRjPxmlCIUlUkwMK6GykqVC5ltVp0QqaziaUVeJIzMSibEJnoCzBicNToyYGvqzMUVbEREUgWGagTMQpXAF6VPrzx0VTRCUmIScwFKWowhaxsj9yQRfGL1WwMhokscjiEQSkYggLkPwnC26SK3zz3ASjTuDmvWVnK2FjEoSjc2ZnRhewKkQxejljl5QHgzHJAMfzfHfw4Zzqx12rWIv1YjLgEiQGq/gJTETuLSyCpOMR8cNCUMh44P+mOvvz7i8uULedjRBOJCGzV7BF5Zyap84txj48XMb3HgwYlBGMMGbCeOx8Mub+7z24ufxTYdff9jHTz0rCxmnBIqFjO9cWGMwqnjr0R51DckUWZGudXG0vfDS9gavfmUdl00YzQZonDIuI5fOr3Lt3hF//fCIv++OGTTCg5iQVbq2SKDlWywUGc+ebnNl3aE6IqWaby0ucfXRiPf2xuyOao5roTSln2p8RztsFht8f/PbbLWe5cbgJm+/f5O7RzsESdxdWWTZ1uhVU7a6Bb3Q5p2jPnvlU3xyykGsuDZ+yI1yn8H0gPvHAxrJGcWSvwwGbOUOUsTZjKqa8KQuaQRkWResSxsngeBaOHEYJXUcotawkHXwEqisYRIrJrFmag0Taj4BJ3dEeRFZxAkAAAAASUVORK5CYII=
""",  # 6
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAEbklEQVQ4jUWVzW5cRRCFv9Pdd+6MZ2yP45+EhIAgCCIEiB8JiQVCgm14CR6CFQs2LNnyCjwACIGEkJBAESiCRAElkERAnMRxMo7t8dw7vj/dxeJOYNdqddWpU1XntPqSBcBLeCd6ciRLxGQYIEASAEKAUSejwdBY3gYSHpAMD0RLJGMRAE5CWoSagYnKiZBhrDpPRgJZ99AcyYw6JfrB4yVskS3IE83YS0YYOHF+Y8gTffEoHnMQIyN5Tvcy8ixQebh3OEd1xAycoEpGVSSCzz0fXnidt95d4dadu/Sf9JxZ6jGfVAzODQHj4O4xfr9l2kSKR5EHV1s+uXgHn8PH25MD9q/cY/vGQ97ZXOKLr7f56uIO5zPPpcsTfrs6Ie8ZT284rk2OefvVp/j2lz2CtbBzf8r3k8jbKxmffvYHP+8fIw+n96El8d2dKb8OPK+dHNKOc47WNyljQ0gG8waOovhxUlNHwxtkDn7fLhk5sVSKWZW4liounN1gMqvZnRWEJEeNY2bQJvAYA4yUYGceGQdHMiETey1snlhmd6dmXkdCAiozCkSNyAQt4M2oYqJKxhJGdGJtmHHm5JBLlx5y3BguWaQmUpKYkSiBOdAgGkSZjIQI3vH6qTGsjbh+d0ZKIiSMaJAkHKLBcItV9BKeRMTw3vHK2XWOdubc2i+wJBwIQ+QK9J0jAMjRSjRABBonsqXAqa0BV367z8FxjVkHAoBhYJ1AEtAAySAK8sxx7kSfR2XJ5QeHFG0kWbfKaPHQDLBOTba49w4GueP9F7f4qyy5OS1oUsKgQ7b/sBelCNLiHCT6g8DxEuzPax4U1X/idAARI2lRvgkzQ2Z4gXNieaXHU8+Pufn3lNk8UrZGNOEMYQbRuq5H1G2YhBeM8sCFZ7a4davkxuQYSyICiU5hgDrOCDOHx9EHci9WB4GXzqzy572SR/PYaX1B01lnNGAO4TC6efekrllLgcF6n+v3psS2S44tkP83m46vwzFADAQhEy8/PWavrPlrUkIURTSidWHuscFJHhBBjqE8QpweD3jvrVPcvF8wLyNFE2lNtNaBOTMhOp5OHuFp5Ki8Y7w6ZGtzhev/TJnV8bGXdnsAhG5mDinQQwSJ2rVkecZgbRmawPakoKwjdYIGo7WEYQRDXbg8blFOLUeeB9547hS3rx2we1QjcwvX/h/dGQbyJAsYPSIeOc/qqM9L59f56faUvXmkjEYrUXdswURgIYTKjB7QA7zg7GjI1vKQ3f2CoyYyT0aU0VrHVkDARGNGQYuTWM77jHsNb66vw+2S7YdHNAmCD0QDZ0bEwWPOkc56SmvZqwt6QZxzgcs/3ODBUUUZE0XUQhB6/AmhkZZtyJCRG7OZbzF0kZYJaJ+iOmKVgFpPsIyBMjKfsRNbdqwg5MpZyzb44NmPWHYv8OPDz7l6+A271RyPGOWrnB+sk8eMjdDnZH+FL2fb3K8rNNaa9ekzDCfItYwjcdjuME+HeBJjl7PmhpBES0ulyDTVlDT8C0AURkHIZJSoAAAAAElFTkSuQmCC
""",  # 7
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAE70lEQVQ4jT2Uu4+dZxHGfzPv+93Ofe9rr8HZ4NiOrUVEQtwiilAgIRAFKA0FRf4AStJGiJKCBlHQQEtBQYEFEhcFIQtLSYgcS2SxSTbei+U9eztn95zzXd53UpwFTTWjGc3MM88z4hBTDAW8Cg5QUcyEJkZEDKdgJkQDAxqDCEimas7AmeHEcCKY8f9EABVBZO5FIJgQUbwzyERJMTAjGHA5iQFyaVzGPUamSm3gHVCoo2NADJgYqhDNiMwniWZEm68DRhDjwsB7IIuBTAznjHZqbHQTrrYcT8czbnQT9ieB/44C49KICJUIiSiyLGrLCn1ntAvhx9+4wo2O59fvPGMj9VxvK6Mqcmt1iZ9/cMS7BxdMg1CpR70IicJiS3nj7gJfHqT85K973P+kZPc44d5Hgd9sT9i7mPLL767yuVV3CV5EMUgcbF3Nef3FDj+9t8fxYcBNhf3DGfvDijAxfvWvQz7cHfPDuwvkHqJdFqdO+daNPr94PGT7tKKrSldh2lRINJwJVQ1/fjzmWuJYyBUB1KvQzjyf6SSMy0DhIFjECcxiJFzeNhfhaGS4s8ALuUci+IgxbRqSCD0ReuooGyMVoRGYRUMUnMApERIhEYdRoxG4qCN/fDLibpHTzhSfCJ1EUQURYylRFlLlziChTpXhtEYR1BDqAH97OuFWv8fWRoupD+xTE1Ijy5WxRu72M76/2uGDvTHjOs55t6qJrWrklY7nTtfz2s0edctzf+eEUROoDNpO+c5Kl7f3zngwnPF0IuxWgncicx5H4+FowtYs49tfX+GrL3d493hCpsJGEP7y6IR/PJ/iTFGZo+0FiAIxMbYWUlYXPeOdMU/OAi0TgsFR09BDeG2t4J/DEt/IXCTRwDnYWi14fbPFWR352dv7jC+MPp4WgSMLbK0XfOXFDttlYG/GvLNTnTNspcvZtOa3j06YzABTTolMCByHwJ/Kc8bAq+sdno4myKzBDVzy1lLqKXzkncMLTk8N1ygxwIzIaTSGlZGYcjxtuN1OKPKE908qfO6UL653WUtqts8bUhwxCuMYKENgQkRMqCLUNbx/PGVzpYdzgiYa2cgDr3QzLCqjxjg3qE04NyhNCAipOHriGFcR7+bk8SqR2z3HsCypGphGo45GbUZACAIOoQxG2UBflNTN/5ovQ2C5cHiJDLxDzEhxnNGgAsECIjIXSghcy3JSdcQQ0TJEHp9H+lnCestTeMHEyEQJMaLMRVFZpFJjkCsahVkd0SYq2xfCC4MOLy2mlC5SS8TEyNXh//c5FVbbjmu9hGfTMA+VZrw3nPJgVPK9mwM2Bym1BlKn5Kr0fAICRap86UpBr+f4+/MRtYFr4d/KJOXJecPVQY9vrnXYP5+wX81Y7DqCiwQX+NHnV8hTeHAw473DmrNGkD6pLaUtegq3l1u8+eo6X1hS7n90wMPphM0i4Ubq2JkEfvfojKMR7M6E3RCRnhSWmtIClpOEdiHcXOtwa8EospI76vnDf0748LQmNp4mKMNoDA1kkY6tuD5X0kVW8j5ZkvGsPmD3YocYpixrylXtskBOGQPqlE+ako+bEt/Tgpfya7yx+QO0c52Ho3+z8/z3HFYf43Bcb3+Wr3VfpixHrOWG18C94+fsXQyRK7JsHSnI/QDn2gSrOK4OmMQzkIYFaTHQFh7FJDKLDTOLnFPxKQmNZLMcG87oAAAAAElFTkSuQmCC
""",  # 8
    """
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAgCAYAAADNLCKpAAAACXBIWXMAABuvAAAbrwFeGpEcAAAEsUlEQVQ4jS2UvY9cZxWHn3Pe9713PvfLmax3A3HiFCYfgJVQYEBAQ4NASPRRUiP+gzTpqZFA6UOVIlJCgShQgqLIioITAdLKxE7Wxrvr7OyOZ3Zm7tx733NSjI906t8j/R79JCEOIAJJoOvgAhVg7ogoQSLihmNkNwzBHGIUUEARkkMCzCHgqIPjJHcEAQQTwYEGiBHoIkQExwkIIk7hjgHiEMgoII8RHccForqzEwtKnMYzrYKr0zNoslCGgLlR4LSmGIEsTmOZmESInhE3imh0O8K3tzts58jBeMGoFwkxM543TKpM7ZCIzDHCUPTNSwFSMJ4dlfz5t1e4LHDnZMnL/S7PD5Wrm86r13Y4qo3jeQ0u1AgagW6C713u8MYrI746nPH2Z6fcPV/RrFr+c7rknw9WYA1//NGIF0clohnB0YTTS86vnxtw0TS8dfOU6SOj53AwrThbGvMF/OGzc+4sGl5/4RJRHbB18mZP+OXzfd7534TVUtjXEkxYZbCsNK1QrYSb9y7YLYW9fqB4XC87OwVhAPXSGIriZiTWt3DD3HnKhdNxxcl0ybVeQRfQFtgcdHl4ZkyrDO40vu67xandiSJ0RPn/MrPTL9kfdjBATYUUCr6uIvPGSSIkAWf9UYUoSgclu5CGPZqyIIawTl7WMJ0biNA61O7gkEQICLiTHUSUZ3aHLFPCVVGAxYWxRaIfQbxlU5SOKAVCIVCoMHGn2y/Y2h1Spg4hRDQgPDirKEhc2yoYFkJFpnajdqN1Q8TolsLedglbEcyIqmh252S2JNfCK3ubXESISehG6EQYJMjqeHRuPNWDyTkb2iKeCX2RN3dCYLyY8/Qo8WS/YD5v2VKhmwQibJbKS0+UjHaVSVvz+eGcg9OaaA51dj4/XfDCXpfXfnqVL/qn/Hs8ow6ZCuNyWfCT0YC/Tyd88nDBySSv0Z3IIhtVo/ztYIbN7/HDl0b85sY2+VLm4b2Kdz865fD2mCe2C3TaMp22tAbRgdohuzKpjPe+POej4wnf3SzZLJXb04p7s5pnBomfX93hq1nmUe1kEyJAC6wcQgtVdnJrfDpbIP5424IySJH9/QHTwxnj2smuRAMcISPUtpbDDRqcjisiUAZh2E10u5EvZzXma9uisUbOFmnccAR3J2MISqmGFs73r2xw92TFeFZTiOBuaEYIUqBSYERcIkYgoUSByluuDCM3ro/4xxcT6sqw7Gvv3SHGiKNkBEEJrKdWAxRR+NnVDQ6PFvzr/hRpBYCMrd12lOyKIbgoLQIxUKlz/VsDfnFjg7/cus/5vEWz4i5kQMHJCBXGCmhcyaLMaHl2b8jvf/Ucf7p1zq37S+arTGtObeCu656X1tC4UqAIgZ4GBqXzux8/zXza8v7NRzAVPEOFo1Lg7kRHac0BiASMhGdjR/v892DBB0fHLKYQ24C5YyLUBoIiA4bekZKSko6UDHUDsQuMh6guSQ6llQykxMnUwJnD2I2YtMOTvX2uj37Atc7L3D27w+3Zx9xZHBMcvjMY8WLaRxpjNyq9suCvj445r86ILZmL1YLpas7Hyw/5+uKI4+oBS4ToiaOVkXNFJxt3s7Copxy3CyrJfAOmF3p6y87BcwAAAABJRU5ErkJggg==
""",  # 9
]

SEP_TALL_DARKER = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAAAQAAAAPCAIAAABMVPnqAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAcklEQVQImWNgwAWY5ZgYqgVZFf4xvPn/nyWMjTlmpy4DA4ON/1UmJ1VuiBpRYXZGOSYGd1YmVW7mBV9wmoUOOBkYJnMxPwoREGBgZOniYg4+qM/AwHCJ4R6Tl60ARMnvz8wMAgyMXUKsd92FtdhYcRsGACtvFNGbibtiAAAAAElFTkSuQmCC
""")

DEGREE = 0.01745329251

def get_schema():
    styleoptions = [
        schema.Option(
            display = "Round (Darker)",
            value = "round_darker",
        ),
        schema.Option(
            display = "Round (Brighter)",
            value = "round_brighter",
        ),
        schema.Option(
            display = "Tall (Darker)",
            value = "tall_darker",
        ),
        schema.Option(
            display = "Tall (Brighter)",
            value = "tall_brighter",
        ),
    ]

    return schema.Schema(
        version = "1",
        fields = [
            schema.Toggle(
                id = "is_24_hour_format",
                name = "24 hour format",
                icon = "clock",
                desc = "Toggle between 12hr and 24hr clock.",
                default = DEFAULT_IS_24_HOUR_FORMAT,
            ),
            schema.Toggle(
                id = "has_leading_zero",
                name = "Toggle leading zero",
                icon = "creativeCommonsZero",
                desc = "Enable/disable displaying a leading zero.",
                default = DEFAULT_HAS_LEADING_ZERO,
            ),
            schema.Toggle(
                id = "has_flashing_seperator",
                name = "Toggle flashing separator",
                icon = "cog",
                desc = "Enable/disable the flashing number seperator.",
                default = DEFAULT_HAS_FLASHING_SEPERATOR,
            ),
            schema.Dropdown(
                id = "clock_style",
                name = "Clock style",
                icon = "cog",
                desc = "Switch to a diferent clock style.",
                default = styleoptions[0].value,
                options = styleoptions,
            ),
        ],
    )

def main(config):
    # Get the current time in 24 hour format
    timezone = config.get("$tz", DEFAULT_TIMEZONE)  # Utilize special timezone variable
    now = time.now()

    # Because the times returned by this API do not include the date, we need to
    # strip the date from "now" to get the current time in order to perform
    # acurate comparissons.
    # Local time must be localized with a timezone
    current_time = time.parse_time(now.in_location(timezone).format("3:04:05 PM"), format = "3:04:05 PM", location = timezone)

    # Get config values
    is_24_hour_format = config.bool("is_24_hour_format", DEFAULT_IS_24_HOUR_FORMAT)
    has_leading_zero = config.bool("has_leading_zero", DEFAULT_HAS_LEADING_ZERO)
    has_flashing_seperator = config.bool("has_flashing_seperator", DEFAULT_HAS_FLASHING_SEPERATOR)
    clock_style = config.get("clock_style", DEFAULT_CLOCK_STYLE)

    # Set image variables for current Clock Style
    if clock_style == "round_darker":
        NUMBER_IMGS = NUMBER_IMGS_ROUND_DARKER
        SEP = SEP_ROUND_DARKER
    if clock_style == "round_brighter":
        NUMBER_IMGS = NUMBER_IMGS_ROUND_BRIGHTER
        SEP = SEP_ROUND_BRIGHTER
    if clock_style == "tall_darker":
        NUMBER_IMGS = NUMBER_IMGS_TALL_DARKER
        SEP = SEP_TALL_DARKER
    if clock_style == "tall_brighter":
        NUMBER_IMGS = NUMBER_IMGS_TALL_BRIGHTER
        SEP = SEP_TALL_BRIGHTER

    # troubleshooting....
    #    print("NUMBER_IMGS = " + NUMBER_IMGS)

    frames = []
    print_time = current_time

    # The API limit is ≈256kb (as reported by error messages).
    # However, sending a 256kb file doesn't seem to work.
    # Increase the duration to create an image containing multples minutes
    # of frames to smooth out potential network issues.
    # Currently this does not work, becasue app rotation prevents the animation
    # from progressing past a few seconds.
    duration = 1  # in minutes; 1440 = 24 hours
    for i in range(0, duration):
        frames.append(get_time_image(print_time, NUMBER_IMGS, SEP, is_24_hour_format = is_24_hour_format, has_leading_zero = has_leading_zero, has_seperator = True))

        if has_flashing_seperator:
            # If the duration is greater than one minute,
            # generate one frame for each flash of the seperator for the whole minute
            number_of_frames = 1
            if duration > 1:
                # Two frames per second, minus one because first frame is created above
                number_of_frames = 60 * 2 - 1
            for j in range(0, number_of_frames):
                has_seperator = False
                if j % 2:
                    has_seperator = True
                frames.append(get_time_image(print_time, NUMBER_IMGS, SEP, is_24_hour_format = is_24_hour_format, has_leading_zero = has_leading_zero, has_seperator = has_seperator))
        print_time = print_time + time.minute

    return render.Root(
        delay = 500,  # in milliseconds
        child = render.Box(
            child = render.Animation(
                children = frames,
            ),
        ),
    )

# It would be easier to use a custom font, but we can use images instead.
# The images have a black background and transparent foreground. This
# allows us to change the color dynamically.
def get_num_image(num, NUMBER_IMGS):
    return render.Box(
        width = 15,
        height = 32,
        child = render.Image(src = base64.decode(NUMBER_IMGS[int(num)])),
    )

def get_time_image(t, NUMBER_IMGS, SEP, is_24_hour_format = True, has_leading_zero = False, has_seperator = True):
    hh = t.format("03")  # Formet for 12 hour time
    if is_24_hour_format == True:
        hh = t.format("15")  # Format for 24 hour time
    mm = t.format("04")
    ss = t.format("05")

    seperator = render.Box(
        width = 4,
        height = 32,
        child = render.Image(src = SEP),
    )
    if not has_seperator:
        seperator = render.Box(
            width = 4,
            height = 15,
        )

    hh0 = get_num_image(int(hh[0]), NUMBER_IMGS)
    if int(hh[0]) == 0 and has_leading_zero == False:
        hh0 = render.Box(
            width = 15,
        )

    return render.Row(
        expanded = True,
        main_align = "space_between",
        cross_align = "center",
        children = [
            hh0,
            get_num_image(int(hh[1]), NUMBER_IMGS),
            seperator,
            get_num_image(int(mm[0]), NUMBER_IMGS),
            get_num_image(int(mm[1]), NUMBER_IMGS),
        ],
    )
