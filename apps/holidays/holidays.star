"""
Applet: Holidays
Summary: Date + holidays/birthdays
Description: Shows the current date along with icons for US national holidays and customizable birthdays.
Author: Andrey Goder
"""

load("encoding/base64.star", "base64")
load("humanize.star", "humanize")
load("render.star", "render")
load("schema.star", "schema")
load("time.star", "time")

DEFAULT_TIMEZONE = "America/Los_Angeles"

def main(config):
    HOLIDAYS = {
        "Jan 1": NEW_YEAR,
        "Feb 14": HEART,
        "Mar 17": CLOVER,
        "Jul 4": FIREWORKS,
        "Oct 31": PUMPKIN,
        "Dec 25": TREE,
        "Dec 31": CONFETTI,
    }

    timezone = config.get("$tz") or DEFAULT_TIMEZONE

    now = time.now().in_location(timezone)
    date = now.format("Jan 2")

    # Handle special holidays that don't fall on a specific date
    if now.month == 1 and now.day == get_nth_dow(now, 3, 1).day:
        icon = MLK
    elif now.month == 2 and now.day == get_nth_dow(now, 3, 1).day:
        icon = PRESIDENT
    elif now.month == 5 and now.day == get_nth_dow(now, -1, 1).day:
        icon = MEMORIAL
    elif now.month == 9 and now.day == get_nth_dow(now, 1, 1).day:
        icon = LABOR
    elif now.month == 10 and now.day == get_nth_dow(now, 2, 1).day:
        icon = COLUMBUS
    elif now.month == 11 and now.day == get_nth_dow(now, 4, 4).day:
        icon = TURKEY
    elif date in HOLIDAYS:
        icon = HOLIDAYS[date]
    else:
        icon = CALENDAR

    # Handle birthday overrides
    num_birthdays = config.str("num_birthdays")
    if num_birthdays:
        num_birthdays = int(num_birthdays)
    else:
        num_birthdays = 0
    if num_birthdays > 0:
        for x in range(num_birthdays):
            val = config.str("birthday-" + str(x))
            if val and len(val) > 4:
                d = time.parse_time(val, "Jan 2")
                if d and d.month == now.month and d.day == now.day:
                    icon = CAKE
                    break

    return render.Root(
        child = render.Row(
            expanded = True,
            main_align = "space_around",
            cross_align = "center",
            children = [
                render.Column(
                    cross_align = "center",
                    main_align = "center",
                    children = [
                        render.Text(date),
                        render.Text(now.format("2006")),
                    ],
                ),
                render.Column(
                    expanded = True,
                    main_align = "center",
                    children = [
                        render.Image(src = icon, height = 28, width = 28),
                    ],
                ),
            ],
        ),
    )

# Gets the n-th day of week of the given month. For example:
# get_nth_dow(now, 4, 4) gets the 4th Thursday in November
def get_nth_dow(now, n, dow):
    counter = 0
    for day in range(1, 31):
        t = time.time(year = now.year, month = now.month, day = day)
        day = humanize.day_of_week(t)
        if day == dow:
            counter += 1
            if n == -1 and 31 - t.day < 7:
                return t
        if counter == n:
            return t
    return None

def get_schema():
    return schema.Schema(
        version = "1",
        fields = [
            schema.Text(
                id = "num_birthdays",
                name = "Number of Birthdays",
                desc = "Specify the number of birthdays to add",
                icon = "cakeCandles",
            ),
            schema.Generated(
                id = "generated",
                source = "num_birthdays",
                handler = more_options,
            ),
        ],
    )

def more_options(num):
    l = []
    if not num:
        return l
    for x in range(int(num)):
        l.append(
            schema.Text(
                id = "birthday-" + str(x),
                name = "Birthday " + str(x + 1),
                desc = "Specify the birthday as a month and day, like 'Jan 22'",
                icon = "cakeCandles",
                default = "",
            ),
        )
    return l

# Icons from https://www.flaticon.com/free-icons/
# (free with attribution)
CALENDAR = base64.decode(
    """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAADsAAAA7AF5KHG9AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABWRJREFUWIW9l1lsVFUYx3/3ztw70xm6jFRKYUS7UCiUrVKjtISEhAdBjZGoD8YYA24vgitlMQ4JqWAQCTFtiIkWJDwohicxgD6wVRBBaKURWlqhSNtpSzudfe7mwwzTKXOnErb/053zP+f7/+93v/OdMzAGdu5oLKmv37soE9/QsG9eQ8O+eZn4+vq9i3buaCwZS0PIRGzb2vje8aZzX0iSRS8pfuRs3Wern0jl6+p27j579uIrAPPmlO1Z/8nbr6Xy69d9ebr98rV5iqKJ1U/Nev+Dj1ZsN9OxZjIwNBx4esaM4pMPj89uaP6rs+FWfmDAV11ZOf3r+PPQklv5nt7B8gVPVrzeN+B/x+cPLwVMDSQzcHnDBo/m9S43dN0CcDCvaEIMxEXD1wL/YJs4Ww+0py7c43xsSqmkDxcP91qGkJxleuBqKr9Nnzj1hVylSwxFXCK64dbCPQCCKGpCfv6+qXV1G5MZaPN4Vgb37/8UwxhJzYJ8dFHEdvKEaxoQhfJUAUvNJCz+IWfuH8fINeGFx59FuHKlqKC9FeK8a4QUKto8nq6pHs83IgA+33Op4gDZaoT2wTCXx7kYzSR4dC5EBa5mjTPLLDmyyBnZhVe2pZOGAT7f8wBxA7qeVguzzxxhYcyLaOgIRrqFxacPURHsTQRIx/LWo0wO9GPqPkUzYxEKmkZ5W0viR/pmsUQjzOpozbScLN8gc32DGfmbyPQCDwxWAKGyMiJNn/5AhQWHI5I0YKupuWrR9QdqwCqKV0cMOBzdNpPvfF9hGN1JA7eira2Lg4d+A8Db10ftxytwOOwcP3Gec+cuYhgQDA5Tu2YlAPt+/JWengFUVcPplHlj5fJR8ZTWVrBakcrK0rRMDVzuuMbvp+MVrihBenr6KS52c/58W3JcIJqc39TUTP+AD4Cc7HhIIxQidOAAtqoqBjduxOXxmCYi4za8a8gy0VOnCDQ2krNqFVJ5uek0UwMVM4tZtrQagJ5eL5MmFwBQXT2H/PxcDMPAPzycnP/Mshr6+ofQNA1Zju9swWrFtWkTsZYWbPPnZ/QpAHi7u9cgCJvv5EXvGIZRO6GwcItpBhRF5dq/fQAEg0EqZpYCEAiE6esfQtd1dENjaskUAPoHfPj9IaLRKHl52UwsGA/A9e5+olEFvz9IaYkbh8OepmVq4MjRP9n93U8AxGJBtn7+IW53AXv2/kxTUzMAghBj17d1AGzesguv9wYAeXkyO7avw+8PUbv2KwA0TaWqahqr3301Tcu0FauqmnwWBIjFlHggNaVZpRxQuqalPOuJGCNjggCKophJmRuw20eOUEEAhzMrMS6PLLSMLLXZ5IQnA0mWAJBkK5bEHMMwcDgcpgYyFmEwFAFAU1VycuJnvqbpRKIxdF3HIorJb6ooKjFFRVVVsuw25ISJaDSGqulEozEecuWMVh6rCAGcJgVjsYim45JkRZLSQ9lsMrYMsW7C1MClS1c4dPgUAL29XmrXrMDpzOLosXM0N1/CMCAQGGZtbbwVf//DL3i9N9A0DbvdyltvvphR8LYMdHReH9WKe3sHKC5209LSbtqKT55sSWvFt8LQdfSUwhUEYewb0b1EJBym7cIFjIQBi8VCQWHh/IwGKmaWmLbihQvnJlox+AO+5PybrVhVVbKy5LR4sUhklLhr/HgkOX5bjRsQRl8G3O4JvPxS2n8NZs8qZfas0rTxxYur/icHjBJPFRMBQqHQ5NuKcBcwE4dEBpRwOG8oFMLudCLeh5uRYRhm4gOQaEQdHR2PhgcH/1ZVNfOGvYewSlLElpNTVlpa2pU01dnZaTcikSXoeu59VRdFn2C3Hy4qKooA/Ae0ODVEYQHI9wAAAABJRU5ErkJggg==
""",
)

FIREWORKS = base64.decode(
    """
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
""",
)

HEART = base64.decode(
    """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAABIQAAASEBDb+0VwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAKrSURBVFiFxZfNS1RRGMZ/75mx0mtQ62pXOU4WqROGhDqkDhm0cCEk1aqibNUiqP6EoIIggnDTroKoNpLO2J0RURI/wkqTbFcRFBThpDbd+7aYxsqvmbHsPsvz8Ty/cw/c+1xRVbyU8TQ9F4DRSMSKh8P+fI3j4bB/NBKxsq2T+Vcw2dS0NvU9eVyUaiAEbANcgXcqdKijN0u7e4YXMxtrqC0X9IQgB4FNpA/4ChhUoa/Ab7Vv7eiYXRJgojEcUnVvAcHlqaXdceRs0LanAIYOhYqKpq3LAqeyHPi5C8eC0cTIAoDx+ro2Eb0G+LKYZPTMXzC7z/niVy30xYGKHPelVLSttKunfQ7gZUPtTmAQWJOjSUadKriiHMhz36zrOJXBx70vZLCyssDaaD0ByvM0+VsNJz8l95riDVaLB+EAFcUbrBajolUehAOgolUGJOQVAEjIAGXeAVBmgEmv0gVeG4QBrwAUBoyoPPEMQBkws2btXeCtB/nv1TF3zK7OzqSInv/f6YJcDNr2VPpbICIv62v6gf/0TpChQCyxB1VN9wFVdX3mCPBx1aPhsw89ys+v4FwhCT6yJ1E5BMysYn4KleZt0cR4ZuCPRhSIxftBjwDuqsQrJ0picfv3oQWVLBDtuadKK/DtH0Y7ICcDscSt+RMLKllGY401+43KfWD9X4bPqOrh0ljPg8UmlwSAdMfzwUOFLSsM/2Awzdujdu9SC5ZtxcFoYsTxpXaj3F9BeJf73exaLhyyPIHfNdFQd1rRK8C6LEu/oXIh0J24Sg7mOQMAjEfCZaJ6G9Udi80rjKuY1mCX/TRXz7wAAN5UVxdOWQWXgDZ+XaGLcqP4a+rc5r6+6Xz88gbIaKIxHHJxrwMYzJmSLntwJT4rBkjvFgHI5a5XB+AfyPO/4x9FiBTsX64VCwAAAABJRU5ErkJggg==
""",
)

TREE = base64.decode(
    """
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
""",
)

CAKE = base64.decode(
    """
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
""",
)

CONFETTI = base64.decode(
    """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAADsAAAA7AF5KHG9AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABbRJREFUWIXdlmtsVEUUx/9n7j7LtqUUKhDkEeS5pRDLoyUVtt2tSYkFChQDiTHyAYgaEiJ8MGBSjSYgiKAkEky0kSBQQzE0oqalbRARpAXZpZBWEBHCu6WlS7e99+4cP8Bu93a32zb4yfPp5n/PzPnNmXNmBngGY69nGtcVJvTU6zIzzbH8nWXFw51lxY5ITTwLABB8HubAnp5qUpepgmPMLZXgEpj0Omd50cdTyotK+wRggJqmZW1tSs860OTM2nwlPXtu5H/KqDkGgs6+/JnGkcJ3NT07K1JxlhVbQJzDTJOYaaNgutsnwNX0WaOIeaLUlHdYoP6xeHwh2kuWgoNLDWAsr0mWI4xMcjUxFUU4LXKWFTtM8QAUhqYSqZMbf70F4FZMJ6JGML9lQCKRLBhXI7WGZYd3T6woPGhSzTcAHAaLE2TtGhQToDE9ax+BR2sgmwBK40FCF0kQst3AxOweZNN29XRtKqx44Cwv2gDd9GXD8u/UuPMCvVdzpPEF95vszXsjHCR9Tn5TetYX4f8NntHc4Bre2/i4NTCzvl6LG/y8azAIr0EddChiyg0a0yYAYF/eeAT5EEhY+1pIXGsuKUi6u+6lUq7Le9EA4HWvYZ/HZdCKixXg6cq97lN8Pn9CvLkp9DHl8JIiIn7uknf6XpSUyEinW6/n1Pnr9cwR66yqY45lAU2vPN4XNJ/LHwlb0ExTq68DQIPT5TBTx3wiJUFKeXtiw5lTBEgCgMlHFo8VUvwFgAhY1LC0/GhootbN88Y9+FG9KrtA5jSBMdttATKJhZRRVdUXBABcnjw71WQSWxgYC0YlBLcCNJ4kpt0cZltoAgBLe+L9oMPfxExDJdPlyAk67si9sutJprR7Em3Vun3wy+aj7PX0CVHjcpmUB4H9UtC2Sd7fYmYtvAVgkKvWpdTm1uohqbmkIKmtsvWh3sbhYlUSCWM/tUMkUACgfmeiN+vuAgJHBgeA5EXaq8JBhk4JtjMeHtMAwA7wUfZ6PM8CQL39YAbB5/b5z+jO27u6jNRWwpgdNphSBADEzQQ3uBwImlYAPBfgBEBcg5TlNKP69/gAPvcrYFQAwI2SADqbDI2BZI8JaavC7R0Tgi/k5YHoI4C+BotKaGo7bDQJUqwCkxmafW3vAF53DQAXAAQag7j5fqfRgYAxW+2wjArvUBQEe91roNJBmlnVFj1/7gKw+Z+YAOovuXPMyeJ0pHZreycenwsa/ByzFIxYb4uUAmBR2J9zImQxj+L7e7QDegsbtKErLaAe3v6zQQQaDVB2kKwYSGFGAdzblJPT4dPHtRwxXlaWkQKJ86Mvzwf7NcDIOqDuiALQbuJzlkBbtQ71prHwUpdZQBbjrnVeCeLxOUP3dkNczJ0+IIDWzfPGBS7qTwYx0FxmzIIphZBSECML36pgGSXbIZXZAwLouMt7QscuAPjrovYYKQstUJKMWVBvMx7VGm5uPxifIFHf128A/rPAKiwyp6dD80FjFoQdGLI4+p3ScliH7JR3AHoX6BpN049voHG1nVGOvQEg0LUydbk1QViNqws0SvjPGrOQ7DHBnNY91DxCdCXMwFctNepEyqjaQhknH/YMdCM72x7rqU5A97ELwNlcpqLle+NDyDJcYPQ2O0jp1tpPBdH6k9pmfUHsTHOc/IBKEF0FT63ROSeHiCoBXJpw8fQsQrfvk4ry5RYAcAJASqEFbTU6gm3dvaXekXhUqyPZbQIACcaxxGz6MGntqTO9BTWsUmAqGDYAU29nZtpQX99hBIBYHxKEHRiyyIz73xj3vvUHTSa7lM9gxc7QK6e/pkl/qVk4wMSXR0YEB0Jb4PW0AJwSEjkIXN/YAe0OQ0mEtE1WqpVUZfXw7SeuDSRwf+xpBng3gPfCVAowbIXlb/8fskqkKuvTSmr9/3XgcCwgXIQlAN4GUA/GDmQc/5moxyH7f7R/Af6NVzxCetRYAAAAAElFTkSuQmCC
""",
)

NEW_YEAR = base64.decode(
    """
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
""",
)

PUMPKIN = base64.decode(
    """
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
""",
)

CLOVER = base64.decode(
    """
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
""",
)

TURKEY = base64.decode(
    """
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
""",
)

MLK = base64.decode(
    """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASJSURBVFiFrZZdTBxVFMf/987sDPtRdoGwCG1aTFtEhWqIWokJJbXVhtimaHzQpGrigy/GxKZR4UU0TY2JL4ZaDalpDDEx+tgXtTW20YZWG0VI2lJg2aXYwsLaZdnvmbnHB8ruzrLDDg3nac89H//f/dg7l8GWEes+cLqbER0hht0A/AAkAJgNj9zLYWBMErJDnVVkdfD877wX6BPlOrNyCd3PfekHl74HsKdUPA9gNofsjFa4qtp/vtB7Y63+fK3g4cNnfODSRSvxtUzTU75UIjLctff4tvsGYGntJIBmUwEn+N1ZeCs0MAASBxqrCS31BEUy1+tGRk2mEr+sqWEV6O4aaILA9ULILd40uh4Ow6PqywKCIRmeBhHd68ZxLlSJP6bz82IMUF21+3797cOSINYrQOgujDskgRcemcuJA4DMKS8OACSwv3EJbjU/RgTA0N+1krEEYGReer8nC5diWPLmTBh41E/mIaHvXDcACL5C16PoVpmrrMZtBoAQm9YPUGRbfGnbAI0++7BlARiAxxpiaK2P2W5aLSfxUqsGycb0ZKvAk7WB7U3e23CpHJ7aB2yLLxuh2buEo20GovEM/vmvxn3RIrMk49m3X2lurZ5uUSX7S2llFZLAU7Xzld+91t1kG4BLzA8b17RdYwBIiDrbAHUpzxABlzcKAGBDMVddyX4lAZ4YGNAkutvJGDvIFfmj+5XlFfIpweignFY63xoY0EqilWty5URPTZbRglV88c60Za2z0rHj2ePfTK4JWQ5gd+8nEQDXyuUVmyTL6XLitgAAgIDT6wXgcsWPtvLsJMXdiVMMGLUrLsmOtOFKvL5hAF3v9Gc04BDjsvWGrzSUHbrsVPd39X1r6+pc8xAeOvD1QzL0Trf38We4pOzb265E2reOtoSvj4Bo+bmXO4QMcPm3IljRETt7biahU/b8wvzYJc75hUtXPx9bBwCxF58feJM4ew+EnYxJ2FTVJgDwhnr13xMfb9ucTcZxNziJTCyK0OgIFG8tfK0dUKsb0P/ZT6mpwIITIBGev8YFGWAMN0mwT4f+7j8DgCwB+vr6+PCVzYOM6NWVMYdSBadnBwBA4kz/6uR22eHI71xwLl+v6wZ6jv5Ahm4wAIguhpDOLBbKDQ79VfNG4WvZdAaGLze8XygOALLDm/ttCJIDU9af5dDUAlbEAUBVip8BdOTptoVjhSM5gJc7v/Aw4IPippKj0uTfGEtZAkyOh02+sgoAYEDPrl3H3KsADFXeA6CyuMDQE0UASUuAifE5k69piVJpPpeU7lgFAMZKvt9T8UlkUrdz/uRUBrpGq/J03UAoEMn5iUQY0ditkqCc48FSAErJbACM5R/82axAILj6HEwHF6BpemERig58zogop2XrIuLczFZqGyZvmvdfkiznY+5tJymdugVQ/kk+PJKMFudMjM/l/lpEAvH47MYBCCODVHIm5wdDaWfhOTAMgcDEfA4gFr8D3cisD4BIXAVgWaVlwtCN+DgACEHq2EQ6tBKbCUV0wxAyAGh6MpBKRazaAKAl4uzPFe9/DXu/1KxdvvQAAAAASUVORK5CYII=
""",
)

PRESIDENT = base64.decode(
    """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANCSURBVFiF5Vc9iyVFFD331Js3g5uMq2uiiWK6gmBg4h8QwV9gsL9hQnNBmEA2EH+FIJiYqJmoianpssLqbjAwbGB33XMNqqo/3nSPvN5wHwxz6Trv3HM/+xXwsn9s7eDJJx9/YbQLM+5Jg5nh6quvkUikxOF/PPgMZgYzouGuH34zxXSJ6fL1u+efL/nhmgCXLiTtJYe7IAl9zvO/Pg9nU1yXM7p+wOz7nC/W/OzWDiTfR7SoAhFEl3OJSkRKCYmBEzkOcX3OEAkFkZiQIk6PF+CCMWbkfZ+hlCAGFAGRSKs4QkpQCkiriV4X4BIYNpKboc8+OJYIJeJkAdflXLMUSCJ2aYMAyRHGkdxqaqtjMRUxa7h2XktxvICW2gn5nDig4CKu6x0pBXZN7AuVwALBQt5lR+KYVomLuGmmWsNuykDQQDNYAEEbm2vS4Yu4yRS0jB0vQA4LVvKAtfGakIqxiOv6XBaREnYvNAWVsJH32SHFMFpKXMHl2QimTVPgQpiBHMnnqSUUaRHX9XmIXGnrFMhhRkSM5G0T7qIuI8Uiru2LRCJFacSjBbirEE7I+95rWmN42SzipvtChDZNgTRGVcnHJpyUYQE3NiGxSwnS+hSsvo7ffvhHWB0v0lDssu/ba5c3zsdnxuk58eOnby76urUEFoagIYJ1xku0EUVADOdWsJNnFuV7YUCEVjOwKiBLYBBRHVt13JwYDW/d2YE0/PV8KrYKro7bs6MFuMf/Rvz+q8BuRzy6zjcitkFMEb1BgG5E3Ag/eiPw4b2Ed84dp6eG++dn+PVZ4IfH3WpJtgtYIPzpb8OZdXj3TkayE/z+JOH7xwHaGPG8JFsESLMUHtb46XPHo6sOZ3vH0+s93LnQhKPobRm4pas9d/jyz1dAGj6428P9ZBbxvGc2bsLbuvqXqzPQAiTw8z+E2VLPlCkSN4xh6YH1rj6s8WHE071ht5RgOPntvfthNm680S6XjmXbYOTErheURbvyVvu1b7+zWQYkdWa2tzCg7vUW5eH7frQNFvWnWM2KEeX1PPmRylYSCxCEmf3b/A7d4dkvJXWS6g3Hy41nuPkU2+staLR1YPsML/l4Vri7cF2u1uSl+/wHpoxo88vjg0EAAAAASUVORK5CYII=
""",
)

COLUMBUS = base64.decode(
    """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAAsQAAALEBxi1JjQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAWNSURBVFiFxZd/bFbVGcc/zzn3ve+9b0tb2irQH2DRhAQUf0yJwjYMiy4GYUSjUfzVEfy5oCDqkmVbyObmtmB0iQkm3YY/METdSKYGSdDEZUGRDjMx4BRNxbaTyvr2bWvfX/eee/YHtvR9e9/SSpY9yUnuyXOe7/M5597znHOFM7T0pa3nW0f98J6aS+7/cjg3/Ld39tRPJ975JkkHr2ipx+i1FtsOfGsETbeu4iuTr52u1rQB7A3owWPqMNjZ042NMzXdAHkZg+UVoPB/AQCo6/z8boVpFmQDcPBMAEpewbdXrpuPCn9pxfnFvlf+9NFkgTUHevuBp4Cn3lh68RXA2wYJzwgAZa4FWSuEB4ASgEPd3cuBy+NERrJZf+XefdTPatALFz+xu0QSPl2+YMGGSgByqKfnReBSgGwuX5sdyTWkqvz+lO8NIpJD5I7FTU0HD/X0/BO4sJKQMYbewcFYX2119ervzJ//apzPAZYBzQAp3yPlewANQAPWQhS1c/I9758MYDIzYXg7EAugrLV7Jo0WuRJA4LVKQxJdR6ne/Wcat20l+dmnE/xBGC6rFOuIyJFJAeBcgGFr36wWyQNe+YCzH92M+c8Jjmdy1L1/kL6nd5YCGDP7pcOH3RsXLSqWxyoLudMA+F1dXd7S1tacQPd4hx7KQBQxsO6Bk7PRmuG7N6KGMqihzNi4yFqZlUjEfsAKaD0NwHBbW1sewMK/x5Jn0jStX03j1p9inZObSZTC7T5Gw10303DXTaUq1l4WJ+6IyFVYWzG7wPvjun1j5AP9SBiS2v8Wqf1vUQSCIIDtT1MEtCqrcTa+dCusnXQFLDx/ikZqxp4TLgBB81xGVqyEr5N657ShREDKZyJ+nL4jIpdZWACw6y+vX9fT/cW9La1ztl13/TW7sHbkgubm/eNm0TT6GLTMY6B9A/mLLyeqqeOsva+hXZe+xzuo3/lHbCJZml+p/jiAEs5lq9o3CvYJi2za9+ozT5ashLXyQW/vCU7WiBKbc/9a7LEuPsrk8ObNo+/J7RMSzUilblp+3nkvTliB391QNbsgnJ90Ei1fmPdWZEwNdXpoxfW3NGrl53Zs/MNIH8CR3t4L45ID5JZ8F1Vdi3fkQ4IlE7e8ALlCYW9crBNgDyhLaxAUaeQTGgWIWJUrsiphnIeB2QAGVsUJAGRuvQdjDH0VSrHrOOmrFi5Mx/mUwGNi6fASXui7HqNNRAiNmfX725vmAlj4fiWA05l2nL9W8jk/eTm7DaBjfeMiYOmow2LJFwuENr8J2CTwLjAnTsSC6h8YPEcEtFZBSXKlhotB8FBFgNEHsXRaOQWQdFzyxQImNKuBTYtbWjYDm+NErlzTXpcvhAPpdDr38bu7U5WSTQoQKemUcQXJdVwQwZiwbettDY+kQr3nvp1fHpqq8K/WnHVRNso+iiq9dYm1hXwQHrAWI5Y94y4kYSfoUwNFcLVDMQykkM/9NhD5zZYtuFu2MKVbz/Hs0Hu5ICovR6O2BkAreWyM7s6O3qNAZvyoaq8K3/XQShNZKzVH6382leQ//4H/43wQiRJhhqdimh5IJeRDz+XZEsKO9XPfAL5XLlgMimSyQ4DgKD0sUPKhIUjO6JknhrJgscUwksjCzCpFna/L5UgmE1c/tGNwL0y8FXfGzchNuNT4M1AihFE4I4jC+pJmwpmYAvliRD6IxAIzU5ramOQKsZt3DL452i/7MZFOiD8ZPTeJ5yaJoggbM8Yag5UhBNBq4lk0atrRaYEoFkCbwt+NdgMgUSEeVX7Mfm0RkJjCX4YW/Y8SvfGddduPnwB2nV7mm5rg28QjFQEA3KL5EfCv/0V6300+Xl5LJgDc8Vxvv4r8JSC/tsIRmNq+r2SiVJTQieO+n7rlwRfSE0ryfwFFZgscXo7VsgAAAABJRU5ErkJggg==
""",
)

MEMORIAL = base64.decode(
    """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAUeSURBVFiFvVdZbFRVGP7uPXed9k7vdLrSTotdMjQu1EJZxWBjBCwYlADtg9EQUSLRxIRAChirhAYwUYLR2hdJQOEBNApBE5VCym5YBEqBsgRiF1pamIWZ6V2PLxSQzp0uqXxv9/+//3zf+c89555LMPrgM7xyiw3abZr0wv8wfmIoSVLdqzPy7IxUOQogfTA+GWX9IpdMth7YXiWwts5fa4+UBMPazlHWcIbXI//8bV2lSW+spdqppXRsjqID8CeqGU4HJABmgjzP86R+x5bX5Q31R1GQp0LmbHLm4t1gTDManYrYoSinpYorVLfUDsCdyCADEI6wOHLyH3R0R6G4eAgCshKNPZQOFCTJwu4FFWOVnqBeFAxruxx4epLMz+y8Hc5t6wxzqgxs3HpWb++OLAPQOQSd+PCo8oH69ZVW7ORSWuhz6wDGJaArssQ1AqCEZUwAlSMWvo/ygnxPwLq+ltLWFfT7upm0wJdy3IksEFKlcnzwJ3+ZvUhNt32CfA5A6ojVlSRh05ZPZ5uXGt+nH7xVTq0z79BdX8yOe7gIhLyRJ8mh1hlzqDVrITVfnEfXZ+bbYwTxJgDeSYNLZMC2KdF1i7kTiOHqzbuwbIpUVbLicT2EX5UtysrqK+cfBnWNCZmmD8BEAMeGbSASMxrWfdW0ZPmb5WpPbxhVqxrtUy295+NxLdDUZXmFyBHlhxMIhXDHMGjjvUCak0ZCAwBagyFt3sZvjhykAGluJb/GNPNtJ/JUNQ3FruSHBsBh2+0OmkhgsHOgIIXnt32UV2T8NW4issDN8QlS7SA1w0KiDrjcHHeovqQsa3F2HgsAx0WZzL/y9yqd0q4uQ9syGgYSdaB8gtsj94sDgFf1YHPmWKIQ8uFoiA9mwO3hRab/IWpZAAO4CQeD0qQnYeABlrechu/gXqy53jJaug8w2C4AAOzp7sDpaa/ghRP7YSneUTWQsAOGbTMUgGZbyBYlNPhL0W0aT87AH71dyqyTTSh1eyCwLOZ4M1GTnjssAYlhASA6IgNTVG905VN+7CmbPizRR/F1brEJYL9TnnGIFyUL3LYkhnt+QopH7w+ylLJGn+Y6HA2ZisJvuBXo+wQAUiSups+w10xRvTSJcHY/XzAsiVIbp9jI4bY7sfcAXB2SAYlj11eW5qyeURzvUksRjpqo+63FjOmWCAAix0Y2LiyV4o2lGTaaWrvRdLn787Bmrnw877QETp0ZMWyHuJPQOJZhmqcWpcUGFFDw7YGo0BPR9oRj5nwAEDmyO1uV5uZ4XAO2CAO4jl3rYSyblgC4/Hje6Ry4xBPG2LRwfDIA3A5rONsWwMslmYhqFnYev4EdJ26e6ydbNm2eO37MgurJ+SIA/HmxC8/lqshQRPSGNCxuOGrGbGuAeCIDoADTEYghopmo/aUZLMugM9CHaYVehLWBt/NQzERHIIb9F7vw+4VbsClF7WvPQDds0JEsKcswlj/LTX2pLjrdn0731VRQWSC0OFOhackilTj2swezYNnaDEWk/iw3lQVC99VU0On+dOpLddGijGRKWMbpFXDuAE8Y/bslkyTLpli39wKqNx/Cl1VlKExP7l+C//AXTcpD9eR8nG8LonrzIUwu8OKHd6cicE/H4oajVsyOe5Mb/FtAWAYfz3sad6M60pJFRLX4A/Xj2dwUbF86BR6XAMIO3vl4jB8BvARAFTlWG1DAMKxlU86wbA1A3/2wxLEMf/9f4PEJcFHdIgACAA4AWPBo/l9lte1QUUMxLwAAAABJRU5ErkJggg==
""",
)

LABOR = base64.decode(
    """
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANYSURBVFiFtZdNaBxlGMd/z0x2k+3urBVrK7SavYjiIV9qKiJkh9AeioigKIlUEARBq4LoxYMgtKKU0mKrxYugF63ooehBbLVVjNgQMk0EqaLZTT0UkbY0k5Ldzc48PTQbs7OZzMw2/cPLMO/7vP/nNzPv1whtSEvFg8CrgFBaqsziyPbTA0m9jHYAgCIgTTU17m3HqCNJsJaKBZQnge6WRo8uPVP8mrS8K/2nxuJ6SnQI6M/2PdT8t9hsDJPVLU2NpUBwVTz+9b/ArL8tu8f+iPKO/AQ6U9xDWr8FGUUCyVeTpyYqI+RSjo7bn98QgJaL+xEOY1KITNwCQoZ5fVrH7TNtAejM0BsorydOHNS8Duq4fTwRgM7YvSDv3HDy/yEe0wl7NDYA4n+IrJghEriuJSNwbajqH40FoCV7COThpso8sAnIxADoBG4DrCCA5HVi6MVIAIRnWurMVQzDJEBuqU9QdV6KBlDdETNVci1y95oAWipuhDamXGwASekvj24NBcA3N9+05A11XW3aM5oBDG/DTQdQ3bTydnli6Q/FLzHYjsm2RIblxAgepv7HyI9bRfANgOnp6Vsrqbsex2cbi5Co1BMX0yNzx0/jU92wtB171p167pYPVps4zVI92F/Iv7ZWyAnHdRaq9EVZZa26D0kPJCLPTf3lhg7Uk7/N91Rr9CaxNACqdd+PGb9R0xyfvODe3pJ80r2vXtMxX+OdMah5dVgxCJ3zc/tRWX51Ao8odIV0v4jykSH666XLOuipMVxZ5CHfD0kuSmeKS41bw+DvHX35wSaAoJxZ9xjwVNSD/HMhKgK60pzfOWC1HuNYcwzo+9HW8ZRO696wtnAAlV3rBVCrywuJAJyyuw/hzfUCqFS4/7uz7kQsAKc89/x6Jl8JcdKZ+yQSADFmub5mBaVLpW2ZpvF7JEB/d+6EwkgAQhH2GGo8oCIfC1Ra3EXJdMqf2YyMbshwLNhsZeWA3ZN7r6VbGO1k2X1ChM+ADlFe6StYRxptzqzrwPXltjENO0wWdj1oLe+m30/NfXp1QXYjkM1wZLjHenm1PKG/ZgMF6yun5O4UQ3N9hfw3YXFhGu7NP3vq7JVZxLxo9+QOhcXFWzYDivMG4qrdv+PTBAZkqoNz7RhdA47RKLAVk37bAAAAAElFTkSuQmCC
""",
)
